[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a Deadline kind of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * In addition to the information in the base Task object, also contains a Date object representing the task deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Deadline. Assumes it is undone."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date of the task deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Deadline. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of Deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the Deadline is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date of the task deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Deadline(String description, boolean isDone, Date by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Date getByDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status, description, and deadline of the task as a string,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * with a flag indicating it is a Deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the Deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the Deadline as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the Deadline."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"D`\" + super.toStorageString() + \u0027`\u0027 + by.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 57
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Models a personal assistant chatbot for tracking tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Allows the user to add, remove, and mark as done different kinds of tasks,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * and stores them in a local text file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Boolean exit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        // Retrieve existing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Storage storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            taskList \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String nextAction \u003d Parser.parseInput(Ui.getNextLine(), taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (!nextAction.equals(\"exit\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            nextAction \u003d Parser.parseInput(Ui.getNextLine(), taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 31,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public EmptyDescriptionException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents an Event kind of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * In addition to the information in the base Task object,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * also contains a Date object representing when the event occurs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Event. Assumes it is undone."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date and time when the Event occurs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Event. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the Event is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param by Date and time when the Event occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Event(String description, boolean isDone, Date at) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Date getAtDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status, description, and datetime of the task as a string,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * with a flag indicating it is an Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.toString() + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the Event as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the Event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"E`\" + super.toStorageString() + \u0027`\u0027 + at.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 58
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public InvalidCommandException(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Parses user input and carries out corresponding actions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Creates, deletes, marks as done, or lists all tasks as per user input,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for parser."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Parses user input and carries out appropriate actions."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param inputString Line of input from user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList Existing list of tasks to be modified."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return \"continue\" or \"exit\", depending on whether the user quit the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String parseInput(String inputString, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        sc \u003d new Scanner(inputString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                return \"exit\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.displayAllTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                int taskNo \u003d Integer.parseInt(sc.next());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.markTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    String description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    if (description.equals(\"\")) throw new EmptyDescriptionException("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                            \"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    taskList.addTask(newToDo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String deadlineDesc \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(deadlineDesc.split(\" /by \")[0],"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                        dateFormatter.parse(deadlineDesc.split(\" /by \")[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String eventDesc \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Event newEvent \u003d new Event(eventDesc.split(\" /at \")[0],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                        dateFormatter.parse(eventDesc.split(\" /by \")[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                int index \u003d Integer.parseInt(sc.nextLine().trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.deleteTask(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            case (\"find\"):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String keyword \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                taskList.findTasks(keyword);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            // write all tasks to file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            FileWriter fw;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw \u003d new FileWriter(\"tasks.txt\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String dataStr \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    String isDone \u003d task.getIsDone()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                            ? \"1\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                            : \"0\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    dataStr +\u003d task.toStorageString() + System.lineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw.write(dataStr);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return \"continue\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (InvalidCommandException | ParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            return \"continue\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 102
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"EEE MMM dd hh:mm:ss zzz yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Scanner fileSc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        if (!file.canRead()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                String[] nextLine \u003d fileSc.nextLine().strip().split(\"`\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                boolean isDone \u003d nextLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                switch (nextLine[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new ToDo(nextLine[2], isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new Deadline(nextLine[2], isDone, dateFormatter.parse(nextLine[3]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new Event(nextLine[2], isDone, dateFormatter.parse(nextLine[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newTask \u003d new ToDo(\"Unknown task\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        fileSc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 51
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a task that can be done or not done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Provides methods for the user to mark the task as done, and to represent the task as a string suitable for"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * data storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for task. Assumes the task is not done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for task. Allows the user to indicate whether the task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean for whether the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Returns a tick icon if the task is done, and a cross if it is not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return A tick or cross icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Changes the status of the task to \"done\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status and description of the task as a string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the task as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String isDoneString \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return isDoneString + \"`\" + description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 74
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a list of the user\u0027s tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Provides methods for adding, deleting, and marking as done each task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for task list. Initialises with an existing list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param tasks List of existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for empty task list. Assumes no existing tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays all the tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void displayAllTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d tasks.iterator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Task task \u003d iter.next();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.outputTaskAdded(task, this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param index Index position of task to be deleted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task removedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.outputTaskRemoved(removedTask, this);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param index Index position of task to be marked as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Ui.outputTaskDone(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void findTasks(String keyword) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                Ui.outputTaskDetails(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 91
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Represents a ToDo kind of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Contains no additional task information on top of the base Task object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for ToDo. Assumes it is undone."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor for Todo. Allows user to indicate whether it is done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param description Description of ToDo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param isDone Boolean representing whether the ToDo is done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the done status and description of the task as a string, with a flag indicating it is a ToDo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Represents the ToDo as a string in a format suitable for data storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return Data storage-friendly string representation of the ToDo."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return \"T`\" + super.toStorageString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 45
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Reads user input and prints response as output."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Constructor method for UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays an initial welcome message to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays an error message upon failure to open data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Unable to open file. Initialising empty file list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Reads the next line of input from the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @return A single line of user input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static String getNextLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a new task has been added to the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList List of existing tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void outputTaskAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getSize() + \" task in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a task has been deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param taskList List of existing tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void outputTaskRemoved(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Displays a message informing the user that a task has been marked as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * @param task Task that was marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void outputTaskDone(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public static void outputTaskDetails(Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 83
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Test class for Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates a new Deadline task, and checks whether its toString() method gives the correct output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(\"Sample Deadline\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    true,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    dateFormatter.parse(\"2/12/2019 1800\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lumos309"
        },
        "content": "            assertEquals(\"[D][\\u2713] Sample Deadline (by: Mon Dec 02 18:00:00 SGT 2019)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lumos309"
        },
        "content": "                    newDeadline.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 27
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lumos309"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lumos309"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lumos309"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lumos309"
        },
        "content": " * Test class for Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lumos309"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lumos309"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     * Creates a new task, and checks whether its toString() method gives the correct output."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lumos309"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        Task newTask \u003d new Task(\"Sample Task\", true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lumos309"
        },
        "content": "        assertEquals(\"[\\u2713] Sample Task\", newTask.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lumos309"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lumos309"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lumos309": 17
    }
  }
]
