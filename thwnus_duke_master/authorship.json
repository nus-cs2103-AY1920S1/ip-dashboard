[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 16
    }
  },
  {
    "path": "expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Unknown command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e \u003e Invalid task ID"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Invalid task ID"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Invalid number asdhagsdh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] asdasdg"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdfusdguiohdfg"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [D][ ] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[T][✓] asdasdg"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "7. [D][ ] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "7. [D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[E][✓] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][✓] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "thwnus": 66
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "thwnus": 100
    }
  },
  {
    "path": "input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done asdhagsdh"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo asdasdg"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo sdfusdguiohdfg"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "event sdfjhsdfjsd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "event awdfksdhjfjkh /at sdfjksdhfgudfg"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "deadline sdfjhsfgjh /by asdfdfhguidfgd"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "deadline fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "thwnus": 21
    }
  },
  {
    "path": "runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if ! gradle assemble; then"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Build failed.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "diff \u003c(java -cp build/classes/java/main seedu.duke.Duke \u003c input.txt) expected.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Output matches.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "else"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Output mismatch.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "thwnus": 15
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "thwnus": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final String PROMPT \u003d \"\u003e \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try (InputStreamReader isr \u003d new InputStreamReader(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "             BufferedReader br \u003d new BufferedReader(isr)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.print(PROMPT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.flush();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } else if (line.isBlank()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    System.out.println(\"No command entered.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    Command c \u003d Parser.parse(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        System.out.println(\"Unknown command.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    } else if (c instanceof ByeCommand) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        c.execute(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } catch (CommandException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.err.println(\"IO error.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 49,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    boolean execute(List\u003cTask\u003e taskList) throws CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(Throwable cause) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message, cause, enableSuppression, writableStackTrace);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Annotation;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.reflect.Constructor;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.reflect.Parameter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    // This class is to be used statically only."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private Parser() {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static HashMap\u003cString, ConstructorCache\u003e constructors;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        constructors \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(ListCommand.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(ByeCommand.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DoneCommand.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(TodoCommand.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(EventCommand.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DeadlineCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DeleteCommand.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static \u003cA extends Command\u003e void addConstructors(Class\u003cA\u003e clazz) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (Constructor\u003c?\u003e c : clazz.getDeclaredConstructors()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            CommandConstructor ccAnn \u003d c.getAnnotation(CommandConstructor.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (ccAnn \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            ConstructorCache cc \u003d new ConstructorCache((Constructor\u003c? extends Command\u003e) c);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            constructors.put(ccAnn.value().toLowerCase(), cc);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            boolean seenTrailing \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            for (Argument a : cc.getParameterAnnotations()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (a \u003d\u003d null || !a.trailing() || !a.prefix().isBlank()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (!seenTrailing) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    seenTrailing \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new RuntimeException(\"Cannot have multiple trailing arguments without a prefix\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Parse a command line and return an object implementing {@link Command} that represents"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * the command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param in The command line to parse"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return An object representing the parsed command, or {@code null} if no matching command was"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * found"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @throws CommandException if there were insufficient arguments or some arguments were invalid"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * for their type"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static Command parse(String in) throws CommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        String[] tok \u003d in.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        ConstructorCache ctor \u003d constructors.get(tok[0].toLowerCase());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (ctor \u003d\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Class\u003c?\u003e[] paramTypes \u003d ctor.getParameterTypes();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Argument[] paramAnns \u003d ctor.getParameterAnnotations();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Object[] params \u003d new Object[paramTypes.length];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (int i \u003d 0; i \u003c params.length; ++i) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Argument me \u003d paramAnns[i];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (tok.length \u003c 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (me.trailing()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    params[i] \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    // We have a new argument, but there are no more tokens"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new CommandException(\"Insufficient arguments\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // Three cases here:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (1) We are not a trailing argument. The next token is our value."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (2) We are a trailing argument, and there are no more arguments after this. The"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            //     remaining tokens are our value."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (3) We are a trailing argument, and there is a prefixed trailing argument after this."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            //     The next token up to the prefix of the next argument is our value."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            String value;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (me \u003d\u003d null || !me.trailing()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 1"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                tok \u003d tok[1].split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (i + 1 \u003c params.length) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 3"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Argument next \u003d paramAnns[i + 1];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                tok \u003d tok[1].split(\"\\\\s\" + Pattern.quote(next.prefix()) + \"\\\\s\", 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 2"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (paramTypes[i].equals(int.class)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    params[i] \u003d Integer.parseInt(value, 10);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new CommandException(\"Invalid number \" + value, nfe);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (paramTypes[i].equals(String.class)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                params[i] \u003d value;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                throw new RuntimeException(\"Unhandled argument type\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return ctor.getConstructor().newInstance(params);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new RuntimeException(\"Unexpected exception invoking constructor\", e);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static class ConstructorCache {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Class\u003c?\u003e[] parameterTypes;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Argument[] parameterAnnotations;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Constructor\u003c? extends Command\u003e constructor;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public ConstructorCache(Constructor\u003c? extends Command\u003e ctor) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.parameterTypes \u003d ctor.getParameterTypes();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.parameterAnnotations \u003d new Argument[this.parameterTypes.length];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.constructor \u003d ctor;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Annotation[][] paramAnns \u003d ctor.getParameterAnnotations();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            for (int i \u003d 0; i \u003c paramAnns.length; i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Annotation[] as \u003d paramAnns[i];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                for (Annotation a : as) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (!a.annotationType().equals(Argument.class)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    this.parameterAnnotations[i] \u003d (Argument) a;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Class\u003c?\u003e[] getParameterTypes() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return parameterTypes;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Argument[] getParameterAnnotations() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return parameterAnnotations;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Constructor\u003c? extends Command\u003e getConstructor() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return constructor;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 171
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/annotations/Argument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.annotations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.ElementType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Retention;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.RetentionPolicy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Target;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Target(ElementType.PARAMETER)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public @interface Argument {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    String prefix() default \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    boolean trailing() default false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/annotations/CommandConstructor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.annotations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.ElementType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Retention;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.RetentionPolicy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Target;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Target(ElementType.CONSTRUCTOR)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public @interface CommandConstructor {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    String value();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public abstract class AddCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected abstract Task createTask() throws CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d createTask();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"Got it. I\u0027ve added this task:%n  %s%nNow you have %d tasks in the list.%n\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                t, taskList.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"bye\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public ByeCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean execute(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"deadline\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeadlineCommand(@Argument(trailing \u003d true) String description,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                           @Argument(trailing \u003d true, prefix \u003d \"/by\") String deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new DeadlineTask(description, deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"delete\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeleteCommand(int id) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (id \u003c 1 || id \u003e taskList.size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Invalid task ID\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d taskList.remove(id - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"Noted. I\u0027ve removed this task:%n  %s%nNow you have %d tasks in the list.%n\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                t, taskList.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"done\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (id \u003c 1 || id \u003e taskList.size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Invalid task ID\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d taskList.get(id - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        t.setDone(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf(\"Nice! I\u0027ve marked this task as done:%n%s%n\", t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"event\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public EventCommand(@Argument(trailing \u003d true) String description,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        @Argument(trailing \u003d true, prefix \u003d \"/at\") String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new EventTask(description, time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 29
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"list\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean execute(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.printf(\"%d. %s%n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"todo\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public TodoCommand(@Argument(trailing \u003d true) String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new TodoTask(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeadlineTask(String description, String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"[D]%s%s\", super.toString(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                deadline !\u003d null \u0026\u0026 !deadline.isBlank()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        ? String.format(\" (by: %s)\", deadline)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        : \"\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public EventTask(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"[E]%s%s\", super.toString(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                time !\u003d null \u0026\u0026 !time.isBlank()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        ? String.format(\" (at: %s)\", time)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        : \"\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format(\"[%s] %s\", done ? \"\\u2713\" : \" \", description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 12
    }
  }
]
