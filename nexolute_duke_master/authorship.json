[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String isDone \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"D | \" +  isDone + \" | \" + this.description + \" | \" + dateFormat.format(this.by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateFormat.format(this.by) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    private static final String SAVE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            tasks \u003d Duke.loadTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        } catch (ParseException | FileNotFoundException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                File file \u003d new File(Duke.SAVE_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! There\u0027s problem with the IO.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    Task task \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(task.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        String at \u003d description.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        description \u003d description.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Task task \u003d new Event(description, dateFormat.parse(at));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(task.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"â˜¹ OOPS!!! The date is invalid.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        String by \u003d description.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        description \u003d description.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Task task \u003d new Deadline(description, dateFormat.parse(by));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(task.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        Duke.saveTasks(tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                        System.out.println(\"â˜¹ OOPS!!! The date is invalid.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            } catch(InvalidCommandException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            } catch(EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nexolute"
        },
        "content": "                command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    private static String convertTasksToText(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            text.append(task.toSaveString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            text.append(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return text.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    private static Task convertTextToTask(String text) throws ParseException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String[] tokens \u003d text.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String type \u003d tokens[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        boolean isDone \u003d tokens[1].equals(\"1\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String description \u003d tokens[2];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            task \u003d new Event(description, dateFormat.parse(tokens[3]));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            task \u003d new Deadline(description, dateFormat.parse(tokens[3]));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nexolute"
        },
        "content": "         return task;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    private static ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        File file \u003d new File(Duke.SAVE_PATH);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            Task task \u003d Duke.convertTextToTask(scanner.nextLine());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    private static void saveTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            FileWriter fw \u003d new FileWriter(Duke.SAVE_PATH);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            fw.write(Duke.convertTasksToText(tasks));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nexolute"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 175,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 3
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String isDone \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"E | \" +  isDone + \" | \" + this.description + \" | \" + dateFormat.format(this.at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateFormat.format(this.at) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 25
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 3
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nexolute"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        String isDone \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"T | \" +  isDone + \" | \" + this.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nexolute"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nexolute"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nexolute"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nexolute"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nexolute": 17
    }
  }
]
