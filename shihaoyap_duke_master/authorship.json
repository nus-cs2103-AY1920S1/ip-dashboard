[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "shihaoyap": 35
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "**Duke** is a task management application. This desktop application enables users to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "create different types of tasks (Deadline, Event, Todo) and store them into a list; "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "display all the existing tasks in the list; locate/find specific tasks using keywords;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "and management the different task (deleting and marking as done). This application uses"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "a command line interface; this means that users can operate the application by typing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "commands into a Command Box."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## Quick Setup"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "1. To run **Duke**, please Ensure that you have [Java 11](https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html) or above installed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "1. Download the lastest Duke.jar file at [here](https://github.com/shihaoyap/duke/releases)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "# Features"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 1. Adding and Creating a Task: Todo, Deadline, Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Allows users to add a new Task into Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Todo Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t todo [Task_Description] - e.g. \"todo MA1101R Tutorial 2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  [T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Event Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t event [Task_Description] /at dd/mm/yyyy HHMM - e.g. \"event Attend Wedding /at 02/12/2019 1800\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  [E][X] Attend Wedding (at: 02/12/2019 1800)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Deadline Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t deadline [Task_Description] /by dd/mm/yyyy HHMM - e.g. \"deadline Submit Project /by 12/09/2019 1500\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  [D][X] Submit Project (by: 12/09/2019 1500)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Note : *Duke* does not allow any duplicate [Task_Description], so do remember to input a unique [Task_Description] when"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "creating new Task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 2. List and Display all Task in the current list: List"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Shows and Displays the whole list of task in the current list, together with their descriptions and date/time information. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### List"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t list - e.g. \"list\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  1.[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  2.[E][X] Attending Wedding (at: 02/12/2019 1800)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  3.[D][X] Submit Project (by: 12/09/2019 1500)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 3. Find and Display Task by keyword: Find"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Finds and displays tasks with descriptions that corresponds to the input keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t find [keyword] - e.g. \"find tutorial\"   "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  1.[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 4. Deleting a task on the list: Delete"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Locate a task which corresponds to the input index and remove/delete it from the current list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t delete [index] - e.g. \"delete 1\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  [T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 5. Marks task as \"done\": Done"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Locate a task which corresponds to the input index and mark it as done."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t done [index] - e.g. \"done 1\" "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  1.[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  2.[E][X] Attending Wedding (at: 02/12/2019 1800)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  3.[D][X] Submit Project (by: 12/09/2019 1500)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 6. Sorts the current list: Sort"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Sorts the current list of Task according to either time or event type."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Sorting by event Type : Todo -\u003e Deadline -\u003e Event."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Sorting by event Time : Earliest event will be placed first on the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Sort"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t sort [sort_type]- e.g. \"sort type\" or \"sort time\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome: Sort type"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  1.[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  2.[D][X] Submit Project (by: 12/09/2019 1500)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  3.[E][X] Attending Wedding (at: 02/12/2019 1800)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome: Sort time"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  1.[D][X] Submit Project (by: 12/09/2019 1500)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  2.[E][X] Attending Wedding (at: 02/12/2019 1800)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "  3.[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "__________________________________"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## 7. Exiting the program: Bye"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Exits and Closes the program"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\t bye - e.g. \"bye\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Closes Program"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "### `Keyword` - Duke Functions"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "1) Todo [Task_Name]"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "2) Deadline [Task_Name] [/by] [DD/MM/YYYY HH:MM]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "3) Event [Task_Name] [/at] [DD/MM/YYYY HH:MM]"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "4) List"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "5) Done [Index]"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "6) Delete [Index]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "7) Find [Key_Word]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "8) Sort [Sort_Type]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    - Sort By Event Type [sort type]"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    - Sort By Time [sort time]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "9) Bye"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "## Others / Credits"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Images from https://www.pexels.com/ [Free Stock photos]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Codes - Self Written"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "shihaoyap": 197
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[D][X] Submit CS2103 Ip (by: 01/10/2019 2359)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[E][X] Joshua\u0027s Wedding  (at: 05/10/2019 1700)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[T][X] MA1101R Tutorial 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "[T][X] CS2100 Tutorial 3"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "shihaoyap": 17
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private DialogBox(String text, Image img, String type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (type.equals(\"user\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox2.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return new DialogBox(text, img, \"user\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Gets a Duke response and Creates a DukeDialog response box."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param text String format duke response"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param img png Image of Duke"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a dialog box for the application to display of Duke\u0027s response"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"duke\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 73
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * A launcher class to workaround classpath issues and launch application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assert stage !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            stage.setTitle(\"Duke Application\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * initialises the MainWindow Ui."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        scrollPane.setFitToHeight(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Sets Duke object to allow MainWindow.java to have a duke object to use"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param d takes in a duke object and pass it for MainWindow to use"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                DialogBox.getDukeDialog(duke.getStartMessage(), dukeImage));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private void handleUserInput() throws DukeException, InterruptedException, DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                DialogBox.getUserDialog(duke.reformatInput(input), userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (response.contains(\"Bye. Hope to see you again soon!!\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Thread.sleep(500);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 70
    }
  },
  {
    "path": "src/main/java/duke/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve ByeCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the ByeCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return ui.printBye();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 19
    }
  },
  {
    "path": "src/main/java/duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Abstract method execute method as part of the abstract class Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException for invalid inputs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public abstract String execute(TaskList currentTaskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 20
    }
  },
  {
    "path": "src/main/java/duke/Commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DeadlineCommand(String inputString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve DeadlineCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (!inputInstruction.contains(\"/by\") || inputInstruction.length() \u003d\u003d 8"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    || inputInstruction.length() \u003d\u003d 9) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String subInput1 \u003d inputInstruction.substring(9, inputInstruction.lastIndexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String subInput2 \u003d inputInstruction.substring(inputInstruction.lastIndexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task newTask \u003d new Deadline(subInput1, subInput2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printDeadline(newTask, currentTaskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 41
    }
  },
  {
    "path": "src/main/java/duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DeleteCommand(String inputString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve DeleteCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (inputInstruction.length() \u003d\u003d 6 || inputInstruction.length() \u003d\u003d 7) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            int taskNum \u003d Parser.getTaskNum(inputInstruction, ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (taskNum \u003e currentTaskList.getNoOfTask()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"index\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (taskNum \u003d\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"indexInt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String outputString \u003d ui.printDelete(taskNum, currentTaskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.updateTaskToFile(currentTaskList.getEntireList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return outputString;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 45
    }
  },
  {
    "path": "src/main/java/duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DoneCommand(String inputString) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve DoneCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            int index \u003d Parser.getTaskNum(inputInstruction, ui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"indexInt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (currentTaskList.getNoOfTask() \u003c index || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"index\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task currentTask \u003d currentTaskList.getTask(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.updateTaskToFile(currentTaskList.getEntireList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printDone(currentTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 42
    }
  },
  {
    "path": "src/main/java/duke/Commands/DuplicateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DuplicateCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DuplicateCommand(String inputString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve DuplicateCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return ui.printException(new DukeException(\"duplicate\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 27
    }
  },
  {
    "path": "src/main/java/duke/Commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public EventCommand(String inputString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve EventCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (!inputInstruction.contains(\"/at\") || inputInstruction.length() \u003d\u003d 5"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    || inputInstruction.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String subInput1 \u003d inputInstruction.substring(6, inputInstruction.lastIndexOf(\"/at\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String subInput2 \u003d inputInstruction.substring(inputInstruction.lastIndexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task newTask \u003d new Event(subInput1, subInput2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printEvent(newTask, currentTaskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 41
    }
  },
  {
    "path": "src/main/java/duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public FindCommand(String inputString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printFind(inputInstruction, currentTaskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 29
    }
  },
  {
    "path": "src/main/java/duke/Commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve InvalidCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return ui.printException(new DukeException(\"invalid\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 20
    }
  },
  {
    "path": "src/main/java/duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public ListCommand(String inputString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString.toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve ListCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (!inputInstruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printList(currentTaskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 35
    }
  },
  {
    "path": "src/main/java/duke/Commands/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public SortCommand(String inputString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString.toLowerCase();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve SortCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (inputInstruction.length() \u003d\u003d 4 || inputInstruction.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"sort\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String sortType \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (!(sortType.equals(\"type\") || sortType.equals(\"time\"))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"sort\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (sortType.equals(\"type\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.sortTaskByEventType();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (sortType.equals(\"time\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                currentTaskList.sortTaskByTime();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.updateTaskToFile(currentTaskList.getEntireList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printList(currentTaskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 44
    }
  },
  {
    "path": "src/main/java/duke/Commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String inputInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public TodoCommand(String inputString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        inputInstruction \u003d inputString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Overrides execute method to achieve TodoCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList taskList containing all the current Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui class that handles all I/O managements"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param storage class that handles all file storage and loading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output for the specific Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String execute(TaskList currentTaskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (inputInstruction.length() \u003d\u003d 4 || inputInstruction.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String subInput \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task newTask \u003d new Todo(subInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTaskList.addTask(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            storage.writeToFile(newTask + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printTodo(newTask, currentTaskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 39
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileDescriptor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Duke class which is used to run a taskList computer program"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * that allows users to store their various task (Deadline, Event, Things to do)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * and store them in a text file. The program also allows them to delete and update"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * their list once they have completed it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Constructor for Duke class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * instantiate a UI, Storage and TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFromTextFile());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (IOException | ParseException | DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Runs the entire program. Kick starts the entire computer duke Program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *  @param inputInstruction user input Instructions in String format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *  @return a string format output for Duke to reply"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException for invalid inputs"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getResponse(String inputInstruction) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assert inputInstruction !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Command currentCommand \u003d Parser.getCommand(inputInstruction, tasks, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String outputContent \u003d currentCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Processes user input and return it into reformatted input structure."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * to display"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param input String format user input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String format, reformatted version"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String reformatInput(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * returns a ui initiate message according to the current status of the program"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * if it has an existing file present (status : \"loaded\") else (status : \"new\")."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output initiate message according to the program status type"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getStartMessage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.initiate(\"new\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return ui.initiate(\"loaded\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "shihaoyap": 85
    }
  },
  {
    "path": "src/main/java/duke/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a DukeException class which handles all the possible"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * custom exceptions that might be needed in the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected String exceptionType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public DukeException(String exceptionType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (exceptionType.equals(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"The index of a done cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"The index of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"index\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"No such task in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid input format for deadline.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid input format for event\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"No such keyword in the list!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"index\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Unable to do so, the list does have contain such an index\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"file\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Unable to do so, File issue!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"duplicate\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Duplicated Event Description, please change your event Description to a unique one\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"TaskNum\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid Format! Please input a valid Task Number\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"indexInt\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid Format! Please input a valid integer index\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid input format for list\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else if (exceptionType.equals(\"sort\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid input format for sort\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"Invalid Format! Please Follow the Standard Command lines in the Guide.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 49
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.DuplicateCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.SortCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Parser Class which is used to process the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * inputs to allow the rest of the program to use the processed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * information."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Returns the task index from the inputInstructions. Helps to identify the index number"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputInstruction user string input which includes task index and description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui user interface object to deal with I/O"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return the task index after separating from the rest of the string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static int getTaskNum(String inputInstruction, Ui ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String[] taskNumString \u003d inputInstruction.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            int taskNum \u003d Integer.parseInt(taskNumString[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return taskNum;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Returns a String of the DateTime, in the correct/preferred format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param stringInput string of a DateTime in the format that is found in the textFile"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param splitKey takes in a String to be used as a splitkey"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String output of a reformatted String of the DateTime"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static String extractDateTime(String stringInput, String splitKey) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String timeDateString \u003d stringInput.substring(stringInput.lastIndexOf(splitKey) + 5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return timeDateString.substring(0, timeDateString.length() - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Parses the a textFile if it exist. Upon application start up, if an"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * existing textFile is found, function will load the textFile line by line"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * and create the respective Task objects accordingly and store them."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param stringInput a string of the Task input from the text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a Task object that corresponds to the stringInput from the text file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException for invalid input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws ParseException for invalid inputs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static Task parseFileInput(String stringInput) throws ParseException, DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String[] stringCommand \u003d stringInput.split(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Task currentTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        switch (Character.toString(stringCommand[0].charAt(1))) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String deadlineDesc \u003d stringInput.substring(7, stringInput.lastIndexOf(\"(by:\") - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask \u003d new Deadline(deadlineDesc, Parser.extractDateTime(stringInput, \"(by:\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String eventDesc \u003d stringInput.substring(7, stringInput.lastIndexOf(\"(at:\") - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask \u003d new Event(eventDesc, Parser.extractDateTime(stringInput, \"(at:\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask \u003d new Todo(stringInput.substring(7));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            throw new DukeException(\"file\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (Character.toString(stringCommand[0].charAt(4)).equals(\"O\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return currentTask;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * returns a Command Object according to the user instruction."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputInstruction a string input by the user do different commands/task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui Ui object to handle all I/O"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the currentTasklist"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a Command Object according to the user input"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException for invalid input"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static Command getCommand(String inputInstruction, TaskList currentTaskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String inputCommand \u003d inputInstruction.split(\" \")[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        switch (inputCommand.toLowerCase()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"list\" :"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new ListCommand(inputInstruction);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"done\" :"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new DoneCommand(inputInstruction);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"todo\" :"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (currentTaskList.isDuplicatedTask(inputInstruction, \"todo\", ui)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new DuplicateCommand(inputInstruction);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new TodoCommand(inputInstruction);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"deadline\" :"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (currentTaskList.isDuplicatedTask(inputInstruction, \"deadline\", ui)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new DuplicateCommand(inputInstruction);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new DeadlineCommand(inputInstruction);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (currentTaskList.isDuplicatedTask(inputInstruction, \"event\", ui)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new DuplicateCommand(inputInstruction);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                return new EventCommand(inputInstruction);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new DeleteCommand(inputInstruction);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"find\" :"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new FindCommand(inputInstruction);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"bye\" :"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        case \"sort\" :"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new SortCommand(inputInstruction);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 145
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Storage Class which is used to handle all"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * file handling task - writing, deleting, updating of a text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Writes a user input String into a text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputString Should be the string format of the input task by users"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws IOException returns exception if invalid input is entered"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void writeToFile(String inputString) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fw.write(inputString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Updates the existing text file with all the Task which are currently in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputTaskList takes in an arraylist (taskList) and updates the text file with all the new task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws IOException throws exception when user input is invalid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void updateTaskToFile(ArrayList\u003cTask\u003e inputTaskList) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        for (int i \u003d 0; i \u003c inputTaskList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            fileWriter.write(inputTaskList.get(i) + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Reads an existing textFile line by line, and process them to create Task Objects to store."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a ArrayList consisting of Task objects that corresponds to the textFile commands"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException for invalid input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws IOException for invalid I/O"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws ParseException for invalid Input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromTextFile() throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Loaded\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            taskList.add(Parser.parseFileInput(line));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 72
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a TaskList Class which contains the entire"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * list of task that the user have entered into the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * The TaskList class handles all the manipulating of the List."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTask) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assert listOfTask !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Displays all the task that is currently in the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void listTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (listOfTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"List is Empty\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                System.out.println(i + 1 + \".\" + listOfTask.get(i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Checks whether a Task description is duplicated."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputInstruction input task description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param type type of task input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param ui inputs the ui object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a boolean value whether the inputInstruction is a duplicate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public boolean isDuplicatedTask(String inputInstruction, String type, Ui ui) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String inputDescription;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (inputInstruction.length() \u003d\u003d 4 || inputInstruction.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                inputDescription \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (!inputInstruction.contains(\"/by\") || inputInstruction.length() \u003d\u003d 8"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                        || inputInstruction.length() \u003d\u003d 9) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                inputDescription \u003d inputInstruction.substring(9, inputInstruction.lastIndexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (!inputInstruction.contains(\"/at\") || inputInstruction.length() \u003d\u003d 5"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                        || inputInstruction.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                inputDescription \u003d inputInstruction.substring(6, inputInstruction.lastIndexOf(\"/at\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                inputDescription \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d listOfTask.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (currentTask.getDescription().equals(inputDescription)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask.get(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public ArrayList\u003cTask\u003e getEntireList() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask.add(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public int getNoOfTask() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask.remove(index);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return listOfTask.isEmpty();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Displays all task that corresponds to the user\u0027s input keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * looks through the current Tasklist to identity all task that corresponds to"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * the keyword and displays them."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param taskKeyWord user input keyword that they want"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException throws custom exception if input invalid"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void findTask(String taskKeyWord) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (listOfTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"List is Empty\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d listOfTask.get(i);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                String currentTaskString \u003d currentTask.toString().toLowerCase();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (currentTaskString.contains(taskKeyWord.toLowerCase())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    tempTaskList.add(currentTask);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (tempTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                throw new DukeException(\"find\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                for (int i \u003d 0; i \u003c tempTaskList.size(); i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    System.out.println(i + 1 + \".\" + tempTaskList.get(i));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Sorts the currentTasklist to list in the following order"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * 1) To-do 2) Deadline 3) Event Task."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void sortTaskByEventType() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ArrayList\u003cTask\u003e newListOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        for (int typeNo \u003d 0; typeNo \u003c 3; typeNo++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c listOfTask.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d listOfTask.get(i);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (typeNo \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                        newListOfTask.add(currentTask);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (typeNo \u003d\u003d 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                        newListOfTask.add(currentTask);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (typeNo \u003d\u003d 2) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                        newListOfTask.add(currentTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask \u003d newListOfTask;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Sorts the currentTasklist to list in the order of time,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * with the earliest event as the first."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void sortTaskByTime() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ArrayList\u003cTask\u003e restOfListOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ArrayList\u003cTask\u003e newListOfTodoTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        for (int j \u003d 0; j \u003c listOfTask.size(); j++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task currentTask \u003d listOfTask.get(j);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                newListOfTodoTask.add(currentTask);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                restOfListOfTask.add(currentTask);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ArrayList\u003cTask\u003e newListOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        while (!restOfListOfTask.isEmpty()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Task currentEarliestTask \u003d restOfListOfTask.get(0);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            for (int i \u003d 0; i \u003c restOfListOfTask.size(); i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                Task currentTask \u003d restOfListOfTask.get(i);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                if (currentEarliestTask.getDateTime().isAfter(currentTask.getDateTime())) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                    currentEarliestTask \u003d currentTask;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            newListOfTask.add(currentEarliestTask);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            restOfListOfTask.remove(currentEarliestTask);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        newListOfTask.addAll(newListOfTodoTask);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        listOfTask \u003d newListOfTask;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 197
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Deadline Task which extends the Task Class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a Deadline Task object is represented by a String description and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a LocalDateTime which tells when the deadline task is due."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, format1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(format1) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 34
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents an Event Task which extends the Task Class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a Event Task object is represented by a String description and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a LocalDateTime which tells when the Event task is at."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected DateTimeFormatter format1 \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, format1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(format1) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 33
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a Task class which basically represents a task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a Task object is represented with a description, a isDone"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * boolean which shows whether the task is completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Constructor for Task object. Takes in task description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param description user input task name, details"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Gets the status of a task, whether it is done or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String tick symbol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"O\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return \"X\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 54
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents a TodoTask which extends the Task Class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * a TodoTask object is represented by a String description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 26
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileDescriptor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * Represents an Ui class which handles all the display and I/O"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * that the user will enter. Ui class interacts with the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * and helps to call the other necessary classes to achieve the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " * user\u0027s input instructions."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    String outputContent;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * Runs the start of the Ui, by introducing Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param status takes in a String information about Ui, Status(new or loaded)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return a String format welcome message to display"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String initiate(String status) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        if (status.equals(\"loaded\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"Previous Existing - File Loaded\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            buffer.reset();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return outputContent;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"Hello! I\u0027m Duke\\nWhat can i do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.out.println(\"No Previous Existing File Found\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            Parser.printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            String outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            buffer.reset();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            return outputContent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the the ouput of the entire Tasklist."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire TaskList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printList(TaskList currentTaskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        currentTaskList.listTask();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Done\"."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTask takes in a task which is marked as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printDone(Task currentTask) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of Exceptions."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param e which is the custom Exception from DukeException"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printException(Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"To-do\"."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param newTask take in the new To-do task object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire list of Task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printTodo(Task newTask, TaskList currentTaskList) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Now you have \" + currentTaskList.getNoOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Deadline\"."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param newTask take in the new Deadline task object"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire list of Task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printDeadline(Task newTask, TaskList currentTaskList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Now you have \" + currentTaskList.getNoOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Event\"."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param newTask take in the new Event task object"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire list of Task"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printEvent(Task newTask, TaskList currentTaskList) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Now you have \" + currentTaskList.getNoOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Delete\"."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param taskNum take in the index of the task"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire list of Task"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printDelete(int taskNum, TaskList currentTaskList) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"___________________________________\\n\" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Task currentTask \u003d currentTaskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        currentTaskList.removeTask(taskNum - 1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Now you have \" + currentTaskList.getNoOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Find\"."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param inputInstruction string input of the user\u0027s instruction"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @param currentTaskList takes in the entire TaskList"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @throws DukeException if user inputs an invalid input"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printFind(String inputInstruction, TaskList currentTaskList) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        String subInput \u003d inputInstruction.substring(5);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        currentTaskList.findTask(subInput);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * prints the output of command \"Bye\"."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     * @return String output of the command"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(buffer));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!!\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        Parser.printLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        outputContent \u003d buffer.toString();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        buffer.reset();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        return outputContent;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 224
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" pickOnBounds\u003d\"false\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 19
    }
  },
  {
    "path": "src/main/resources/view/DialogBox2.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #2870DC;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#f8f8f8\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #778899;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.3999999999999986\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #778899;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.39999999999998\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    void dummyTest() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(\"[D][X] submit project (by: 02/12/2019 1700)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                new Deadline(\"submit project\", \"02/12/2019 1700\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "        assertEquals(\"[E][✘] Basketball Competition (at: 03/11/2018 1700)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "                new Event(\"Basketball Competition\", \"03/11/2018 1700\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Yes"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "Add paper"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shihaoyap"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shihaoyap": 21
    }
  }
]
