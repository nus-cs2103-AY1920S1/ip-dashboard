[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 18,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "lrchema": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * a deadline is a type of class with a by datetime"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Deadline(String content, int status, LocalDateTime by, int order) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status, order);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"D,\" + super.toFile() + \",\" + by.format(formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * main class, calls functions and other classes as needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        storage.readFile(list);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        boolean isContinue \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        p.ui.welcome();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        while (isContinue) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String echo \u003d s.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                Verify.checkCommandValidity(echo, list, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                isContinue \u003d p.parse(echo, list, formatter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        storage.writeFile(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 24,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * throws exception and prints out the message input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * event is a type of task with from and to datetimes"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    LocalDateTime at, to;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Event(String content, int status, LocalDateTime at, LocalDateTime to, int order) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status, order);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.to \u003d to;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \" to \" + to.format(formatter) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"E,\" + super.toFile() + \",\" + at.format(formatter) + \",\" + to.format(formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * parses and excecutes the command user enters"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param command   entered command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list      task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param formatter datetime formatter"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return false if user wishes to terminate program, true otherwise"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @throws DukeException due to checking validity of command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public boolean parse(String command, TaskList list, DateTimeFormatter formatter) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Verify.checkCommandValidity(command, list, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.exit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.list(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            list.get(Integer.parseInt(command.split(\" \")[1]) - 1).setAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.done(list, Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            TaskList matchingTasks \u003d list.search(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.found(matchingTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            Task t \u003d list.remove(Integer.parseInt(command.split(\" \")[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.delete(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            list.add(new Todo(command.substring(5), 0, list.list.size() + 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.taskAdded(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String[] cmdSplit \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            list.add(new Event(cmdSplit[0], 0, LocalDateTime.parse(cmdSplit[1].split(\" to \")[0], formatter),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    LocalDateTime.parse(cmdSplit[1].split(\" to \")[1], formatter), list.list.size() + 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.taskAdded(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            list.add(new Deadline(command.substring(9).split(\" /by \")[0], 0,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                    LocalDateTime.parse(command.substring(9).split(\" /by \")[1], formatter), list.list.size() + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            ui.taskAdded(list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 50
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * Storage class deals with file input/output"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    Scanner sFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    FileWriter fw;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * file path is hardcoded"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * reads in tasks from the file if it exists and populates the task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list to be populated"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void readFile(TaskList list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            sFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        while (sFile.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String ln \u003d sFile.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            String[] lnSplit \u003d ln.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (lnSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Todo(lnSplit[2], Integer.parseInt(lnSplit[1]), list.list.size() + 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (lnSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Event(lnSplit[2], Integer.parseInt(lnSplit[1]), LocalDateTime.parse(lnSplit[3], formatter),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(lnSplit[4], formatter), list.list.size() + 1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (lnSplit[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                list.add(new Deadline(lnSplit[2], Integer.parseInt(lnSplit[1]),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                        LocalDateTime.parse(lnSplit[3], formatter), list.list.size() + 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * at the end of the program logic, "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * replaces the content of the file (if it exists)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * with the final task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list the task list to be written to file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e1.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            for (Task t : list.list) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                fw.write(t.toFile() + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 71
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * task class to manage the functions of tasks that are common across all types"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    boolean done \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    int order;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * task constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param content the description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param status  whether the task is done or not"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param order   the order of the task in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task(String content, int status, int order) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        done \u003d status \u003d\u003d 1 ? true : false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"[\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d \"\\u2713\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d \"\\u2718\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        res +\u003d \"] \" + content;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        int d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            d \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            d \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return d + \",\" + content;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * equality comparison of task (used for testing)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (o \u003d\u003d null || !(o instanceof Task)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Task t \u003d (Task) o;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return content.equals(t.content) \u0026\u0026 done \u003d\u003d t.done;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * list of tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * add the task to the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * delete the task from the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param i index of the task to be deleted"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return returns the task that was deleted"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task remove(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return list.remove(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * fetches the task from the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param i index of the task mentioned"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return the task with the index i"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param keyword the search term"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return a task list of all matching tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public TaskList search(String keyword) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        TaskList res \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String queryStr \u003d \".*\" + keyword + \".*\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (t.content.matches(queryStr)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                res.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints the task list with numberings"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            res +\u003d list.get(i).order + \".\" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 67
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Todo(String content, int status, int order) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        super(content, status, order);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns string in console printing format"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * returns string in file printing format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return \"T,\" + super.toFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * prints all the messages to console"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints duke logo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Hello, I\u0027m\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints task added confirmation"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list to get the added task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void taskAdded(TaskList list) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(list.get(list.list.size() - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Now you have \" + list.list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints goodbye message"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints task set as done confirmation"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param item task index in list to be set as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void done(TaskList list, int item) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(list.get(item));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * prints out full task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void list(TaskList list) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.print(list);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * displays delete task confirmation"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param t the task that was deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void delete(Task t) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\tpublic void found(TaskList matchingTasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if(matchingTasks.list.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            System.out.println(\"oh, fiddlesticks! there are no tasks matching your search!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            System.out.print(matchingTasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 64
    }
  },
  {
    "path": "src/main/java/Verify.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * Checks all the possible errors that can occur during entry of command and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": " * throws DukeException with message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class Verify {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public Verify() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param str the input string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @return returns if the string is a number"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static boolean isNum(String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            int i \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } catch (NumberFormatException | NullPointerException nfe) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param command   the string command entered by user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param list      the task list to compare with for checking validity"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @param formatter date formatter to catch wrong date format exceptions"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     * @throws DukeException in the case of invalid input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public static void checkCommandValidity(String command, TaskList list, DateTimeFormatter formatter)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"whoops! please enter a number after done\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (!isNum(command.split(\" \")[1])) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"whoops! you need to enter a number, not anything else\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if ((Integer.parseInt(command.split(\" \")[1])) \u003e\u003d list.list.size()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oh! that task doesn\u0027t exist! please enter a task within the list!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"whoops! please enter a number after delete\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (!isNum(command.split(\" \")[1])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"whoops! you need to enter a number, not anything else\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if ((Integer.parseInt(command.split(\" \")[1]) - 1) \u003e\u003d list.list.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oh! that task doesn\u0027t exist! please enter a task within the list!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oopsie! did you forget to add a description for your todo?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oops! did you forget to add a description to your deadline?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(9).split(\" /by \").length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oh no! the by date of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(9).split(\" /by \")[1], formatter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oh dear, your date is invalid! please check if you entered it right!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"whoops! did you forget to add a description to your event?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(6).split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"golly! the from/to dates of an event cannot be empty!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } else if (command.substring(6).split(\" /at \")[1].split(\" to \").length \u003c 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"gosh! i can\u0027t find your from and to dates! did you enter both?\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(6).split(\" /at \")[1].split(\" to \")[0], formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                LocalDateTime.parse(command.substring(6).split(\" /at \")[1].split(\" to \")[1], formatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lrchema"
        },
        "content": "                throw new DukeException(\"oh dear, your date is invalid! please check if you entered it right!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else if (command.equals(\"bye\") || command.equals(\"list\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lrchema"
        },
        "content": "            throw new DukeException(\"blast! i don\u0027t understand that!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 86
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "public class DukeTest{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testAddGet(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        taskList.add(new Todo(\"eat salad\", 0, 1));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertEquals(taskList.get(0), new Todo(\"eat salad\", 0, 1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testRemove(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        Task t \u003d taskList.remove(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertEquals(t, new Todo(\"eat salad\", 0, 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    public void testVerify(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Verify.checkCommandValidity(\"blah\", taskList, formatter));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lrchema": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Hello, I\u0027m"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✓] join sports club"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lrchema"
        },
        "content": "[D][✘] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Now you have 8 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "lrchema": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline return book /by 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 6/13/2019 1400 to 6/8/2019 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 6/8/2019 1400 to 6/8/2019 1600"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "done 27"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline return book /by 25/8/2019 1100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event project meeting /at 3/9/2019 1400 to 3/9/2019 1600"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "deadline do homework /by 8/9/2019 1800"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lrchema": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lrchema"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lrchema"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lrchema"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lrchema"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lrchema"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lrchema"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lrchema"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lrchema"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lrchema"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lrchema": 34
    }
  }
]
