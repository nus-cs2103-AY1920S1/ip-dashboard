[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    mainClassName \u003d \"App\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "run {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "//    enableAssertions \u003d true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 38,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO read book --done true"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "DEADLINE borrow book --by 21/09/2019 1230 --done false"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "EVENT CCA meeting --at 22/09/2019 0920 --done false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO c --done false"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO d --done false"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO f --done false"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO e --done false"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "DEADLINE Borrow book --by 21/09/2019 1300 --done false"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "EVENT project meeting --at 22/09/2019 0920 --done false"
      }
    ],
    "authorContributionMap": {
      "shiweing": 9
    }
  },
  {
    "path": "src/main/java/App.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.gui.Gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.logic.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class App extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Duke duke \u003d new Duke(\"data\\\\duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Application.launch(args);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(App.class.getResource(\"/view/Gui.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.setHeight(620);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.setWidth(700);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fxmlLoader.\u003cGui\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 41
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command that adds task to the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    String attributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param taskType Type of task to add."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param attributes Attributes of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public AddCommand(String taskType, String attributes) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.attributes \u003d attributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes adding of task to list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to add task to."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException from TaskType commandToTask()."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d TaskType.valueOf(taskType.toUpperCase()).commandToTask(attributes);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        boolean taskAdded \u003d tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assert taskAdded \u003d\u003d true : \"Task not added successfully\"; // assert task added"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:%n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                        + \"\\t%s%n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                        + \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                task, tasks.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns true for Duke to save tasks to txt file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean requireSave() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command to exit application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes exit command and saving leftover tasks to hard drive."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to add task to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException from Storage save()."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Overrides isExit() from Command parent class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Abstract command class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Abstract method that child classes have to implement logic of command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to add task to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Output of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if respective execute commands fail."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public abstract String execute(TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Return if application should exit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return false as default."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Return if tasks should be saved to txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return false as default."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean requireSave() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.Error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command that deletes tasks frm list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Ids of tasks to delete."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskIds;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param attribute Task ids of tasks to delete."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if a task id is not an integer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public DeleteCommand(String attribute) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        taskIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Split into multiple task id strings"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] taskIdStrs \u003d attribute.strip().split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (String taskIdStr : taskIdStrs) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                int taskId \u003d Integer.parseInt(taskIdStr.strip());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.taskIds.add(taskId);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.INVALID_TASK_NUMBER.getErrorString() + taskIdStr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Sort in descending order so deleting tasks does not affect the task after"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Collections.sort(taskIds, Collections.reverseOrder());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes deleting of tasks from list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to delete task from."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String outcome of the command execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder strBui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder invalidStrBui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (int taskId : taskIds) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // add deleted task to string builder"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strBui.append(\"\\n\" + deleteTask(tasks, taskId));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                invalidStrBui.insert(0, \"\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (strBui.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // if no tasks were successfully deleted, display error"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui \u003d invalidStrBui.deleteCharAt(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // if tasks have been deleted"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui.insert(0, \"Noted. I\u0027ve removed these tasks:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui.append(String.format(\"\\nNow you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (invalidStrBui.length() !\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // if there were invalid tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strBui.append(\"\\n\" + invalidStrBui);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return strBui.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Delete task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks Tasklist storing tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param taskId task ID of the task to delete."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String format of task deleted."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if taskId is not within Tasklist index."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String deleteTask(TaskList tasks, int taskId) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d tasks.delete(taskId);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"\\t%s\", task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.INVALID_TASK_NUMBER.getErrorString() + taskId);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns true for Duke to save tasks to txt file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean requireSave() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 105
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.Error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command to mark task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Ids of tasks to delete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskIds;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param attribute Task id of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if task id is not an integer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public DoneCommand(String attribute) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        taskIds \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Split into multiple task id strings"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] taskIdStrs \u003d attribute.strip().split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (String taskIdStr : taskIdStrs) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                int taskId \u003d Integer.parseInt(taskIdStr.strip());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.taskIds.add(taskId);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.INVALID_TASK_NUMBER.getErrorString() + taskIdStr);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes marking tasks as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to obtain task from."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String result of command execution."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder strBui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder invalidStrBui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (int taskId : taskIds) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // add deleted task to string builder"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strBui.append(\"\\n\" + markTaskDone(tasks, taskId));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                invalidStrBui.append(\"\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (strBui.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // if no tasks were successfully marked as done, display error"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui \u003d invalidStrBui.deleteCharAt(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // if tasks were successfully marked as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui.insert(0, \"Nice! I\u0027ve marked these tasks as done:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (invalidStrBui.length() !\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // if there were invalid tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strBui.append(\"\\n\" + invalidStrBui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return strBui.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks Tasklist storing tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param taskId task ID of the task to mark as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String format of task marked as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if taskId is not within Tasklist index."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String markTaskDone(TaskList tasks, int taskId) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d tasks.done(taskId);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"\\t%s\", task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.INVALID_TASK_NUMBER.getErrorString() + taskId);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns true for Duke to save tasks to txt file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean requireSave() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 100
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command to find tasks related to keyword."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Keyword to match tasks to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param keyword Keyword to match tasks to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.keyword \u003d keyword.strip();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes find command to find tasks matching keywords."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to find tasks from."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder strbui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (task.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strbui.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (strbui.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strbui.append(\"There are no tasks matching your keyword.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strbui.insert(0, \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return strbui.deleteCharAt(strbui.length() - 2).toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 46
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Command to list tasks in list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Executes listing of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param tasks TaskList to obtain tasks from."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return \"You have no tasks in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        StringBuilder strbui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strbui.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return strbui.deleteCharAt(strbui.length() - 2).toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 29
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DateFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.Error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String attributes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for UpdateCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input command attributes, include task number and task atributes to update."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if task number attributes are invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public UpdateCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // inputArr[0]: taskId | inputArr[1]: attributes to update"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            taskId \u003d Integer.parseInt(inputArr[0].strip()) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // throw exception if attributes not provided"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.UPDATE_INVALID_ATTRIBUTES.getErrorString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes \u003d inputArr[1].strip();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // throw exception if attributes not in correct format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (!attributes.contains(\"--\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.UPDATE_INVALID_ATTRIBUTES.getErrorString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE.getErrorString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d tasks.get(taskId);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // Remove empty strings from split"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String[] updateArr \u003d Arrays.asList(attributes.split(\"--\"))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    .filter(str -\u003e !str.isEmpty())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    .toArray(String[]::new);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // List of updates to execute after input processing"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            ArrayList\u003cConsumer\u003cTask\u003e\u003e updates \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (String updateStr : updateArr) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                updateStr \u003d updateStr.strip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                updates.add(getUpdateMethod(task, updateStr));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // Execute updates"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (Consumer\u003cTask\u003e update : updates) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                update.accept(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"Got it. I\u0027ve updated this task:%n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            + \"\\t%s\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE.getErrorString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Consumer\u003cTask\u003e getUpdateMethod(Task task, String updateStr) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Split into update attribute and update value"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] updateArr \u003d updateStr.split(\" \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (updateArr.length \u003c 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE_INVALID_ATTRIBUTES.getErrorString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String updateAttr \u003d updateArr[0].strip();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String updateVal \u003d updateArr[1].strip();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (updateAttr) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case \"desc\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return getUpdateDescMethod(updateVal);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case \"by\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return getUpdateDeadlineMethod(task, updateVal);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case \"at\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return getUpdateEventTimeMethod(task, updateVal);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE_INVALID_ATTRIBUTES.getErrorString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Consumer\u003cTask\u003e getUpdateDescMethod(String desc) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return task -\u003e updateDesc(task, desc);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Consumer\u003cTask\u003e getUpdateDeadlineMethod(Task task, String deadlineStr) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (task.getType() !\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE.getErrorString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Date deadline \u003d DateFormatter.parse(deadlineStr, Error.DEADLINE_FORMAT.getErrorString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return taskToUpdate -\u003e updateDeadline(taskToUpdate, deadline);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Consumer\u003cTask\u003e getUpdateEventTimeMethod(Task task, String eventTimeStr) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (task.getType() !\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(Error.UPDATE.getErrorString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Date eventTime \u003d DateFormatter.parse(eventTimeStr, Error.EVENT_TIME_FORMAT.getErrorString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return taskToUpdate -\u003e updateEventTime(taskToUpdate, eventTime);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void updateDesc(Task task, String desc) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        task.setDesc(desc);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void updateDeadline(Task task, Date deadline) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        ((Deadline)task).setBy(deadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void updateEventTime(Task task, Date eventTime) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        ((Event)task).setAt(eventTime);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shiweing": 137
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Label imageLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param text dialog message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param img profile picture."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param imgLabel identity name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public DialogBox(String text, Image img, String imgLabel) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        imageLabel.setText(imgLabel);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns a DialogBox for user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param text input from user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param img profile picture of user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param imgLabel name of user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return user DialogBox."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img, String imgLabel) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return new DialogBox(text, img, imgLabel);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns a system DialogBox."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param text response from system."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param img profile picture of system."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param imgLabel name of system."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return system DialogBox."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, String imgLabel) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        var db \u003d new DialogBox(text, img, imgLabel);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        db.getStyleClass().add(\"duke-style\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 78
    }
  },
  {
    "path": "src/main/java/duke/gui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.logic.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Gui extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke-normal.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Initialise GUI displayed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        sendButton.setOnKeyReleased((event) -\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Platform.runLater(() -\u003e userInput.requestFocus());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Greeting message from system at start up."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String usage \u003d \"Usage:\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"todo [task description]\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"deadline [task description] --by [deadline]\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"event [event description] --at [event time]\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"find [keyword]\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"done [task no...]\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"delete [task no...]\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                + \"update [task id] {--desc [task description]} {--by [deadline]} {--at [event time]}  \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m duke.util.Duke! What can I do for you?\\n\" + usage,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                        dukeImage, \"Duke\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                DialogBox.getUserDialog(input, userImage, \"User\"),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage, \"Duke\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 91
    }
  },
  {
    "path": "src/main/java/duke/logic/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Main class of project."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for duke.util.Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Duke(String file) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Load data if exist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        storage.load(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String response \u003d c.execute(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (c.requireSave()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                writeTasksToFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void writeTasksToFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 54
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.Error;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Handles user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Make sense of user input and create Commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Command object from user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if user command is invalid."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] inputArr \u003d input.strip().split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String command \u003d inputArr[0].toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    // Throw exception based on command that require attributes (done, delete etc.)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String errorType \u003d command.strip().toUpperCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    throw new DukeException(Error.valueOf(errorType).getErrorString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    // Throw exception for invalid command string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    throw new DukeException(Error.DEFAULT.getErrorString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String commandAttr \u003d inputArr[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new DoneCommand(commandAttr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new DeleteCommand(commandAttr);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new FindCommand(commandAttr);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new AddCommand(command, commandAttr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"update\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new UpdateCommand(commandAttr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // Throw exception for invalid command string"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.DEFAULT.getErrorString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Stores deadline of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Deadline(String desc, Date by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns deadline of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Update deadline for task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param by New deadline to update."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void setBy(Date by) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns deadline of task in String format \"dd MMM yyyy hh:mm aa\"."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task deadline in String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getByString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return new SimpleDateFormat(\"dd MMM yyyy hh:mm aa\").format(this.by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns type of TaskType.DEADLINE."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type DEADLINE."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), getByString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * The event timing."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param at Event timing."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Event(String desc, Date at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns event timing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Event timing."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Updates event time."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param at New event time to update."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void setAt(Date at) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns event timing in String format \"dd MMM yyyy hh:mm aa\"."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Event timing in String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getAtString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return new SimpleDateFormat(\"dd MMM yyyy hh:mm aa\").format(this.at);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns TaskType.EVENT."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type EVENT."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.EVENT;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), getAtString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Indicator for task completion."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Task(String desc) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.desc \u003d desc.strip();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Updates the description of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc New task description to update."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void setDesc(String desc) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns if task is done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return True if done, false if not."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Abstract method child class have to implement which returns type of task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return TaskType"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public abstract TaskType getType();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[%c] %s\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.isDone ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.desc);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represent a todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns TaskType.TODO."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type TODO."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.TODO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 29
    }
  },
  {
    "path": "src/main/java/duke/util/DateFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DateFormatter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Date formatter for date and time related to task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private static final SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns Date from date input string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param dateString date input satring."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param errorMsg error message for exception if parsing fails."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if unable to parse date input string to Date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static Date parse(String dateString, String errorMsg) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return dateFormat.parse(dateString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(errorMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns formatted String from Date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param date Date to format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return formatted date string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public static String format(Date date) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 36
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represents an Exception thrown by the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns exception message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return exception message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"\\u2639 %s\", super.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 23
    }
  },
  {
    "path": "src/main/java/duke/util/Error.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Error Enums."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public enum Error {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DONE(\"OOPS!!! Please enter a task number.\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: done [task no.]\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DELETE(\"OOPS!!! Please enter a task number.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: delete [task no.]\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    INVALID_TASK_NUMBER(\"Invalid task number: \"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    FIND(\"OOPS!! Please enter a valid keyword.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: find [keyword]\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    TODO(\"OOPS!!! The description of a todo cannot be empty.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: todo [task description]\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DEADLINE(\"OOPS!!! The description of a deadline task cannot be empty.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: deadline [task description] --by [deadline]\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DEADLINE_BY(\"OOPS!!! Please provide a deadline for the task.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: deadline [task description] --by [deadline]\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DEADLINE_FORMAT(\"Oh no! Please ensure the deadline in the following format:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   dd/MM/yyyy HHmm\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    EVENT(\"OOPS!!! The description of an event cannot be empty.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: event [event description] --at [event time]\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    EVENT_TIME_FORMAT(\"Oh no! Please ensure the event time in the following format:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   dd/MM/yyyy HHmm\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    EVENT_AT(\"OOPS!!! Please provide a time for the event.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: event [event description] --at [event time]\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    UPDATE(\"OOPS!!! Please enter a valid task number.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: update [task id] {--desc [task description]} {--by [deadline]} {--at [event time]} \"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    UPDATE_INVALID_ATTRIBUTES(\"OOPS!!! Please provide a valid attribute to update.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            + \"   Usage: update [task id] {--desc [task description]} {--by [deadline]} {--at [event time]} \"),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DEFAULT(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Error string for each error."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String errorString;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor of Error."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param errorString Error message for error type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Error(String errorString) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.errorString \u003d errorString;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns error string by enum."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getErrorString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.errorString;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 54
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Handles loading and saving of tasks to hard drive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Loads task from file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param list ArrayList to load tasks into."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void load(TaskList list) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            StringBuilder strBui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            strBui.append(\"Loading tasks from \" + file.getAbsolutePath() + \"...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    // split into task type and task attributes"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String[] taskInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String taskType \u003d taskInput[0].strip().toUpperCase();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    // split into other task attributes and isDone attribute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String[] attributes \u003d taskInput[1].split(\" --done \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    if (attributes.length \u003c 2"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            || (!attributes[1].strip().equals(\"true\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            \u0026\u0026 !attributes[1].strip().equals(\"false\"))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                        throw new DukeException(\"Invalid input: \" + input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String taskAttr \u003d attributes[0]; // task attributes"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String isDoneBool \u003d attributes[1].strip(); // task isDone boolean"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    list.add(TaskType.valueOf(taskType)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            .stringToTask(taskAttr, Boolean.parseBoolean(isDoneBool)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    strBui.append(\"\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    strBui.append(\"\\nInvalid input: \" + input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            System.out.println(strBui.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            System.out.println(\"File not found: \" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Saves tasks to a text file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param list ArrayList to save tasks from."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void save(TaskList list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            System.out.println(\"Saving tasks to \" + file.getAbsolutePath() + \"...\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (Task task : list.getTasks()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                fw.write(task.getType().taskToString(task));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            System.out.println(\"Error writing to file.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 97
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Handles list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * List of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns if list is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true if list is empty, false is list is not empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return list.isEmpty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return List of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return size of task list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Task get(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return list.get(taskId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Adds task to list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return true if task added, false if task not added."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean add(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return list.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Removes task from list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param taskId Task id of task to delete from list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Deleted task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws IndexOutOfBoundsException if task id provided is not within list index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Task delete(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return list.remove(taskId - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param taskId Task id of task to mark as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws IndexOutOfBoundsException if task id provided is not within list index."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Task done(int taskId) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d list.get(taskId - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assert task.isDone() : \"Task not marked done successfully\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 82
    }
  },
  {
    "path": "src/main/java/duke/util/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Handles tasks creation from String and command and Task to String based on Task type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Date formatter for deadline and event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Checks input for each task type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input user input of attributes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return array of attributes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if check fails."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String[] checkAndSplitAttributes(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        ArrayList\u003cString\u003e attributes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attrArr;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (input.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.TODO.getErrorString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes.add(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (input.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.DEADLINE.getErrorString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // attrArr[0]: task desc | attrArr[1]: deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attrArr \u003d input.split(\" --by \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (attrArr.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.DEADLINE_BY.getErrorString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes.add(attrArr[0].strip());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes.add(attrArr[1].strip());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (input.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.EVENT.getErrorString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // attrArr[0]: task desc | attrArr[1]: eventTime"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attrArr \u003d input.split(\" --at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (attrArr.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.EVENT_AT.getErrorString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes.add(attrArr[0].strip());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            attributes.add(attrArr[1].strip());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return attributes.toArray(new String[attributes.size()]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns created task from command input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input attributes from user input of format [Desc] [other attributes]."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Created task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If input check fails."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Task commandToTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d checkAndSplitAttributes(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // attributes[0]: task description"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return new Todo(attributes[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // attributes[1]: deadline string"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                Date deadline \u003d dateFormat.parse(attributes[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new Deadline(attributes[0], deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.DEADLINE_FORMAT.getErrorString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                // attributes[1]: event time string"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                Date eventTime \u003d dateFormat.parse(attributes[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                return new Event(attributes[0], eventTime);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(Error.EVENT_TIME_FORMAT.getErrorString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns created task from String input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input attributes from user input of format [Desc] [other attributes]."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param isDone indicator for whether the task is done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Created task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If input check fails."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public Task stringToTask(String input, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d commandToTask(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            task.done();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns String output of tasks in format to save in file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param task duke.task.Task to output string"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String of format [Type] [Desc] [other attribute] [isDone]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If unknown type"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String taskToString(Task task) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Todo todo \u003d (Todo) task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s %s --done %b\\n\", this.toString(), todo.getDesc(), todo.isDone());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s %s --by %s --done %b\\n\","
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    this.toString(), deadline.getDesc(), dateFormat.format(deadline.getBy()), deadline.isDone());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s %s --at %s --done %b\\n\","
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    this.toString(), event.getDesc(), dateFormat.format(event.getAt()), event.isDone());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 149
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?scenebuilder-stylesheet ../css/DialogBox.css?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003cfx:root fx:id\u003d\"dialogBox\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cURL value\u003d\"@../css/DialogBox.css\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cVBox fx:id\u003d\"identity\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"30.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \u003cLabel fx:id\u003d\"imageLabel\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shiweing": 27
    }
  },
  {
    "path": "src/main/resources/view/Gui.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c?scenebuilder-stylesheet ../css/Gui.css?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"585.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            prefWidth\u003d\"685.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fx:controller\u003d\"duke.gui.Gui\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cURL value\u003d\"@../css/Gui.css\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"535.0\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    prefWidth\u003d\"685.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"625.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                   promptText\u003d\"Enter command\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                prefWidth\u003d\"55.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shiweing": 32
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.util.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(new Todo(\"read book\").toString(), \"[T][\\u2717] read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Todo todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(todo.isDone(), false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        todo.done();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(todo.isDone(), true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void getTypeTest() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(new Todo(\"read book\").getType(), TaskType.TODO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 27
    }
  },
  {
    "path": "src/test/java/duke/util/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void isEmptyTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(new TaskList().isEmpty(), true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        taskList.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(taskList.isEmpty(), false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Todo todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        assertEquals(taskList.done(0), todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            assertEquals(taskList.done(1), todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "find"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline borrow book /by 21/09/2019 12"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting /at 22/09/2019 12"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline borrow book /by 21/09/2019 1200"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting /at 22/09/2019 0930"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "find book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shiweing": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM run the program in root folder, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "cmd /c \"cd .. \u0026\u0026 java -Dfile.encoding\u003dUTF-8 -classpath .\\bin Duke \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.TXT\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shiweing": 21
    }
  }
]
