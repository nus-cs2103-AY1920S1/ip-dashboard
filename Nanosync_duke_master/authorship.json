[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    archiveBaseName.set(\"duke\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    archiveVersion.set(\"0.1.3\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    archiveClassifier.set(null)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    archiveAppendix.set(null)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    filter {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        includeTestsMatching \"duke.*\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 31,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.parser.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                if (input \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                Command c \u003d CommandParser.parse(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 54
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Adds a new task and saves the program state."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\"  \" + task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Now you have \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 30
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Commands are executed by a CommandParser."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Deletes a task and saves the program state."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Task task \u003d tasks.deleteTask(taskId);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\"  \" + task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Now you have \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Marks a task as done and saves the program state."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Task task \u003d tasks.getTask(taskId);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new DukeException(\"This task is already marked as done.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\"  \" + task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 20
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Finds a task by keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Executes the command to find a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param tasks Task list for task management."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param ui UI for input and output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param storage To read and write tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            ui.print(\" No matching tasks in your list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            String output \u003d String.format(\" %d.%s\", i + 1, matchingTasks.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            ui.print(output);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Lists the number of tasks available."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            ui.print(\" You have no tasks in your list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        ui.print(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            String output \u003d String.format(\" %d.%s\", i + 1, tasks.getTask(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            ui.print(output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exceptions used specifically for Duke errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(\" OOPS!!! \" + message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidInputDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exceptions used for invalid inputs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class InvalidInputDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public InvalidInputDukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exceptions used for invalid tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class InvalidTaskDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public InvalidTaskDukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/IoDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exceptions used for invalid IO operations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class IoDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public IoDukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Exceptions used when an unknown command is encountered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class UnknownCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public UnknownCommandDukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public UnknownCommandDukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidInputDukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.UnknownCommandDukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Handles command parsing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private static int getIndexFromMatcher(String matcherResult) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            index \u003d Integer.parseInt(matcherResult);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            index--;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new InvalidInputDukeException(\"Invalid task number entered.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Parses a given input to generate a Command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * If the input is unrecognised, null is returned."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new UnknownCommandDukeException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Matcher matcher;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            Pattern donePattern \u003d Pattern.compile(\"done (\\\\d+$)\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            matcher \u003d donePattern.matcher(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (!matcher.matches()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        + \"Usage: done [task number from 1 onwards]\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new DoneCommand(getIndexFromMatcher(matcher.group(1)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            Pattern deletePattern \u003d Pattern.compile(\"delete (\\\\d+$)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            matcher \u003d deletePattern.matcher(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (!matcher.matches()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        + \"Usage: delete [task number from 1 onwards]\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new DeleteCommand(getIndexFromMatcher(matcher.group(1)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            Pattern findPattern \u003d Pattern.compile(\"find (.*)\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            matcher \u003d findPattern.matcher(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (!matcher.matches()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        + \"Usage: find [keywords]\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new FindCommand(matcher.group(1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            Task task \u003d TaskParser.parse(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 92
    }
  },
  {
    "path": "src/main/java/duke/parser/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidInputDukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.UnknownCommandDukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Handles task parsing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Syntax for date. **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private static final DateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Syntax for deadline. **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"deadline (.*) /by (.*)\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Syntax for event. **/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"event (.*) /at (.*)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Parses a given input to generate a Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * If the input is unrecognised, null is returned."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public static Task parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        String[] subArgs \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Matcher matcher;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        switch (subArgs[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (subArgs.length \u003c 2 || subArgs[1].isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Todo description cannot be empty\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new Todo(subArgs[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            matcher \u003d DEADLINE_PATTERN.matcher(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (!matcher.matches()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        + \"Deadline should be: deadline [description] /at [d/M/yyyy HHmm]\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                date \u003d DATE_FORMAT.parse(matcher.group(2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. Date should be: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new Deadline(matcher.group(1), date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            matcher \u003d EVENT_PATTERN.matcher(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (!matcher.matches()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        + \"Event should be: event [description] /at [d/M/yyyy HHmm]\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                date \u003d DATE_FORMAT.parse(matcher.group(2));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                throw new InvalidInputDukeException(\"Syntax error. Date should be: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return new Event(matcher.group(1), date);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new UnknownCommandDukeException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 85
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.IoDukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Manages storage information for the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Loads a list of tasks from the file path in the constructor object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws DukeException If the file could not be read."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                String[] tokens \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                if (tokens.length \u003c 3) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    throw new IoDukeException(\"The task file is corrupted\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                boolean done \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                String description \u003d tokens[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                switch (tokens[0]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    task \u003d new Todo(description, done);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    task \u003d new Deadline(description, dateFormat.parse(tokens[3]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    task \u003d new Event(description, dateFormat.parse(tokens[3]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    throw new IoDukeException(\"Invalid task type found\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new IoDukeException(\"Error opening task file for reading\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new IoDukeException(\"Error closing file reader\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new IoDukeException(\"Error parsing date in task file\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Saves a list of tasks to the file path in the constructor object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws DukeException If the file failed to save."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            // Create directories if necessary"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (path.getParent() !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                Files.createDirectories(path.getParent().getFileName());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            writer \u003d new PrintWriter(new BufferedWriter(new FileWriter(filePath)));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                String output \u003d String.format(\"%s|%b|%s\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                        task.getType(), task.getIsDone(), task.getDescription());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    output +\u003d \"|\" + formatter.format(((Deadline)task).getBy());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                    output +\u003d \"|\" + ((Event)task).getAt();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                writer.write(output);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new IoDukeException(\"Error opening file for saving\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            if (writer !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 126
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Tasks used for deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Deadline by date. **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Deadline(String description, Date by, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Tasks used for events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Event at date. **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Event(String description, Date at, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Tasks are used in the entire program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Task description. **/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /** Status of task. **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return (isDone ? \"x\" : \" \"); // return tick or no symbol"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void markAsUnfinished() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return String.format(\"[%s][%s] %s\", getType(), getStatusIcon(), description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 53
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidTaskDukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Manages a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Deletes a task from the list and returns it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param index Index of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return The task after being removed from the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws InvalidTaskDukeException If the task does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Task deleteTask(int index) throws InvalidTaskDukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new InvalidTaskDukeException(\"Task does not exist\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Gets a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param index Index of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return The task based on index."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @throws InvalidTaskDukeException If the task does not exist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Task getTask(int index) throws InvalidTaskDukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            throw new InvalidTaskDukeException(\"Task does not exist\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Finds tasks based on given keywords."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * The entire task description is checked if it contains the keyword,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * and is then added to a new list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param keyword For matching tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return List of tasks based on the given keywords."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public List\u003cTask\u003e findTasksByKeyword(String keyword) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return taskList.stream()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Tasks used for todos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " * Manages UI related functions such as input and output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Reads a command from system input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @return Input string. null if there is no input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\" \" + message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\" What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Shows a loading error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\" The save file doesn\u0027t seem to be there or is incorrect!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        print(\" Let\u0027s start afresh.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Prints a message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * Prints a message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     * @param message To be printed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 69
    }
  },
  {
    "path": "src/test/java/duke/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidInputDukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.parser.CommandParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testBye_isExit() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command byeCommand \u003d CommandParser.parse(\"bye\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(byeCommand.isExit());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testList() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testDone() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"done 1\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof DoneCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e CommandParser.parse(\"done\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testDelete() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e CommandParser.parse(\"delete\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testFind() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"find 1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof FindCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e CommandParser.parse(\"find\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testAdd_Todo_ValidInput() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"todo do homework\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testAdd_Deadline_ValidInput() throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"deadline finish project /by 31/12/2019 2359\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testAdd_Event_ValidInput() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command \u003d CommandParser.parse(\"event open presents /at 25/12/2019 0000\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 71
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.parser.CommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testCreateAndDeleteTasks() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Ui ui \u003d new UiStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command \u003d CommandParser.parse(\"todo read book\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"read book\", tasks.getTask(0).getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command \u003d CommandParser.parse(\"done 1\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(tasks.getTask(0).getIsDone());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command \u003d CommandParser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(0, tasks.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 34
    }
  },
  {
    "path": "src/test/java/duke/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    StorageStub() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 21
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidTaskDukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_CreateOneElement() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(new TaskStub());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_CreateAndDeleteOneElement() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(new TaskStub());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.deleteTask(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(0, tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_DeleteInvalidElement() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidTaskDukeException.class, () -\u003e tasks.deleteTask(0));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_NoElementAtStart()  {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(0, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_AddTodo() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(new Todo(\"Test 1\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"Test 1\", tasks.getTask(0).getDescription());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_GetInvalidElement() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidTaskDukeException.class, () -\u003e tasks.getTask(0));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTaskList_FindTasksByKeyword() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(new Todo(\"hi\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        tasks.addTask(new Todo(\"bye\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(1, tasks.findTasksByKeyword(\"bye\").size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"bye\", tasks.findTasksByKeyword(\"bye\").get(0).getDescription());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 61
    }
  },
  {
    "path": "src/test/java/duke/TaskParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.InvalidInputDukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.exception.UnknownCommandDukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.parser.TaskParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "class TaskParserTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTodo_ValidInput() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Task task \u003d TaskParser.parse(\"todo do homework\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(task instanceof Todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"do homework\", task.getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"T\", task.getType());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testDeadline_ValidInput() throws DukeException, ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Task task \u003d TaskParser.parse(\"deadline finish project /by 31/12/2019 2359\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(task instanceof Deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Deadline deadline \u003d (Deadline)task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"finish project\", deadline.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(formatter.parse(\"31/12/2019 2359\"), deadline.getBy());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"D\", deadline.getType());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testEvent_ValidInput() throws DukeException, ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Task task \u003d TaskParser.parse(\"event open presents /at 25/12/2019 0000\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertTrue(task instanceof Event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        Event event \u003d (Event)task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"open presents\", event.getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(formatter.parse(\"25/12/2019 0000\"), event.getAt());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertEquals(\"E\", event.getType());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testTodo_InvalidInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"todo\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"todo \"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testDeadline_InvalidInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline \"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline aa\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline /by\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline /by abc\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"deadline /by 1/1/2019 1200\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testEvent_InvalidInput() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event \"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event aa\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event /at\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event /at abc\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(InvalidInputDukeException.class, () -\u003e TaskParser.parse(\"event /at 1/1/2019 1200\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    void testAdd_Random() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        assertThrows(UnknownCommandDukeException.class, () -\u003e TaskParser.parse(\"thiswillfail\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 82
    }
  },
  {
    "path": "src/test/java/duke/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class TaskStub extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    TaskStub() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 14
    }
  },
  {
    "path": "src/test/java/duke/UiStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "public class UiStub extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    UiStub() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 22
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [T][ ] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [T][x] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [T][ ] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [T][ ] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " 1.[T][x] read book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " 2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " 3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " 4.[T][ ] join sports club"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " 5.[T][ ] borrow book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [D][ ] return book (by: Sunday)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "  [E][ ] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nanosync"
        },
        "content": " Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Nanosync": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM delete duke data before testing"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "cd data"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "del duke.txt"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nanosync"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nanosync"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Nanosync": 27
    }
  }
]
