[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "    mainClassName \u003d \"HelloWorld\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 33,
      "-": 15
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "E-0-birthday party-29 August, 2019, 06:00 PM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "T-1-buy groceries"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "E-0-birthday party-10 November, 2019, 08:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "D-1-project report-31 August, 2019, 11:59 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "E-0-birthday party-02 December, 2019, 06:00 PM"
      }
    ],
    "authorContributionMap": {
      "teika97": 5
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents an AddCommand, an extension of the Command. A \u003ccode\u003eAddCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * object corresponds to a type, description, date represented by three strings."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param type type of command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param dateTime deadline or time of event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public AddCommand(String type, String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Adds command to list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param tasks Class dealing with arraylist of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param ui Class dealing with User interface"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param storage Class dealing with storage of task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Output message to console"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks.list.add(new Todo(description));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks.list.add(new Deadline(description,dateTime));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks.list.add(new Event(description,dateTime));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assert false : type;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Standard output message to console"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String line1 \u003d \"Got it. I\u0027ve added this task:\\n\" + \"   \" + tasks.list.get(tasks.list.size() - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String line2 \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (tasks.list.size() \u003e 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "            line2 \u003d \"Now you have \" + tasks.list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assert tasks.list.size()\u003d\u003d1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "            line2 \u003d \"Now you have \" + tasks.list.size() + \" task in the list.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return line1 + \"\\n\" + line2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 56
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents a command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Command(String type) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns whether the command is an exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return True or False"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (this.type.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Empty method to be overridden based on command type."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param tasks Class dealing with arraylist of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param ui Class dealing with User interface"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param storage Class dealing with storage of task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 31
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * corresponds to a deadline and task type represented by two strings."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param by time by which item to be completed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, task description, deadline separated by dash."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type + \"-\" + super.getInfo() + \"-\" + this.by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, task description, deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 37
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents a DeleteCommand, an extension of the Command class. A \u003ccode\u003eDeleteCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * object corresponds to a type and itemNo represented by two strings."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String itemNo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public DeleteCommand(String type, String itemNo) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.itemNo \u003d itemNo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Removes task from list based on index given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param tasks Class dealing with arraylist of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param ui Class dealing with User interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param storage Class dealing with storage of task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Output message to console."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int item \u003d Integer.parseInt(itemNo) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int num \u003d tasks.list.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assert item \u003c num;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String line1 \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"   \" + tasks.list.get(item);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        tasks.list.remove(item);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assert tasks.list.size() \u003d\u003d num - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String line2 \u003d \"Now you have \" + tasks.list.size() + \" in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return line1 + \"\\n\" + line2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 35
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param filePath location of file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Runs duke program to get response for user command input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param input user command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return program response"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "            Command c \u003d parser.parseCommand(input,tasks.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "            response \u003d c.execute(tasks,ui,storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "            response \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "            response \u003d ui.sayGoodbye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "                storage.writeToFile(tasks.list);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "                response \u003d ui.showSavingError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teika97": 55,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents Exceptions that are specific to the Duke app."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String err;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.err \u003d s;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns the basic error message for Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Duke error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"DukeException: \" + \"\\u2639\" + \" OOPS!!! \" + err;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 18
    }
  },
  {
    "path": "src/main/java/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents EditCommand, an extension of the Command class. A \u003ccode\u003eEditCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * object corresponds to type and itemNo represented by two strings."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String itemNo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public EditCommand(String type, String itemNo) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.itemNo \u003d itemNo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Changes status of a task to done in list based on the index given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param tasks Class dealing with arraylist of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param ui Class dealing with User interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param storage Class dealing with storage of task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // marks tasks as done for the done command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int item \u003d Integer.parseInt(itemNo) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assert item \u003c tasks.list.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "        tasks.list.get(item).isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + tasks.list.get(item);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 29
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents an Event task. A \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * corresponds to a time and a task type represented by two"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " * strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param at time of event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, description, time separated by a dash."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type + \"-\" + super.getInfo() + \"-\" + this.at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, description, time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 38
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String keyWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected boolean inList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param type type of command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param keyWord word to be matched to all tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public FindCommand(String type, String keyWord) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        inList \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Traverse TaskList to find all matching tasks and add into a list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String desc \u003d tasks.list.get(i).description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "            Task foundTask \u003d tasks.list.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "            boolean hasKeyWord \u003d desc.contains(keyWord);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (hasKeyWord) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "                inList \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "                foundTasks.add(foundTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Print out list of matching tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (inList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assert foundTasks.size() \u003e 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "            output \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "            for (int j \u003d 0; j \u003c foundTasks.size(); j++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "                String itemNo \u003d Integer.toString(j+1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "                output \u003d output + \"\\n\" + itemNo + \".\" + foundTasks.get(j);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assert foundTasks.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "            output \u003d \"No matching tasks found.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 46
    }
  },
  {
    "path": "src/main/java/HelloWorld.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class HelloWorld extends Application {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        launch();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 20
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Duke runDuke \u003d new Duke(\"/Users/Kai/Documents/GitHub/duke/data/data.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        launch();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teika97"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teika97"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teika97"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teika97"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teika97"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Label welcomeText \u003d new Label(runDuke.showWelcome());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teika97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teika97"
        },
        "content": "                DialogBox.getDukeDialog(welcomeText, new ImageView(duke))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teika97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teika97"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teika97"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teika97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teika97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teika97"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teika97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teika97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teika97"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teika97"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teika97"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Label dukeText \u003d new Label(runDuke.getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teika97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teika97"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teika97"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teika97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teika97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 123
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents all methods related to parsing of commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isTodo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isDeadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isBye;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isDelete;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isFind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    String [] cmdUnits;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns command based on the command type e.g. todo, deadline, event, etc."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Validates command, if not valid, DukeException is thrown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param cmd Command string based on user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param n Total no. of tasks in list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @throws DukeException If command input is not valid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Command parseCommand(String cmd, int n) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Split all words in the command string into cmdUnits"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "        cmdUnits \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Initialize variables used for reformatting command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Command has only command type, description, \"/by\" or \"/at\" and time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String [] finalCmdUnits \u003d new String[4];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Command finalCmd \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "        boolean continuing \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // First element of cmdUnits is Command type"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Input into first element of finalCmdUnits"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "        finalCmdUnits[i] \u003d this.cmdUnits[i];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Initialize all boolean variables based on command type"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isTodo \u003d finalCmdUnits[0].equals(\"todo\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDeadline \u003d finalCmdUnits[0].equals(\"deadline\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isEvent \u003d finalCmdUnits[0].equals(\"event\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isList \u003d finalCmdUnits[0].equals(\"list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isBye \u003d finalCmdUnits[0].equals(\"bye\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDone \u003d finalCmdUnits[0].equals(\"done\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDelete \u003d finalCmdUnits[0].equals(\"delete\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isFind \u003d finalCmdUnits[0].equals(\"find\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "        i++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assert i \u003d\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int j \u003d 1; j \u003c cmdUnits.length; j++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "            // If not separated by /by or /at"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "            // Words in cmdUnits concatenated into same finalCmdUnit"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": "            // /by or /at saved as a separate variable, finalCmdUnits[2]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (cmdUnits[j].contains(\"/\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teika97"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert i \u003d\u003d 2;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teika97"
        },
        "content": "                finalCmdUnits[i] \u003d cmdUnits[j];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teika97"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert i \u003d\u003d 3;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teika97"
        },
        "content": "                continuing \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert (i \u003d\u003d 1 || i \u003d\u003d 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teika97"
        },
        "content": "                if (!continuing) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    finalCmdUnits[i] \u003d cmdUnits[j];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teika97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    finalCmdUnits[i] \u003d finalCmdUnits[i].concat(\" \" + cmdUnits[j]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teika97"
        },
        "content": "                continuing \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Check command does not violate any input format restrictions"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teika97"
        },
        "content": "        validateCmd(finalCmdUnits, n);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Create new command variable based on command type"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isBye) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new Command(finalCmdUnits[0]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new PrintCommand(finalCmdUnits[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isTodo) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new AddCommand(finalCmdUnits[0], finalCmdUnits[1], null);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDeadline || isEvent) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String convertedDate;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teika97"
        },
        "content": "                convertedDate \u003d setDate(finalCmdUnits[3]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teika97"
        },
        "content": "                System.out.println(\"Warning - Unable to format date/time input.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teika97"
        },
        "content": "                convertedDate \u003d finalCmdUnits[3];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new AddCommand(finalCmdUnits[0], finalCmdUnits[1], convertedDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new EditCommand(finalCmdUnits[0], finalCmdUnits[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDelete) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new DeleteCommand(finalCmdUnits[0], finalCmdUnits[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isFind) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new FindCommand(finalCmdUnits[0], finalCmdUnits[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return finalCmd;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // Adapted from https://stackoverflow.com/questions/10308720/java-change-date-format-from-custom-date-to-mm-dd-yyyy"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns translated date/time input into (dd MMMM, yyyy, hh:mm a) format e.g. 12 December, 2019, 06:00 PM."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param input Date from user input."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Translated Date."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @throws ParseException If user input is unparseable."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static String setDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teika97"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teika97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMM, yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Date convertedDate \u003d null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teika97"
        },
        "content": "        convertedDate \u003d parser.parse(input);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return formatter.format(convertedDate);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Checks if command input from user is valid."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * If not, throws DukeException."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param cmd Command string array reformatted from user input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param n Total no. of tasks in list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @throws DukeException If command input is not valid."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void validateCmd(String [] cmd, int n) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Throw DukeException based on which requirement it violates"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (!(isTodo || isDeadline || isEvent || isList || isBye || isDone || isDelete || isFind)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teika97"
        },
        "content": "            throw new DukeException(\"Command type not valid.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isTodo || isDeadline || isEvent) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (cmd[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"The description of a \" + cmd[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if ((isDeadline || isEvent) \u0026\u0026 (cmd[3] \u003d\u003d null)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"No date/time input for \" + cmd[0] + \".\" + \" Note: Input for \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teika97"
        },
        "content": "                        + cmd[0] + \" must have \" + (isDeadline ? \"/by\" : \"/at\") + \" before date/time.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if ((isDeadline || isEvent) \u0026\u0026 !(cmd[2].equals(isDeadline ? \"/by\" : \"/at\"))) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Input for \" + cmd[0] + \" must have \" + (isDeadline ? \"/by\" : \"/at\") + \".\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDone || isDelete) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teika97"
        },
        "content": "            int itemNo;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teika97"
        },
        "content": "                itemNo \u003d Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Unable to format due to improper input.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (itemNo \u003e n) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Task \" + itemNo + \" not found in list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (!(cmd[2] \u003d\u003d null) || !(cmd[3] \u003d\u003d null)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Unable to format due to improper input.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isFind) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String [] keyWords \u003d cmd[1].split(\" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (keyWords.length \u003e 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Only one keyword allowed.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 174
    }
  },
  {
    "path": "src/main/java/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents the PrintCommand, an extension of the Command class. A \u003ccode\u003ePrintCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * object corresponds to a type represented by a string."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class PrintCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public PrintCommand(String type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints out all tasks in the list currently."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param tasks Class dealing with arraylist of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param ui Class dealing with User interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param storage Class dealing with storage of task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.list.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String listNum \u003d Integer.toString(i+1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "            output \u003d output + \"\\n\" + listNum + \".\" + tasks.list.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 25
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents all methods related to storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected File ldFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.ldFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns list of all tasks based on file content."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * If file not found, throws FileNotFoundException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return List of all tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Scanner s \u003d new Scanner(ldFile);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "            // Split all words in a row from file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String [] item \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assert (item[1].equals(\"1\") || item[1].equals(\"0\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "            // Create and add task object into TaskList based on row data"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "            switch (item[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert item.length \u003d\u003d 3;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "                list.add(new Todo(item[2]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "                if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.get(list.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert item.length \u003d\u003d 4;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "                list.add(new Event(item[2], item[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "                if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.get(list.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert item.length \u003d\u003d 4;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "                list.add(new Deadline(item[2], item[3]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "                if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.get(list.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teika97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teika97"
        },
        "content": "                assert false : item[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Overwrites file content with data of all tasks in list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param list List of all tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String[] toBeSaved \u003d new String[100];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teika97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Retrieve all tasks from TaskList and convert into single string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Save all tasks into a string array"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teika97"
        },
        "content": "            Task item \u003d list.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teika97"
        },
        "content": "            toBeSaved[i] \u003d item.getInfo();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Write string array into file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int j \u003d 0; j \u003c list.size(); j++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teika97"
        },
        "content": "            fw.write(toBeSaved[j] + System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teika97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 91
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents a task inputted by the user. A \u003ccode\u003eTask\u003c/code\u003e object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * corresponds to a description represented by a String and its status"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " * represented by a boolean"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns icon based on its status."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Status Icon."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or x symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns status and description of task separated by a dash."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "            return \"1\" + \"-\" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"0\" + \"-\" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns the status icon and description of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Status icon and description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teika97": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents the list of all tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadFile) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        list \u003d loadFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns total no. of tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Total no. of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents a todo task. A \u003ccode\u003eTodo\u003c/code\u003e object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": " * corresponds to a task type represented by a string."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, task description separated by a dash."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type + \"-\" + super.getInfo();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns task type, status, task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 30
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": " * Represents all methods related to user interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints loadingError if unable to find file to load content."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        DukeException loadingError \u003d new DukeException(\"Unable to find File!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return loadingError.getMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints savingError if unable to find file to write content."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showSavingError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        DukeException savingError \u003d new DukeException(\"Unable to save File!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return savingError.getMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        /**String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "         System.out.println(\"Hello from\\n\" + logo);**/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Returns command based on user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @return Command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * @param err Error."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showError(String err) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return err;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teika97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teika97"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teika97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"_________________________________________\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 67
    }
  },
  {
    "path": "src/test/java/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private TaskList tasksTest \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Ui uiTest \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Storage storageTest \u003d new Storage(\"stuff\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - todo command type"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"todo\",\"buy books\",null).execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(1,tasksTest.list.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - event command type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"event\",\"birthday party\",\"08-12-2019 18:00\").execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(2,tasksTest.list.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - deadline command type"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"deadline\",\"report\",\"11-12-2019 23:59\").execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(3,tasksTest.list.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 23
    }
  },
  {
    "path": "src/test/java/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(true,new Command(\"bye\").isExit());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"todo\",\"buy books\",null).isExit());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new PrintCommand(\"list\").isExit());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"event\",\"birthday party\",\"08-12-2019 18:00\").isExit());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"deadline\",\"project\",\"31-08-2019 23:59\").isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new DeleteCommand(\"delete\",\"2\").isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new EditCommand(\"done\",\"1\").isExit());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 15
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Command cmdTest;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void testSetDate() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test for correct input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(\"29 August, 2019, 06:00 PM\",new Parser().setDate(\"29-08-2019 18:00\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test for exception thrown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assertEquals(\"Unparseable date: 31 Aug 2019 11:59pm\",new Parser().setDate(\"31 Aug 2019 11:59pm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assertEquals(\"Unparseable date: \\\"31 Aug 2019 11:59pm\\\"\",e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 23
    }
  }
]
