[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "[D][✓] homework (by: 31-Dec-2019 06:00PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "[E][✓] meeting (at: 31-Dec-2019 11:59PM)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "[D][✘] assignment (by: 04-Apr-2019 05:00PM)"
      }
    ],
    "authorContributionMap": {
      "jietung": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Deadline(String description, Date date, LocalTime time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return dateFormatter.format(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return timeFormatter.format(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateString()  + \" \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + getTimeString() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public static ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public static String lines \u003d \"\\t____________________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "            FileReader reader \u003d new FileReader(\"C:\\\\Users\\\\jietung\\\\Desktop\\\\duke\\\\src\\\\main\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jietung"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jietung"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jietung"
        },
        "content": "            while ((s \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jietung"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (s.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Todo(s.substring(7));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jietung"
        },
        "content": "                } else if (s.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    int index \u003d s.indexOf(58);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String ss \u003d s.substring(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String[] ssArr \u003d ss.split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    Date date \u003d parser.parse(ssArr[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String strTime \u003d ssArr[2].substring(0, 7);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(strTime, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Deadline(s.substring(7, index - 4), date, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jietung"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    int index \u003d s.indexOf(58);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String ss \u003d s.substring(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String[] ssArr \u003d ss.split(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    Date date \u003d parser.parse(ssArr[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    String strTime \u003d ssArr[2].substring(0, 7);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(strTime, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    t \u003d new Event(s.substring(7, index - 4), date, time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    if (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jietung"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    arr.add(t);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.out.println(\"\\t\" + i + \". \" + t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jietung"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jietung"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jietung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jietung"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jietung"
        },
        "content": "        while (!str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jietung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jietung"
        },
        "content": "                input(str);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.out.println(lines);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.err.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.out.println(lines);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jietung"
        },
        "content": "            str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jietung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jietung"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\"C:\\\\Users\\\\jietung\\\\Desktop\\\\duke\\\\src\\\\main\\\\data\\\\duke.txt\", false);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jietung"
        },
        "content": "            BufferedWriter bufferedWriter \u003d  new BufferedWriter(writer);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jietung"
        },
        "content": "            for (Task t : arr) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jietung"
        },
        "content": "                bufferedWriter.write(t.toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jietung"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jietung"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jietung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jietung"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public static void input(String str) throws Exception {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jietung"
        },
        "content": "        String[] strArr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jietung"
        },
        "content": "        if (str.equals(\"list\")) { //list"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jietung"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jietung"
        },
        "content": "            for (Task t : arr) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jietung"
        },
        "content": "                System.out.println(\"    \" + i + \".\" +  t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jietung"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"done\")) { //mark task as done"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jietung"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please state the task number you want to mark as done.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jietung"
        },
        "content": "            int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jietung"
        },
        "content": "            if (index \u003e\u003d arr.size()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! The number is too large.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! The number is too small.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Task t \u003d arr.get(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jietung"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else if (strArr[0].equals(\"todo\")"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jietung"
        },
        "content": "                || strArr[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jietung"
        },
        "content": "                || strArr[0].equals(\"event\")) { //add task to list"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jietung"
        },
        "content": "            if (strArr[0].equals(\"todo\")) { //todo"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jietung"
        },
        "content": "                t \u003d new Todo(str.substring(5));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jietung"
        },
        "content": "                arr.add(t);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } else if (strArr[0].equals(\"deadline\")) { //deadline"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (!str.contains(\" /by \")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int indexOfSlash \u003d str.indexOf(47);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String ss1 \u003d str.substring(0, indexOfSlash);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String[] ss1Arr \u003d ss1.split(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String ss2 \u003d str.substring(indexOfSlash);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String[] ss2Arr \u003d ss2.split(\" \");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (ss1Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (ss2Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jietung"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jietung"
        },
        "content": "                Date date \u003d parser.parse(ss2Arr[1]);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int intTime \u003d Integer.parseInt(ss2Arr[2]);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int hour \u003d intTime / 100;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int minute \u003d intTime % 100;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jietung"
        },
        "content": "                LocalTime time \u003d LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jietung"
        },
        "content": "                t \u003d new Deadline(str.substring(9, indexOfSlash - 1), date, time);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jietung"
        },
        "content": "                arr.add(t);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } else { //event"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (!str.contains(\" /at \")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of event cannot be empty.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int indexOfSlash \u003d str.indexOf(47);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String ss1 \u003d str.substring(0, indexOfSlash);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String[] ss1Arr \u003d ss1.split(\" \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String ss2 \u003d str.substring(indexOfSlash);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jietung"
        },
        "content": "                String[] ss2Arr \u003d ss2.split(\" \");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (ss1Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jietung"
        },
        "content": "                if (ss2Arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jietung"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of event cannot be empty.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jietung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jietung"
        },
        "content": "                SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jietung"
        },
        "content": "                Date date \u003d parser.parse(ss2Arr[1]);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int intTime \u003d Integer.parseInt(ss2Arr[2]);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int hour \u003d intTime / 100;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jietung"
        },
        "content": "                int minute \u003d intTime % 100;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jietung"
        },
        "content": "                LocalTime time \u003d LocalTime.of(hour, minute);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jietung"
        },
        "content": "                t \u003d new Event(str.substring(6, indexOfSlash - 1), date, time);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jietung"
        },
        "content": "                arr.add(t);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\t  \" + t);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }  else if (strArr[0].equals(\"delete\")) { //delete"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jietung"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! Please state the task number you want to delete.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jietung"
        },
        "content": "            int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jietung"
        },
        "content": "            if (index \u003e\u003d arr.size()) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! The number is too large.\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jietung"
        },
        "content": "            } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jietung"
        },
        "content": "                throw new DukeException(\"OOPS!!! The number is too small.\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jietung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jietung"
        },
        "content": "            Task t \u003d arr.remove(index);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tNoted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jietung"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jietung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jietung"
        },
        "content": "            throw new DukeException(\"OOPS!!! I,m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jietung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 271,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Event(String description, Date date, LocalTime time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return dateFormatter.format(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return timeFormatter.format(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDateString()  + \" \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jietung"
        },
        "content": "                + getTimeString() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[\"  + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jietung"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jietung"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jietung"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jietung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jietung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jietung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jietung"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jietung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jietung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jietung": 10
    }
  }
]
