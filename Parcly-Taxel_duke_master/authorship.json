[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "# Bari, a personal assistant chatbot"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "[![Build Status](https://travis-ci.com/Parcly-Taxel/duke.svg?branch\u003dmaster)](https://travis-ci.com/Parcly-Taxel/duke)"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 2,
      "-": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"java\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"application\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"checkstyle\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "group \"bari\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "version \"0.9.5\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    testImplementation \"org.junit.jupiter:junit-jupiter:5.5.1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    toolVersion \u003d \"8.23\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    version \u003d \"12.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveBaseName \u003d \"bari\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveVersion \u003d \"0.9.5\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    mainClassName \u003d \"bari.Main\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 42
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "rootProject.name \u003d \"bari\""
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 1
    }
  },
  {
    "path": "src/main/java/bari/Bari.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.ResponseStrings;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * The main logical class, responsible for initialisation of data structures"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * and passing arguments to them for processing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Bari extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    String getResponse(String cmd) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ResponseStrings respStrings \u003d new ResponseStrings();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Command.parse(cmd).execute(tasks, respStrings, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return respStrings.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Bari() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks \u003d new TaskList(storage.read());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 40,
      "-": 2
    }
  },
  {
    "path": "src/main/java/bari/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    static DialogBox getBariDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 61
    }
  },
  {
    "path": "src/main/java/bari/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * This class is a workaround for classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 12
    }
  },
  {
    "path": "src/main/java/bari/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * A GUI for Bari using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Bari bari \u003d new Bari();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            stage.setTitle(\"Bari\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setBari(bari);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 30
    }
  },
  {
    "path": "src/main/java/bari/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Bari bari;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Image bariImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bari.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void setBari(Bari d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        bari \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * containing Bari\u0027s reply and then appends them to the dialog container."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String response \u003d bari.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                DialogBox.getBariDialog(response, bariImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        // This response is only produced by an ExitCommand"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (response.equals(\"Bye!\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            // Wait for 0.5 seconds and exit"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Timer tm \u003d new Timer();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tm.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }, 500);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 66
    }
  },
  {
    "path": "src/main/java/bari/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to add a new task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new AddCommand with the given task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tl.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.add(task + \" was added.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.numTasksInList(tl);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.writeToStorage(tl, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 33
    }
  },
  {
    "path": "src/main/java/bari/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Abstract class representing individual commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * rStrings is modified to contain this program\u0027s response to the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param respStrings The ResponseStrings object operated on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public abstract void execute(TaskList tl, ResponseStrings respStrings, Storage storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses a command, returning a corresponding Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param cmd The command input from the GUI\u0027s entry field."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The corresponding Command object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Command parse(String cmd) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (cmd.equals(\"sort\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new SortCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String[] parts \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Yes, but what comes next?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assert parts.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String data \u003d parts[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new DoneCommand(data);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new DeleteCommand(data);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Todo.parse(data));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Event.parse(data));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Deadline.parse(data));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new FindCommand(data);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"I don\u0027t know what that command is.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 64
    }
  },
  {
    "path": "src/main/java/bari/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to delete an item from the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new DeleteCommand with the specified index."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param str The index of the task to delete, where the first task is 1."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public DeleteCommand(String str) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int ind \u003d respStrings.checkInteger(str, tl);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.add(tl.delete(ind) + \" was deleted.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.numTasksInList(tl);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.writeToStorage(tl, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 32
    }
  },
  {
    "path": "src/main/java/bari/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to mark an item in the task list as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new DoneCommand with the specified index."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param str The index of the task to mark as done, where the first task is 1."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public DoneCommand(String str) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int ind \u003d respStrings.checkInteger(str, tl);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tl.markDone(ind);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.add(tl.get(ind) + \" is done.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.writeToStorage(tl, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 32
    }
  },
  {
    "path": "src/main/java/bari/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to exit the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.add(\"Bye!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 18
    }
  },
  {
    "path": "src/main/java/bari/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to find items in the task list matching some keyword,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * and to display those items."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new FindCommand with the specified keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param keyword The keyword that is being searched for."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.listFilteredTasks(tl, keyword);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 30
    }
  },
  {
    "path": "src/main/java/bari/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to list items in a task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.listTasks(tl);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 18
    }
  },
  {
    "path": "src/main/java/bari/command/ResponseStrings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class that handles building this program\u0027s responses to user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * There is an ArrayList in this class, to which lines can be added."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * The concatenation of all these lines (by \u003ccode\u003e\\n\u003c/code\u003e) can then be exported out"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * as a single String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ResponseStrings {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private ArrayList\u003cString\u003e lines;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ResponseStrings() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds an arbitrary String to this instance\u0027s ArrayList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The String to add."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(String line) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        lines.add(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses a String representing an integer, checking if it represents a valid index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * in the given TaskList (between 1 and \u003ccode\u003etl.size()\u003c/code\u003e, inclusive)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The parsed integer."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws IllegalArgumentException If the given String did not represent an integer,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *         or if that integer was out of range."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int checkInteger(String str, TaskList tl) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int n \u003d tl.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String rangeMessage \u003d String.format(\"You have %d task%s. \", n, n \u003d\u003d 1 ? \"\" : \"s\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                + \"The index must be between 1 and that number.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            index \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(rangeMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (index \u003c 1 || n \u003c index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(rangeMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds a line informing about the number of tasks in the given TaskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The TaskList whose tasks are to be enumerated."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void numTasksInList(TaskList tl) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int n \u003d tl.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        lines.add(String.format(\"%d task%s in your list.\", n, n \u003d\u003d 1 ? \" is\" : \"s are\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds lines describing the Tasks in the given TaskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The TaskList whose tasks are to be described."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void listTasks(TaskList tl) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (tl.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            lines.add(\"You have no tasks.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            lines.add(\"You have these tasks:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tl.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                lines.add(i + \". \" + tl.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds lines describing the Tasks in the given TaskList matching the given keyword String."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The TaskList to filter."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param keyword The keyword that will be matched against each task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void listFilteredTasks(TaskList tl, String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList filteredTasks \u003d tl.filter(keyword);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (filteredTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            lines.add(\"No tasks match.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            lines.add(\"These tasks match:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                lines.add(i + \". \" + filteredTasks.get(i - 1));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Writes the contents of the given TaskList to disk. If an exception is thrown"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * in the process, add a line saying this."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The TaskList whose contents are to be written to disk."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The Storage object responsible for writing said contents."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void writeToStorage(TaskList tl, Storage storage) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            storage.write(tl.export());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            lines.add(\"Error writing tasks to file!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns the string representation of this object."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * This is defined as the joining by \u003ccode\u003e\\n\u003c/code\u003e of all lines in this object\u0027s ArrayList."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The concatenation of all lines in this object."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 124
    }
  },
  {
    "path": "src/main/java/bari/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to sort the task list in-place."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given parameters."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see Command#execute"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, ResponseStrings respStrings, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tl.sort();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.add(\"Tasks sorted.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.numTasksInList(tl);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        respStrings.writeToStorage(tl, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 21
    }
  },
  {
    "path": "src/main/java/bari/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class that handles reading and writing tasks from and to disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new Storage anchored to a specific file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param path The file\u0027s pathname."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.taskFile \u003d new File(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Reads tasks from this instance\u0027s task file, one task per line."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return An ArrayList of strings, each string representing a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws FileNotFoundException If the file does not exist or is otherwise inaccessible."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e read() throws FileNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Scanner sc \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            out.add(sc.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Writes the given string representations of tasks to this instance\u0027s task file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param lines The lines to be written, produced by TaskList\u0027s export() method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws IOException If an error occurs while writing the tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void write(ArrayList\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        FileWriter writer \u003d new FileWriter(taskFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            writer.write(line + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 53
    }
  },
  {
    "path": "src/main/java/bari/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a deadline, a task to be completed by a certain time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /by (.+)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a Deadline from its description and its time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of the task which is under deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param by The time by which this task must be done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Deadline(String desc, LocalDateTime by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns a Deadline constructed from it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line, which should contain \"/by\" in its middle."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Deadline parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Matcher m \u003d PAT.matcher(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (!m.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Deadline description must include /by surrounded by spaces.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new Deadline(m.group(1), LocalDateTime.parse(m.group(2), INPUT_FORMATTER));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Time must be in the format day#/month#/yyyy hhmm.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DISPLAY_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Deadline for saving to disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker D and a time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"D|\" + super.export() + \"|\" + by.format(INPUT_FORMATTER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 70
    }
  },
  {
    "path": "src/main/java/bari/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing an event that will occur at or around a specified time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /at (.+)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes an Event from its description and its time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param at The time at which this event happens."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Event(String desc, LocalDateTime at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns an Event constructed from it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line, which should contain \"/at\" in its middle."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Event parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Matcher m \u003d PAT.matcher(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (!m.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Event description must include /at surrounded by spaces.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new Event(m.group(1), LocalDateTime.parse(m.group(2), INPUT_FORMATTER));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Time must be in the format day#/month#/yyyy hhmm.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DISPLAY_FORMATTER) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Event for saving to disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker E and a time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"E|\" + super.export() + \"|\" + at.format(INPUT_FORMATTER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 70
    }
  },
  {
    "path": "src/main/java/bari/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * A generic task, which can be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a task not yet done with the given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of this task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns the description associated with this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return This task\u0027s description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Gets a Unicode character representing whether this task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return U+2713 (tick) if this task is done, U+2718 (cross) otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String getDoneChar() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String boxedChar \u003d \"[\" + getDoneChar() + \"]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return boxedChar + \" \" + desc;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this task in a short, ASCII-friendly format. Suitable for interchange"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * with other applications or just viewing bare."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing its done status (0 or 1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *     and its description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return (done ? \"1|\" : \"0|\") + desc;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Compares this Task against Task other. The type of task is compared first,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * followed by the description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param other The Task this Task will be compared to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A positive integer if this \u003e other, a negative integer if less and zero otherwise."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (this.export().compareTo(other.export()) \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } else if (this.export().compareTo(other.export()) \u003c 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 82
    }
  },
  {
    "path": "src/main/java/bari/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * A class that holds a list of tasks that may be added to, removed or"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * marked as done. This list is indexed starting from 1."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final Pattern TASK_PAT \u003d Pattern.compile(\"([TED])\\\\|([01])\\\\|(.*?)\\\\|(.*?)\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes an empty task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Imports the given ArrayList of Tasks and initializes this instance with them."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param stringTasks A list of tasks in exported format to be imported."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e stringTasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (String stringTask: stringTasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Matcher m \u003d TASK_PAT.matcher(stringTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            if (!m.matches()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                System.out.println(\"Ignoring malformed task line \" + stringTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            switch (m.group(1)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Todo(m.group(3));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Event(m.group(3), LocalDateTime.parse(m.group(4), INPUT_FORMATTER));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Deadline(m.group(3), LocalDateTime.parse(m.group(4), INPUT_FORMATTER));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            default: // Can\u0027t reach here because the regex would have rejected it"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            assert t !\u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            if (m.group(2).equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns the number of tasks in this list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The size of this instance\u0027s list, which is zero if and only if"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *     said list is empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds an undone task to the end of the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Gets the task at one-indexed position i in the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * \u003ccode\u003eget()\u003c/code\u003e, \u003ccode\u003emarkDone()\u003c/code\u003e and \u003ccode\u003eremoveTask()\u003c/code\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * all take an index i starting from 1, raising an exception if that index is invalid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param i The index of the task to be retrieved, starting from 1."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The task at position i."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws IndexOutOfBoundsException If position i is not in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task get(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.get(i - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Marks the task at index i as done."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see #get(int)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void markDone(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.get(i - 1).markDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Removes the task at index i and returns it."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see #get(int)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task delete(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.remove(i - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports the tasks in this list into an ArrayList of strings, which can then"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * be written to disk."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return An ArrayList of strings representing this list\u0027s tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e export() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            out.add(t.export());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Filters this instance\u0027s list for those tasks matching a given keyword."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param keyword The keyword being searched for."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A smaller or same-size ArrayList containing those tasks with the given keyword."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cTask\u003e filter(String keyword) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            if (task.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                out.add(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Sorts the tasks in this TaskList in-place."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Tasks are sorted first by task type, then by description."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void sort() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Collections.sort(tasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 151
    }
  },
  {
    "path": "src/main/java/bari/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a task to be done, but not at any particular time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a Todo from its description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc What is to be done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns a Todo constructed from it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Todo parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return new Todo(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Todo for saving to disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker T."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"T|\" + super.export() + \"|\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 47
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "         prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            fx:controller\u003d\"bari.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 19
    }
  },
  {
    "path": "src/test/java/bari/BariTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class BariTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Todo t1 \u003d Todo.parse(\"dig a trench from the fence to lunchtime\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t1.toString(), \"[T][✘] dig a trench from the fence to lunchtime\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Event t2 \u003d Event.parse(\"Beijing Olympics Opening Ceremony /at 8/8/2008 2000\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        t2.markDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t2.toString(), \"[E][✓] Beijing Olympics Opening Ceremony \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                + \"(at: 8 August 2008 20:00)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Deadline t3 \u003d Deadline.parse(\"my birth /by 4/12/1998 1251\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t3.export(), \"D|0|my birth|4/12/1998 1251\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Todo t4 \u003d Todo.parse(\"nothing\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        t4.markDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t4.export(), \"T|1|nothing|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e Deadline.parse(\"heat death /by eternity\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks.add(new TaskStub());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.size(), 5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.markDone(4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.delete(3);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.get(3).toString(), \"done task\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.get(4).export(), \"undone export\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.get(5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        StorageStub storageStub \u003d new StorageStub(\"tasks.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        TaskListStub tasksStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ResponseStringsStub respStringsStub \u003d new ResponseStringsStub();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Command c \u003d new AddCommand(new TaskStub());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c.execute(tasksStub, respStringsStub, storageStub);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasksStub.size(), 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c \u003d new DeleteCommand(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c.execute(tasksStub, respStringsStub, storageStub);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasksStub.size(), 0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 65
    }
  },
  {
    "path": "src/test/java/bari/ResponseStringsStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.command.ResponseStrings;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ResponseStringsStub extends ResponseStrings {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(String line) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void listTasks(TaskList tl) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void numTasksInList(TaskList tl) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"string representation of ResponseStrings\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 23
    }
  },
  {
    "path": "src/test/java/bari/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    StorageStub(String path) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(path);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e read() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void write(ArrayList\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 20
    }
  },
  {
    "path": "src/test/java/bari/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private boolean isEmpty \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        isEmpty \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task delete(int i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        isEmpty \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return new TaskStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return isEmpty ? 0 : 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 24
    }
  },
  {
    "path": "src/test/java/bari/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package bari;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import bari.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class TaskStub extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    TaskStub() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"done task\" : \"undone task\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"done export\" : \"undone export\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 19
    }
  }
]
