[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 40
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 1
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input starting with either \"todo\", \"deadline\" or \"event\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private TaskType enumType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String taskDesc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String timeDesc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a AddCommand object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param enumType indicates the type of add command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param taskDesc description of the task by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param timeDesc inputted time of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public AddCommand(TaskType enumType, String taskDesc, String timeDesc) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.enumType \u003d enumType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskDesc \u003d taskDesc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.timeDesc \u003d timeDesc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String to be displayed as Duke response in GUI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task requirements is not met"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        switch (enumType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            newTask \u003d new Todo(this.taskDesc);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            newTask \u003d new Deadline(this.taskDesc, this.timeDesc);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            newTask \u003d new Event(this.taskDesc, this.timeDesc);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"This doesn\u0027t make sense!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return addTask(newTask, tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param newTask the task to be added"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks the existing taskList"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String informing the user of the task addition"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String addTask(Task newTask, TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        int numTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assert numTasks !\u003d 0 : \"Tasks did not get added to the task list!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\" + \"\\n\" + newTask.toString() +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                \"\\n\" + \"Now you have \" + numTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 69
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Parent class of all the command objects that deals with user inputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the task inputted by the user to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task requirements is not met"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Determines whether the program stops running."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return boolean value to determine whether the program terminates"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 25
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents a \"Deadline\" task inputted by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String timeDesc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a Deadline task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param desc description of the task by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param timeDesc inputted time of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task description or time is not inputted,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *                       or time is inputted in the wrong format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Deadline(String desc, String timeDesc) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.timeDesc \u003d timeDesc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            SimpleDateFormat deadlineFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            this.date \u003d deadlineFormatter.parse(timeDesc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Please enter deadline in format dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the object to its string form to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String printing out the Deadline object\u0027s description, time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *          snd status of completion"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the Deadline object to the String form to be saved in file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String format of the object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"D | [✓] | \" + taskDesc + \" | \" + timeDesc + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"D | [✗] | \" + taskDesc + \" | \" + timeDesc + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 52
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input \"delete\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private int intNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param stringNum indicates the task to be deleted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public DeleteCommand(String stringNum) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            this.intNum \u003d Integer.parseInt(stringNum);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task requirements is not met"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (this.intNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Task \" + intNum + \" does not exist.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Task toRemove \u003d tasks.get(intNum - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        tasks.remove(intNum - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String printable \u003d (\"Noted. I\u0027ve removed this task:\" + \"\\n\" + toRemove.toString() +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return printable;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 40
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.text \u003d l;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.displayPicture \u003d iv;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Circle clip \u003d new Circle(50, 50, 50);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        l.setPadding(new Insets(5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        iv.setClip(clip);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        l.setTextFill(Color.WHITE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        l.setFont(Font.font(16));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill(Color.rgb(55, 71, 133), new CornerRadii(10), Insets.EMPTY);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Background background \u003d new Background(backFill);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        l.setFont(Font.font(16));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        BackgroundFill backFill \u003d new BackgroundFill(Color.rgb(220, 222, 225), new CornerRadii(10), Insets.EMPTY);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Background background \u003d new Background(backFill);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        db.setBackground(background);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 66
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input \"done\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private int intNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param stringNum indicates the task to be marked as completed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if the string is not a number"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public DoneCommand(String stringNum) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            this.intNum \u003d Integer.parseInt(stringNum);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task requirements is not met"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (intNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Task \" + intNum + \" does not exist.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Task done \u003d tasks.get(intNum - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        done.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String printable \u003d (\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + done.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return printable;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents main running class of the Duke program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Storage storage \u003d new Storage(\"C:\\\\Users\\\\Lynn\\\\Desktop\\\\Y2S1\\\\CS2103T\\\\iP\\\\dukenew\\\\src\\\\main\\\\java\\\\TaskList.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Image user \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            .getResourceAsStream(\"/resources/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Image duke \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            .getResourceAsStream(\"/resources/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer \u003d new VBox(10);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Add padding to dialog container"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.setPadding(new Insets(5, 10, 10, 5));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput.setStyle(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //sendButton.setStyle(\"-fx-background-color: #D6E6FE\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout, Color.WHITE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.getIcons().add(new Image(this.getClass()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                .getResourceAsStream(\"/resources/images/javamascot.png\")));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Display welcome text upon running of the app"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String welcomeText \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                DialogBox.getDukeDialog(new Label(welcomeText), new ImageView(duke))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                handleExceptions(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                handleExceptions(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private void handleExceptions(DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Label dukeText \u003d new Label(e.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return Parser.parse(input).execute(tasks, storage);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 151,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents all exceptions thrown during the execution of the duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents an \"Event\" task inputted by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String timeDesc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs an Events task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param desc description of the task by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param timeDesc inputted time of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task description or time is not inputted,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *                       or time is inputted in the wrong format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Event(String desc, String timeDesc) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.timeDesc \u003d timeDesc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            SimpleDateFormat deadlineFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm-hhmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            this.date \u003d deadlineFormatter.parse(timeDesc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Please enter deadline in format dd/mm/yyyy hhmm-hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the object to its string form to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String printing out the Event object\u0027s description, time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *          snd status of completion"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the Events object to the String form to be saved in file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String format of the object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"E | [✓] | \" + taskDesc + \" | \" + timeDesc + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"E | [✗] | \" + taskDesc + \" | \" + timeDesc + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 52
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input \"bye\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs an ExitCommand object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String to be displayed as Duke response in GUI"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Determines whether the program stops running."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return booleane value true to terminate the program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 33
    }
  },
  {
    "path": "src/main/java/KeyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input starting with \"find\"."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class KeyCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private String[] keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a AddCommand object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param keyword indicates the keyword the user is searching for"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public KeyCommand(String... keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String to be displayed as Duke response in GUI"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if keywords do not match any existing tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String printable;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        printable \u003d \"Here are the matching tasks in your list: \" + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        ArrayList\u003cString\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            String description \u003d tasks.get(i).getDesc();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            for (int k \u003d 0; k \u003c keyword.length; k++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                if (description.contains(keyword[k])) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    String toAdd \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    if (!resultList.contains(toAdd)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                        resultList.add(toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (resultList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Sorry, there are no tasks matching your keywords!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        for (int i \u003d 0; i \u003c resultList.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            printable +\u003d i + 1 + \". \" + resultList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return printable;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 55
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Command corresponding to user input \"list\"."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Executes the command input by using UI and adds the corresponding tasks to the tasklist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds the program task inputted by the user to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * and prints out corresponding response"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param tasks holds the list of tasks currently in the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param storage stores the added task to the specified file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String to be displayed as Duke response in GUI"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String printable \u003d \"Here are the tasks in your list:\" + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        printable +\u003d tasks.printTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return printable;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 27
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Deals with making sense of user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Returns differnt types of Command objects depending on user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param command represents the input by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return Command object according to what the user inputs"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException when the input is missing information or"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *                       in the wrong format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String[] commandSplit \u003d command.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String type \u003d commandSplit[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        TaskType enumType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String[] timeSplit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (commandSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw throwMissingDescException(type);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new DoneCommand(commandSplit[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new DeleteCommand(commandSplit[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            String[] wordsArray \u003d keywordsToArray(commandSplit);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new KeyCommand(wordsArray);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            enumType \u003d TaskType.valueOf(type.toUpperCase());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            assert enumType \u003d\u003d TaskType.TODO : \"Enum is not right!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new AddCommand(enumType, command.substring(5), \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            enumType \u003d TaskType.valueOf(type.toUpperCase());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            assert enumType \u003d\u003d TaskType.DEADLINE : \"Enum is not right!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            timeSplit \u003d splitCommandForTask(type, command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new AddCommand(enumType, timeSplit[0].substring(9), timeSplit[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            enumType \u003d TaskType.valueOf(type.toUpperCase());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            assert enumType \u003d\u003d TaskType.EVENT : \"Enum is not right!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            timeSplit \u003d splitCommandForTask(type, command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return new AddCommand(enumType, timeSplit[0].substring(6), timeSplit[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    + \"know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private static String[] keywordsToArray(String[] keywords) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        ArrayList\u003cString\u003e findWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            findWords.add(keywords[i]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String[] wordsArray \u003d new String[findWords.size()];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return findWords.toArray(wordsArray);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private static String[] splitCommandForTask(String type, String command) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String[] timeSplit;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            timeSplit \u003d command.split(\"/at\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            timeSplit \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (timeSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a time for your task.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return timeSplit;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    private static DukeException throwMissingDescException(String type) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        DukeException toThrow \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            toThrow \u003d new DukeException(\"☹ OOPS!!! Please indicate \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    + \"which task you have completed.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            toThrow \u003d new DukeException(\"☹ OOPS!!! Please indicate which task \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    + \"you would like to delete.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            toThrow \u003d new DukeException(\"☹ OOPS!!! Please indicate the keyword \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    + \"you are looking for!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            toThrow \u003d new DukeException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                    + \"task cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "             toThrow \u003d new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t \""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                     + \"know what that means :-(\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return toThrow;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 128
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Deals with reading from and writing to file based on inputted file path."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param filePath indicates where to read / write the file from / to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Returns an Array:ist of String pertaining to task objects in their string format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return an Array:ist of String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if the file cannot be found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        ArrayList\u003cString\u003e fileList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                fileList.add(sc.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return fileList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Sorry! The file cannot be found!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Reads and saves the tasks from the taskList to specified file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param taskList existing taskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                fw.write(taskList.get(i).toFileFormat());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            throw new DukeException(\"Something went wrong writing to file!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Parent class of the Deadline, Events and Todo objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected String taskDesc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param desc task description as inputted by the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskDesc \u003d desc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Updates the status of completion of a task to complete."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the task object to its string form to be printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String printing out the task object\u0027s description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"[✓] \" + taskDesc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"[✗] \" + taskDesc;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the Deadline object to the String form to be saved in file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String format of the object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public abstract String toFileFormat();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Returns a string corresponding to date stored in task object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return this.taskDesc;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents the list of tasks in the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates a TaskList object including tasks from existing file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param fileList List of tasks read from file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if inputs for tasks are missing or in a wrong format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e fileList) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        for (int i \u003d 0; i \u003c fileList.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            String[] listItem \u003d fileList.get(i).split(\" \\\\| \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            String type \u003d listItem[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            Task add;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                add \u003d new Todo(listItem[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                addTask(add, listItem[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                add \u003d new Deadline(listItem[2], listItem[3]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                addTask(add, listItem[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                add \u003d new Event(listItem[2], listItem[3]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                addTask(add, listItem[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "                throw new DukeException(\"The input is not a task!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates an empty TaskList object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds a task to the task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param task the task to be added to the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param status indicates whether the task has been completed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void addTask(Task task, String status) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if(status \u003d\u003d \"✓\") {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Returns list of existing tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return an ArrayList of tasks ocjects"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Prints out all tasks currently in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String corresponding to tasks in their String format"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String printTaskList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        String printable \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            printable +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return printable;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Adds a task object to the list of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param task task object to be added"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Retries a task object from the list of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param num id number of task object to be retrieved"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Task get(int num) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return this.taskList.get(num);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Removes a tasks object from the list of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param num id of task object to be deleted"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void remove(int num) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.taskList.remove(num);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Retrives the number of objects in the task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return the size of tasklist"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 115
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Enumeration representing the type of task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 6
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Represents a \"Todo\" task inputted by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Constructs a Todo task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param desc description of the task by user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @throws DukeException if task description is not inputted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the object to its string form to be printed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String printing out the Todo object\u0027s description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     *          and status of completion"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Converts the Todo object to the String form to be saved in file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String format of the object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"T | [✓] | \" + taskDesc + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "            return \"T | [✗] | \" + taskDesc + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 37
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " * Deals with user input and system output."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    protected String nextCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Creates a Ui object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Prints welcome message on screen."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Takes in user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @return String pertaining to user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        this.nextCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        return nextCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Prints a message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param message String to be displayed on screen"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void showLine(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * @param errorMessage specifies what kind of error and what user actions are needed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     * Prints error if data cannot be read from file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        System.out.println(\"There was an error loading from the file! Please try again.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 57
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testDateConversion() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"Mon Dec 02 19:00:00 SGT 2019\", new Deadline(\"return books\", \"02/12/2019 1900\").getDate().toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"[D][✗] return books (by: Mon Dec 02 19:00:00 SGT 2019)\", new Deadline(\"return books\", \"02/12/2019 1900\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testFileConversion() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"D | [✗] | return books | 02/12/2019 1900\" + \"\\n\", new Deadline(\"return books\", \"02/12/2019 1900\").toFileFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "seahlynn": 21
    }
  },
  {
    "path": "src/test/java/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class EventsTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testDateConversion() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"Mon Dec 02 20:00:00 SGT 2019\", new Events(\"return books\", \"02/12/2019 1900-2000\").getDate().toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"[E][✗] return books (at: Mon Dec 02 20:00:00 SGT 2019)\", new Events(\"return books\", \"02/12/2019 1900-2000\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testFileConversion() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"E | [✗] | return books | 02/12/2019 1900-2000\" + \"\\n\", new Events(\"return books\", \"02/12/2019 1900-2000\").toFileFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 20
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testParseForList() throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testParseForDelete() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testParseForDone() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testParseForExit() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testParseForAdd() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"todo buy lunch\") instanceof AddCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"deadline return books /by 02/12/2019 1900\") instanceof AddCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertTrue(Parser.parse(\"event team meeting /at 02/12/2019 1900-2000\") instanceof AddCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 31
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testLoad() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Storage storage \u003d new Storage(\"C:\\\\Users\\\\Lynn\\\\Desktop\\\\Y2S1\\\\CS2103T\\\\iP\\\\dukenew\\\\src\\\\main\\\\java\\\\TaskList\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        expectedOutput.add(\"D | [✗] | return books  |  02/12/2019 1900\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        expectedOutput.add(\"E | [✗] | team meeting  |  02/12/19 1700-1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        expectedOutput.add(\"T | [✗] | buy grocery  |  0/12/19 1600\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(expectedOutput, storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 15
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testPrintTasks() throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Task deadlineTask \u003d new Deadline(\"buy grocery\", \"02/12/2019 1900\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        Task eventTask \u003d new Events(\"team meeting\", \"02/12/2019 1900-2000\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        tasks.add(eventTask);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"1. [D][✗] buy grocery  (by: Mon Dec 02 19:00:00 SGT 2019)\" + \"\\n\" + \"2. [E][✗] team meeting (at: Mon Dec 02 20:00:00 SGT 2019)\" + \"\\n\", tasks.printTaskList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"[T][✗] return books\", new Todo(\"return books\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    public void testFileConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "        assertEquals(\"T | [✗] | return books\" + \"\\n\", new Todo(\"return books\").toFileFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seahlynn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seahlynn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seahlynn": 16
    }
  }
]
