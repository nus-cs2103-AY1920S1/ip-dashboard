[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    standardOutput \u003d System.out"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 33,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Instantiates AddCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param fullCommand String which is the full line that the user inputs"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public AddCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns whether the command is an ExitCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return whether the command is an ExitCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Adds and determines the type of given task to the saved task-list and prints"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * a confirmation if the addition of the new task is successful."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param tasks TaskList containing the user\u0027s saved tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param ui Ui object to handle the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param storage storage object to determine where the executed results are stored"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws DukeException if user input is invalid"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (fullCommand.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (fullCommand.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks.addTask(new ToDo(fullCommand.substring(5)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (fullCommand.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            int i \u003d fullCommand.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String dateAndTime \u003d fullCommand.substring(i + 4);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks.addTask(new Event(fullCommand.substring(6, i - 1), dateTime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (fullCommand.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            int i \u003d fullCommand.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String dateAndTime \u003d fullCommand.substring(i + 4);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks.addTask(new Deadline(fullCommand.substring(9, i - 1), dateTime));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            storage.addToFile(tasks.getTask(tasks.getNumOfTasks() - 1).toSaveString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + \"  \" + tasks.getTask(tasks.getNumOfTasks() - 1) + \"\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + \"Now you have \" + tasks.getNumOfTasks()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (tasks.getNumOfTasks() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return \"Cannot save new task in file\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 72
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Generates a date and time string appropriate for storing in save file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string representing date and time in the following format: 23rd September 2019, 3.01am"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private String generateDateAndTimeString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"\" + by.getDayOfMonth();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int day \u003d by.getDayOfMonth();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"st\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"rd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"th\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        dateAndTime +\u003d \" of \" + by.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \" \" + by.getYear() + \", \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (by.getHour() \u003e 12) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d (by.getHour() % 12) + \"\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (by.getHour() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d by.getHour() + \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (by.getHour() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d 12 + \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d by.getHour() + \"\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\") + by.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Generates string for displaying to user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string that displays the task in a readable format to the user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + generateDateAndTimeString() + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Generate string for storing in file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string for storing in text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"D | \" + super.toSaveString() + \" | \" + by;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 71
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private int deleteIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Instantiates DeleteCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param deleteIndex the task number inserted by the user to be deleted"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns whether the command is an ExitCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return whether the command is an ExitCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Deletes given task to the saved task-list and prints"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * a confirmation if the addition of the new task is successful."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param tasks TaskList containing the user\u0027s saved tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param ui Ui object to handle the user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param storage storage object to determine where the executed results are stored"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws IOException if stream to file cannot be written to or closed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Task chosenTask \u003d tasks.getTask(deleteIndex - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        tasks.removeTask(deleteIndex - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            storage.deleteFromFile(deleteIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n  \" + chosenTask.toString() + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + \"Now you have \" + tasks.tasks.size()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (tasks.tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return \"Error when deleting task from saved file\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 44
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Circle c \u003d new Circle(50);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        c.setCenterY(50);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        c.setCenterX(50);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        displayPicture.setClip(c);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns dialog box in the perspective of the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param text Text entered by the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param img Image of the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return DialogBox of the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns a dialog box with the response from the duke bot."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param text Text to be displayed by the bot."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param img Image of the Duke bot."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return DialogBox in Duke\u0027s perspective."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 77
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private int doIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Instantiates DoneCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param doIndex the task number done by the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public DoneCommand(int doIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.doIndex \u003d doIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns whether command is an ExitCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return whether command is an ExitCommand"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Marks the specified task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param tasks TaskList containing the user\u0027s saved tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param ui Ui object to handle the user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param storage storage object to determine where the executed results are stored"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Task chosenTask \u003d tasks.getTask(doIndex - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        chosenTask.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            storage.updateTaskInFile(doIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return (\"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + chosenTask.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return \"Can\u0027t update task in the file\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Duke is a task manager programme with the following capabilities:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * addition of tasks, listing of tasks, deletion of tasks and marking tasks as done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Instantiates Duke object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Runs the programme continuously until the user inputs \"bye\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Takes the input string entered into the text box and returns the"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * appropriate output response to be displayed in the dialog box."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param input refers to the string message entered by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return appropriate reply expected"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws IOException if stream to file cannot be written to or closed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws DukeException if the user input is invalid."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String getResponse(String input) throws IOException, DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String fullCommand \u003d input;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String reply \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 64,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * If user input is not in a valid format, then"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * DukeException will be thrown."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns appropriate date and time string suitable for storing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string representing date and time in the following format: 23rd September 2019, 3.01am"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String generateDateAndTimeString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"\" + at.getDayOfMonth();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int day \u003d at.getDayOfMonth();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"st\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"rd\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"th\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        dateAndTime +\u003d \" of \" + at.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \" \" + at.getYear() + \", \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (at.getHour() \u003e 12) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d (at.getHour() % 12) + \"\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (at.getHour() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d at.getHour() + \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (at.getHour() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d 12 + \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d at.getHour() + \"\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\") + at.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string that displays the task in a readable format to the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string that displays the task in a readable format to the user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + generateDateAndTimeString() + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string for storing in text file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string for storing in text file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"E | \" + super.toSaveString() + \" | \" + at;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 71
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns whether the command is an ExitCommand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return whether the command is an ExitCommand"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints a closing statement before the programme closes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param tasks TaskList containing the user\u0027s saved tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param ui Ui object to handle the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param storage storage object to determine where the executed results are stored"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        //ui.showClosing();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 23
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String keyWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ArrayList\u003cString\u003e matchList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (Task task : tasks.tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String line \u003d task.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (line.contains(keyWord)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                matchList.add(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String reply \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (String line : matchList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            reply +\u003d (index + 1) + \".\" + line + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 36
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns whether the command is an ExitCommand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return whether the command is an ExitCommand"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints the list of tasks saved in memory."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param tasks TaskList containing the user\u0027s saved tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param ui Ui object to handle the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param storage storage object to determine where the executed results are stored"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String reply \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (Task t : tasks.tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            reply +\u003d (index + 1) + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 28
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (response.equals(duke.getResponse(\"bye\"))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getDukeDialog(\"Error when saving file\", dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DialogBox.getDukeDialog(e.getMessage(), dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 70
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns the appropriate command for later execution of the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param fullCommand single line of string from user-input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return appropriate command based on the user-input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws DukeException if no valid command is entered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.length() \u003e\u003d 4 \u0026\u0026 fullCommand.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            int doIndex \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new DoneCommand(doIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.length() \u003e\u003d 5 \u0026\u0026 fullCommand.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new FindCommand(fullCommand.substring(5));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.length() \u003e\u003d 6 \u0026\u0026 fullCommand.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (fullCommand.contains(\"todo\") || fullCommand.contains(\"deadline\") || fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            throw new DukeException(\"Please enter a valid command\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 31
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Converts lines of Strings in saved text file into tasks which are loaded into an ArrayList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return an ArrayList containing all the tasks in the saved file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws DukeException if there is an error in loading the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner s \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String taskType \u003d taskString.substring(0, 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String isDone \u003d taskString.substring(4, 5);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String desc \u003d taskString.substring(8);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    ToDo task \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    int i \u003d taskString.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String desc \u003d taskString.substring(8, i - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String time \u003d taskString.substring(i + 2, i + 12) + taskString.substring(i + 13);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-ddHH:mm\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(time, format);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        Deadline task \u003d new Deadline(desc, dateTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        Event task \u003d new Event(desc, dateTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            throw new DukeException(\"Loading Error\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Updates the task that is completed in the saved file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param taskNum the line number of the task to be updated (marked as done)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws IOException if stream to file cannot be written to or closed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void updateTaskInFile(int taskNum) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d  new File(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int lineNum \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (scn.hasNext()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String s \u003d scn.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (lineNum \u003d\u003d taskNum) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                s \u003d s.substring(0, 4) + \"1\" + s.substring(5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            list.add(s);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size() - 1; i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(list.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.write(list.get(list.size() - 1));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Adds the task into the end of the text file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param textToAdd a line of string which can be saved in an understandable way"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws IOException if stream to file cannot be written to or closed."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void addToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (scn.hasNext()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Deletes the task based on its line number in the text file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param taskNum the line number of the task to be deleted"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @throws IOException if stream to file cannot be written to or closed."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void deleteFromFile(int taskNum) throws IOException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d  new File(filePath);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int lineNum \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (scn.hasNext()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String s \u003d scn.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (lineNum !\u003d taskNum) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                list.add(s);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size() - 1; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(list.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(list.get(list.size() - 1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 142
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns tick or X symbols depending of whether the task is completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return tick or X symbols depending of whether the task is completed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string representing the completion status as tick or cross the description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return String representing the completion status as tick or cross the description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string that representing the completion status as 1 or 0 and the description for saving in txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return String that representing the completion status as 1 or 0 and the description for saving in txt file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 39
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Contains the task list e.g., it has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Removes the desired task based on its index in the task-list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param i the index of the task to be removed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Adds the desired task to the end of the task-list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param task the task to be added to the task-list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Retrieves the desired task in the task-list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param i the index of the task to be retrieved"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return task requested based on index in the ArrayList used to store the tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns the number of tasks in the task-list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return number of tasks in the task-list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 49
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string that displays the task in a readable format to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string that displays the task in a readable format to the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns string for storing in text file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return string for storing in text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"T | \" + super.toSaveString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Returns a single line of string containing the entire command from the user-input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @return a single line of string containing the entire command from the user-input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String command \u003d scn.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints a single line to separate commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"_________________________________________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints error message for loading error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"No previous sessions detected. Please create a file called \u0027tasks.txt\u0027 under data folder.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints welcome message from Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints farewell message from Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showClosing() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     * @param message prints the error message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 60
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.geometry.Rectangle2D?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003cviewport\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            \u003cRectangle2D /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "         \u003c/viewport\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"d\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void toSaveString_normalTask_writtenCorrectly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"21/09/2019 1231\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Event e \u003d new Event(\"Do the dishes\", dateTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"E | 0 | Do the dishes | 2019-09-21T12:31\", e.toSaveString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void generateDateAndTimeString_correctInput_CorrectDateAndTimeString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"21/09/2019 1231\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Event e \u003d new Event(\"Do the dishes\", dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"21st of September 2019, 12.31pm\", e.generateDateAndTimeString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 26
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void toString_normalTask_writtenCorrectly() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Task t \u003d new Task(\"Do the dishes\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"[\" + \"\\u2718\" + \"] \" + \"Do the dishes\", t.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 4 task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 5 task in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "1.[T][?] read book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "2.[D][?] return book (by: June 6th)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "3.[E][?] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "4.[T][?] join sports club"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "5.[T][?] borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 21
    }
  }
]
