[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "Joanna-YJA": 26
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | fake"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 0 | g"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | this"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "D | 1 | fakish  | Mon Aug 02 00:00:00 SGT 1999"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | this"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "T | 1 | that"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 9
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //Set the controller and root node to the DialogBox"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int numLines \u003d countLines(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (numLines \u003c\u003d 4) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.dialog.setPrefHeight(USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.setPrefHeight(USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.dialog.setPrefHeight(numLines * 20);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.setPrefHeight(numLines * 20);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private int countLines(String text) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String[] lineArray \u003d text.split(\"\\n\", -1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return lineArray.length;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    //for creating dialog box to show welcome message"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static DialogBox createDialog(String text, Image img) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "      return new DialogBox(text, img);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 87
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setFirstDialog(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    //@FML tag makes attribute accessible to FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/husky.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/penguin.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        double height \u003d 0.0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Change the total height of the VBox according to the individual height of elements"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        for (Node node : dialogContainer.getChildren()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            DialogBox dialogBox \u003d (DialogBox) node;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            if (dialogBox.getPrefHeight() !\u003d -1.0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                height +\u003d dialogBox.getPrefHeight();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                height +\u003d 100;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        dialogContainer.setPrefHeight(height);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (response.contains(\"Bye\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void setFirstDialog(Duke duke){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.setDuke(duke);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        DialogBox welcomeDialog \u003d DialogBox.createDialog(ui.showWelcome(), dukeImage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        dialogContainer.getChildren().addAll(welcomeDialog);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 79
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s \u0027deadline\u0027 commmand to chatbot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027DeadlineCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user(in superclass)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Whether the deadline task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Description of deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Date in which the deadline task is due."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Type of task to be added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initializes a new instance of DeadlineCommand."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param isDone      Whether deadline task is done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param deadline    Date the task is due."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public AddCommand(String type, boolean isDone, String description, String deadline) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (deadline \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.deadline \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                Date twentyFourHourFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                String twelveHourFormat \u003d new SimpleDateFormat(\"dd/MM/yyy hh:mm\").format(twentyFourHourFormat);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                this.deadline \u003d new SimpleDateFormat(\"dd/MM/yyy hh:mm\").parse(twelveHourFormat);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Adds Task object to TaskList and adds inputs to the File in Storage, and"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * prints response."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException IOException if there is an error writing or reading file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        storage.appendToFile(this.type, this.deadline, this.description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        switch (this.type) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case (\"D\"):"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            newTask \u003d new Deadline(this.description, this.deadline);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case (\"E\"):"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            newTask \u003d new Event(this.description, this.deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case(\"T\"):"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            newTask \u003d new Todo(this.description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new AssertionError(\"Invalid task type\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int oldSize \u003d taskList.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int numTask \u003d taskList.size();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Assert that size of taskList increased by 1"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert numTask \u003d\u003d oldSize + 1 : \"Task is not added to task list\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + newTask + \"Now you have \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + numTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a false to indicate program has not exited."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return false Program has not exited."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 133
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user commmands to chatbot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Command\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Executes the command and print out respecive reponse."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException IOException if there is an error writing or reading file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a boolean value on whether the program has exited."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return boolean of whether program has exited"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s delete commmand to chatbot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027DeleteCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The task number to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initializes a new instance of DeleteCommand, with the task number to delete."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Deletes respective task in taskList and from text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints response in console."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException IOException if there is an error writing or reading file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        storage.deleteText(taskNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task removedTask \u003d taskList.deleteTask(taskNum);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task:\\n\" + removedTask"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \"Now you have \" + taskList.size()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a false to indicate program has not exited."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return false Program has not exited."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 61
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s \"done\" commmand to chatbot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027DoneCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The task number to be marked done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initializes a new instance of DoneCommand, with the task number to be marked done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task number"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Marks respective task in taskList as done and task from text file to be 0."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints response in console."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException IOException if there is an error writing or reading file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        taskList.markTaskDone(taskNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task updatedTask \u003d taskList.getTask(taskNum);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Assert post condition"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert updatedTask.getStatusIcon().equals(\"v\") : \"Task is not marked as done\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        storage.updateText(taskNum);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        storage.updateText(taskNum);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return(\"Nice! I\u0027ve marked this task as done: \\n\" + updatedTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a false to indicate program has not exited."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return false Program has not exited"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 64
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s exit commmand to chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027ExitCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Closes scanner and exits from program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints response in console."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns true to indicate program has exited."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return true Program has exited"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s \u0027find\u0027 commmand to chatbot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Finds tasks with keyword in it, in the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027findCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user(in superclass)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Keyword to find specific tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initializes a new instance of FindCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param keyword Keyword to help find the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Finds a specific task with keyowrd from list of tasks,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * and prints result."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList Stores the list of the tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException IOException if there is an error writing or reading file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        List\u003cString\u003e foundTasks \u003d taskList.findTask(this.keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            result +\u003d \"\\n\" + index + \". \" + foundTasks.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (result);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a false to indicate program has not exited."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return false Program has not exited."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 69
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.component.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents user\u0027s list commmand to chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027ListCommand\u0027 class supports operators (i) executing the command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) checking if the bot has exited its conversation with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints out all the task that user has to do or has done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Tasks are retrieved from TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskList List of the things user needs to do"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param ui       Interface that interacts with the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param storage  Stores the user input in a file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            result +\u003d \"\\n\" + index + \". \" + taskList.getTask(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (result);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a false to indicate program has not exited."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return false Program has not exited"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 45
    }
  },
  {
    "path": "src/main/java/duke/component/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents chatbot Duke with main method."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Duke\u0027 class supports operators (i) allows user interaction with chatbot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Store and load tasks from text in text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Task List of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * User Interface that takes care of user interaction with chatbot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    //Create an initialise two user image for chatbot"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Creates a new instance of Duke with file path of text file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return (e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 72
    }
  },
  {
    "path": "src/main/java/duke/component/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "//imports"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.EmptyDescException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents a Parser object that parses user inputs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Parser\u0027 class supports operators (i) parse out user inputs"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (ii) determine the input type, which helps parse out user inputs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Parses out user inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Command Type of command that user input in."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return determineInputType(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns Command object based on user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Helper method to parse(String input) method."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Command Type o comand summoned by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Command determineInputType(String input) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                int taskNum \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                DoneCommand resultCommand \u003d new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                //Assert that result is an instance of DoneCommand"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                assert resultCommand instanceof DoneCommand : \"Result is not an instance of DoneCommand\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return resultCommand;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"done\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                AddCommand resultCommand \u003d  new AddCommand(\"T\", false, input.substring(5), null);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                //Assert that result is an instance of DoneCommand"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                assert resultCommand instanceof AddCommand : \"Result is not an instance of AddCommand\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return resultCommand;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"todo\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                String[] parts \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                AddCommand resultCommand \u003d new AddCommand(\"D\", false, parts[0].substring(9), parts[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                //Assert that result is an instance of DoneCommand"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                assert resultCommand instanceof AddCommand : \"Result is not an instance of AddCommand\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return resultCommand;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"deadline\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                String[] parts \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                AddCommand resultCommand \u003d new AddCommand(\"E\", false, parts[0].substring(5), parts[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                //Assert that result is an instance of DoneCommand"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                assert resultCommand instanceof AddCommand : \"Result is not an instance of AddCommand\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return resultCommand;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"event\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int taskNum;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                taskNum \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                DeleteCommand resultCommand \u003d  new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                //Assert that result is an instance of DoneCommand"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                assert resultCommand instanceof DeleteCommand : \"Result is not an instance of AddCommand\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return resultCommand;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"delete\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String keyword;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                throw new EmptyDescException(\"find\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new InvalidArgumentException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 155
    }
  },
  {
    "path": "src/main/java/duke/component/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents Storage object that stores tasks user need to do."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Tasks are stored in a test file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Storage\u0027 class supports operators (i) loading TaskList object from text file,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (ii) converting a line of text to Task object,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iii) adding text to text file,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iv) changig text in text file and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (v) amending text in text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * File path."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Text file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private File textFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new Storage object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param filePath File path where text file is stored in."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.textFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns ArrayList of Tasks converted from tasks in text file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return ArrayList of Tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Path path \u003d this.textFile.toPath();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                tasks.add(this.lineToTask(line));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns task converted from String representation of text in text file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param line String representation of a task, from text file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task lineToTask(String line) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String[] lineArray \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        switch (lineArray[0].trim()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //return a new toDo task with \"whether it is done\" and description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return new Todo(lineArray[1], lineArray[2].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //return a new toDo task with \"whether it is done\" and description and event time"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return new Event(lineArray[1], lineArray[2], lineArray[3]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //return a new deadline task with \"whether it is done\" and description and deadline"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return new Deadline(lineArray[1], lineArray[2], lineArray[3]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            assert false : \"text line from text file is not a valid task\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Adds text to text file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param textToAdd Text to be added into text file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void writeToFile(String textToAdd) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try { //Create a file writer object to represent the hard disk"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Appends task into text file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param date Date the task is due on."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param desc Description of task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If IOException is thrown when reading or writing from file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void appendToFile(String type, Date date, String desc) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            writeToFile(type + \" | 1 | \" + desc + \"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            writeToFile(type + \" | 1 | \" + desc + \" | \" + date + \"\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Updates text that is already in text file."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task Number of the task to be updated."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void updateText(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int lineNumber \u003d taskNum - 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //read all the line in the files"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String oldText \u003d lines.get(lineNumber);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            lines.set(lineNumber, oldText.substring(0, 3) + \" 0 \" + oldText.substring(6, oldText.length()));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Deletes text that is already in text file."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task Number of the task to delete."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws DukeException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void deleteText(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int lineNumber \u003d taskNum - 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            //read all the line in the files"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            lines.remove(lineNumber);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 183
    }
  },
  {
    "path": "src/main/java/duke/component/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents a TaskList object that stores all task in a list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027TaskList\u0027 class supports operators (i) adding a task to list,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (ii) deleting a task from list,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iii) getting a specific task from list,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iv) finding size of list, and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (v) marking a task in list as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * List of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new TaskList object with existing ArrayList of Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param todoList ArrayList of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e todoList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.todoList \u003d todoList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new TaskList object when there is"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * no existing list of Tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Adds a new task to list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param newTask Task to be added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        todoList.add(newTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Assert that the last element added is newTask"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert todoList.get(todoList.size() - 1).equals(newTask) : \"new task is not added to task list\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Deletes task from list of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param index Task number of task to be deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Deleted task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return todoList.remove(index - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Gets specific task from list of task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task number of task that user wants to get."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Task that is gotten from list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return this.todoList.get(taskNum - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns number of tasks in list of task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Number of task from list of task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return this.todoList.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Marks a specific task in list of task as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param taskNum Task number of task that user wants to mark as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void markTaskDone(int taskNum) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task updatedTask \u003d this.getTask(taskNum);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        updatedTask.markAsDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Assert that the correct task is marked as done"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert this.getTask(taskNum).getStatusIcon().equals(\"v\") : \"The task is not marked as done or the wrong task is marked as done\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Finds a specific task from list of task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param keyword Keyword to find tasks that matches keyword."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return List of string representation of task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public List\u003cString\u003e findTask(String keyword) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        List\u003cString\u003e result \u003d this.todoList"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                                  .stream()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                                  .map(x -\u003e x.toString())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                                  .filter(y -\u003e y.contains(keyword))"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                                  .collect(Collectors.toList());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "         //Assert that all tasks in the result contains keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert result.stream().allMatch(x -\u003e x.contains(keyword)) : \"Some results of \u0027find\u0027 does not contain keyword\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 124
    }
  },
  {
    "path": "src/main/java/duke/component/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents Ui object that is responsible for the User interface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and chatbot interacting with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Ui\u0027 class supports operators (i) reading user input,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (ii) showing welcome message,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iii) showing line border"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iv) showing loading error if the text file is unable to load,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (v) closing user interface,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (vi) printing text on console,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * and (vii) printing error message on console."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Parser to parse user inputs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Parser inputParser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Scanner to scan user inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Checks whether Ui should close."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Reads user inputs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return String that represents user inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String result \u003d \"Hello from\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        result +\u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "       return result;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Prints loading error message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        System.out.println(\"Unable to load\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 69
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents DukeException that is thrown by methods."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027DukeException\u0027 class extends Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Creates a new instance of DukeException that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * follows the constructor in Exception class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents EmptyDescException that is thrown when the description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * of task or task number is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The EmptyDescException class extends DukeException class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class EmptyDescException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The type ot task EmptyDescException is thrown under."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new EmptyDescException."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param type Type of task EmptyDescException is thrown under."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public EmptyDescException(String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns the string representation of EmptyDescException."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return String representation of exception."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \" OOPS!!! The description of a \" + type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents InvalidArgumentException that is thrown when user input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The InvalidArgumentException class extends DukeException class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new empty description exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public InvalidArgumentException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns string representation of exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return String representationof exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Deadline\u0027 class supports operator (i) toString that"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * returns the string representation of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Date the task is due."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for when user inputs deadline to the chatbot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param deadline    Date the event happens"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Deadline(String description, Date deadline) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for loading the tasks form text file to TaskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param isDone      0 or 1 representation of whether a task is done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param deadline    Date the task is due on"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Deadline(String isDone, String description, String deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.deadline \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\").parse(deadline.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a String representation of task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + this.deadline + \")\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Deadline\u0027 class supports operators (i) toString that"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * returns the string representation of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Date the event happens."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for when user inputs event task directly to the chatbot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param time        Date the event happens"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Event(String description, Date time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for loading the tasks form text file to TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param isDone      0 or 1 representation of whether a task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param time        Date the task is due on"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Event(String isDone, String description, String time) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            this.time \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\").parse(time.trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a String representation of task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return String representation of exception."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + this.time + \")\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The  abstract \u0027Task\u0027 class supports operator (i) toString that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * returns the string representation of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Whether task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for when user inputs event task directly to the chatbot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance oft task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for loading the tasks form text file to TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param isDone      0 or 1 representation of whether a task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task(String isDone, String description) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int a \u003d Integer.parseInt(isDone.trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Assert that a is either 1 or 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assert a \u003d\u003d 1 || a \u003d\u003d 0 : \"Integer value of whether task is done is not parsed out properly\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d a \u003d\u003d 0 ? true : false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a string of task description."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a string representing whether task is done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The value v for when task is done and x for when task is not done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @return Striing representation of whether task is done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (this.isDone ? \"v\" : \"x\"); // \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a string represenation of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represents todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027Todo\u0027 class supports operator (i) toString that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * returns the string representation of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Todo task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Initialises a new instance od Deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Used for loading the tasks form text file to TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param isDone      0 or 1 representation of whether a task is done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Todo(String isDone, String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Returns a String representation of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #d4f1f5;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003cchildren \u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #4bcde1;\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #d4f1f5;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represent a Test class for Deadline class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027DeadlineTest\u0027 class supports the following operators"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (i) Checking that a deadline object can be instantiated correctly,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (ii) Checking that a Deadline object with Date as parameter have"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * the correct string representation, and"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iii) Checking that a Deadline object with string as a Deadline parameter,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * has the correct string representation."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Tests that a Deadline object can be instantiated correctly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that a Deadline object is created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void instantiate_instantiateWithIsDone_deadlineObject() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"1\", \"read book\", \"01/02/1999 1900\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertTrue(deadline instanceof Deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that the string representation of Deadline object is correct."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Deadline object created uses a String as its \u0027deadline\u0027 parameter."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws ParseException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void testToString_objectWithDatAsDateAsParameter_string() throws ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Date deadline \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"01/02/1999 1900\".trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertEquals(\"[D][x] read book (by: Mon Feb 01 19:00:00 SGT 1999)\\n\", new Deadline(\"read book\", deadline).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that the string representation of Deadline object is correct."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Deadline object created uses Date as its \u0027deadline\u0027 parameter."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * @throws ParseException If there is IOException when reading or writing from text file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void testToString_objectWithStringAsDateParameter_string() throws ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertEquals(\"[D][x] read book (by: Mon Aug 02 00:00:00 SGT 1999)\\n\", new Deadline(\"1\", \"read book\", \" Mon Aug 02 00:00:00 SGT 1999\").toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 60
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * Represent a Test class for Todo class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * The \u0027TodoTest\u0027 class supports the following operators"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (i) Checking that a todo object can be instantiated correctly"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * with only the description of task,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (ii) Checking that a todo object can be instantiated correctly"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * with the description of task, and whether it is done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * (iii) Checking that the string representation of each"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " * object is correct."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Tests that a Todo object can be instantiated correctly"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * with only the description in its constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that a Todo object is created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void instantiate_instantiateWithDescription_todoObject() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Todo todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertTrue(todo instanceof Todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Tests that a Todo object can be instantiated correctly"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * with string representation of whether a task is done, and"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * the description of task in its constructor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that a Todo object is created."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void instatiate_instantiateWithIsDone_todoObject() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Todo todo \u003d new Todo(\"1\", \"read book\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertTrue(todo instanceof Todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that the string representation of Todo object is correct."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Todo object created uses a String description of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * as its parameter in constructor."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void testToString_objectWithDescription_string() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertEquals(\"[T][x] read book\\n\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that the string representation of Todo object is correct."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Todo object created uses a String description of task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * and string representation of whether a task is done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * as its parameter in constructor."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Todo object is marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void testToString_objectWithIsDone_string() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertEquals(\"[T][v] read book\\n\", new Todo(\"0\", \"read book\").toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * Asserts that the string representation of Todo object is correct."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Todo object created uses a String description of task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * and string representation of whether a task is done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * as its parameter in constructor."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     * The Todo object is marked as not done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void testToString_objectWithIsNotDone_string() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        assertEquals(\"[T][x] read book\\n\", new Todo(\"1\", \"read book\").toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 76
    }
  }
]
