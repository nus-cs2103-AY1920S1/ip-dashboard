[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private String generateDateAndTimeString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"\" + by.getDayOfMonth();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int day \u003d by.getDayOfMonth();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"st\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"nd\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"rd\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"th\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        dateAndTime +\u003d \" of \" + by.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \" \" + by.getYear() + \", \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (by.getHour() \u003e 12) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d (by.getHour() % 12) + \"\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (by.getHour() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d by.getHour() + \"\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (by.getHour() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d 12 + \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + by.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d by.getHour() + \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (by.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (by.getMinute() \u003c 10 ? \"0\" : \"\") + by.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + generateDateAndTimeString() + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"D | \" + super.toSaveString() + \" | \" + by;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String input \u003d scn.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    int index \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    for (Task t : tasks.taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.println((index + 1) + \".\" + t.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                } else if (input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    int do_Index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    Task chosen_Task \u003d tasks.getTask(do_Index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    chosen_Task.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        storage.updateTaskInFile(do_Index + 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } catch (IOException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.println(\"Can\u0027t update task in the file\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            chosen_Task.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    int delete_Index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    Task chosen_Task \u003d tasks.getTask(delete_Index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    tasks.removeTask(delete_Index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        storage.deleteFromFile(delete_Index + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + chosen_Task.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.taskList.size() +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                                (tasks.taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } catch (IOException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.print(\"No saved files\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    if (input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        tasks.addTask(new ToDo(input.substring(5)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } else if (input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        int i \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        String dateAndTime \u003d input.substring(i + 4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        tasks.addTask(new Event(input.substring(6, i - 1), dateTime));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } else if (input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (input.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        int i \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        String dateAndTime \u003d input.substring(i + 4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        tasks.addTask(new Deadline(input.substring(9, i - 1), dateTime));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        storage.addToFile(tasks.getTask(tasks.getNumOfTasks() - 1).toSaveString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } catch (IOException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        System.out.println(\"Cannot save new task in file\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    System.out.println(\"  \" + tasks.getTask(tasks.getNumOfTasks() - 1));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.getNumOfTasks() +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            (tasks.getNumOfTasks() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                System.out.println(\"Invalid date and time format\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        + \"Please enter date and time as \u0027dd/MM/yyyy HHmm\u0027\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            input \u003d scn.nextLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ui.showClosing();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 118,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String generateDateAndTimeString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"\" + at.getDayOfMonth();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int day \u003d at.getDayOfMonth();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"st\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"nd\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"rd\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d \"th\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        dateAndTime +\u003d \" of \" + at.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \" \" + at.getYear() + \", \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (at.getHour() \u003e 12) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d (at.getHour() % 12) + \"\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (at.getHour() \u003d\u003d 12) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d at.getHour() + \"\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"pm\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else if (at.getHour() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d 12 + \"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + at.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            dateAndTime +\u003d at.getHour() + \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    + (at.getMinute() \u003d\u003d 0 ? \"\" : \".\" + (at.getMinute() \u003c 10 ? \"0\" : \"\") + at.getMinute()) + \"am\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + generateDateAndTimeString() + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"E | \" + super.toSaveString() + \" | \" + at;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 59
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 3
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner s \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String taskType \u003d taskString.substring(0, 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                String isDone \u003d taskString.substring(4, 5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String desc \u003d taskString.substring(8);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    ToDo task \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    int i \u003d taskString.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String desc \u003d taskString.substring(8, i - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    String time \u003d taskString.substring(i + 2, i + 12) + taskString.substring(i + 13);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-ddHH:mm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(time, format);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        Deadline task \u003d new Deadline(desc, dateTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        Event task \u003d new Event(desc, dateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            throw new DukeException(\"Loading Error\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void updateTaskInFile(int taskNum) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d  new File(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int lineNum \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (scn.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String s \u003d scn.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (lineNum \u003d\u003d taskNum) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                s \u003d s.substring(0, 4) + \"1\" + s.substring(5);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            list.add(s);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size() - 1; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(list.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.write(list.get(list.size() - 1));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void addToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        if (scn.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void deleteFromFile(int taskNum) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        File file \u003d  new File(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        int lineNum \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        while (scn.hasNext()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            String s \u003d scn.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            if (lineNum !\u003d taskNum) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                list.add(s);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            lineNum++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size() - 1; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "            fw.write(list.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.write(list.get(list.size() - 1));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 112
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 27
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        this.taskList \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void removeTask(int i){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public int getNumOfTasks(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 29
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        return \"T | \" + super.toSaveString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"No previous sessions detected. Please create a file called \u0027tasks.txt\u0027 under data folder.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void showClosing() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 19
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void toSaveString_normalTask_writtenCorrectly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"21/09/2019 1231\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Event e \u003d new Event(\"Do the dishes\", dateTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"E | 0 | Do the dishes | 2019-09-21T12:31\", e.toSaveString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void generateDateAndTimeString_correctInput_CorrectDateAndTimeString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        String dateAndTime \u003d \"21/09/2019 1231\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateAndTime, format);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Event e \u003d new Event(\"Do the dishes\", dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"21st of September 2019, 12.31pm\", e.generateDateAndTimeString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 26
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    public void toString_normalTask_writtenCorrectly() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        Task t \u003d new Task(\"Do the dishes\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "        assertEquals(\"[✘] Do the dishes\", t.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 4 task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Now you have 5 task in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "1.[T][?] read book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "2.[D][?] return book (by: June 6th)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "3.[E][?] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "4.[T][?] join sports club"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "5.[T][?] borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jcjjjared"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jcjjjared": 21
    }
  }
]
