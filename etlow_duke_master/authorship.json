[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "version \u00270.1.3\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveBaseName.set \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveVersion.set \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveClassifier.set null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveAppendix.set null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 23,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new copy of the Duke application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param filePath File path of the save file to store tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (!(e instanceof NoSuchFileException)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ui.showError(\"Could not load tasks. Proceeding may overwrite old tasks.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"todo\", ToDo.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"deadline\", Deadline.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"event\", Event.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"list\", new ListCommand(tasks));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"find\", new FindCommand(tasks));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"done\", new DoneCommand(tasks, storage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"delete\", new DeleteCommand(tasks, storage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"bye\", new ByeCommand());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Runs this Duke application."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        while (!isExit \u0026\u0026 ui.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String[] words \u003d ui.readCommand().split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Command command \u003d parser.parse(words);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ui.printMessage(command.run(words));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 71,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Registers a command to be returned later."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param name Name that will trigger the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param command Command to return later."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void register(String name, Command command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        commands.put(name, command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the appropriate command given the line that the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Line of input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Command to use on the input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws DukeException If there is no such command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Command parse(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d commands.get(words[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 35
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Storage(String location) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        path \u003d Paths.get(location);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Saves the given list of lines."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param lines List of lines to save."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the tasks cannot be saved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void store(List\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Files.write(path, lines);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Loads and returns the list of lines."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return List of lines loaded."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the lines cannot be loaded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return Files.readAllLines(path);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 35
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether there is another line of input to read."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Whether there is another line of input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    boolean hasNextLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return input.hasNextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Reads a line from the input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Next line of input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Outputs a list of lines."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param messages List of lines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void printMessage(List\u003cString\u003e messages) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            System.out.println(\"     \" + message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Shows an error message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void showError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        printMessage(List.of(message));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Outputs a welcome message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        printMessage(List.of(\"Hello! I\u0027m Duke\", \"What can I do for you?\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the message to show the user when they leave."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether the program should exit after this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return true since this command should cause the program to exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the message to show the user after the command is run."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e run(String[] words) throws DukeException, IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether the program should exit after this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return false by default, most commands should not exit the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DeleteCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Removes a task, and returns a message about the removed task and number of remaining tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the tasks cannot be saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d tasks.remove(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Noted. I\u0027ve removed this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DoneCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Marks a task as done and returns a message about the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the tasks cannot be saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d tasks.get(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Nice! I\u0027ve marked this task as done:\", \"  \" + task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public FindCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String query \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        messages.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (tasks.get(i).toString().contains(query)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                messages.add(count + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return messages;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public ListCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a message with the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        messages.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            messages.add(i + 1 + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return messages;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Deadline extends TimeTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Deadline(String description, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates a Deadline given the input line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates deadlines."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            List\u003cString\u003e wordList \u003d List.of(words);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            int separator \u003d wordList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"A deadline must have a time.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String description \u003d String.join(\" \", wordList.subList(1, separator));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String time \u003d String.join(\" \", wordList.subList(separator + 1, words.length));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(\"D\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.addAll(super.getSaveList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(getSaveTimeString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Event extends TimeTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Event(String description, String time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates an Event given the input line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates events."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            List\u003cString\u003e wordList \u003d List.of(words);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            int separator \u003d wordList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"An event must have a time.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String description \u003d String.join(\" \", wordList.subList(1, separator));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String time \u003d String.join(\" \", wordList.subList(separator + 1, words.length));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(\"E\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.addAll(super.getSaveList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(getSaveTimeString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the status icon of this task for display to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(isDone ? \"1\" : \"0\", description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 48
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new empty task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a task list with the tasks parsed from the list of lines."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param lines List of lines to parse tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public TaskList(List\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(parseTask(line));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Removes a task from the task list at the given index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param index Position of the task in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return The removed task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the task at the given index in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param index Position of the task in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return The requested task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Converts this task list into a list of lines to save."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return List of converted tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getAsLines() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e save \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "            save.add(getSaveString(task));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return save;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Converts the given task into a string for saving."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param task Task to convert into a string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return String for saving."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String getSaveString(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "etlow"
        },
        "content": "        StringJoiner joiner \u003d new StringJoiner(\"|\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (String field : task.getSaveList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "etlow"
        },
        "content": "            joiner.add(escape(field));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return joiner.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Parses the given string as a task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param line Line to parse."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Parsed task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Task parseTask(String line) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String[] data \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "etlow"
        },
        "content": "        switch (data[0]) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "etlow"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task \u003d new ToDo(unescape(data[2]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "etlow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "etlow"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task \u003d new Deadline(unescape(data[2]), unescape(data[3]));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "etlow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "etlow"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task \u003d new Event(unescape(data[2]), unescape(data[3]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "etlow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "etlow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Escapes a string to use for saving a task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param str String to escape."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Escaped string."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String escape(String str) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return str.replace(\"\\\\\", \"\\\\\\\\\").replace(\"|\", \"\\\\p\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Unescapes an escaped string to use for reconstructing a task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param str String to unescape."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Original string."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String unescape(String str) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "etlow"
        },
        "content": "        // Split the array at double backslashes, keeping trailing empty strings"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String[] parts \u003d str.split(\"\\\\\\\\\\\\\\\\\", -1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "etlow"
        },
        "content": "        // Join with single backslash after unescaping"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "etlow"
        },
        "content": "        StringJoiner joiner \u003d new StringJoiner(\"\\\\\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (String part : parts) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "etlow"
        },
        "content": "            joiner.add(part.replace(\"\\\\p\", \"|\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return joiner.toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 147
    }
  },
  {
    "path": "src/main/java/duke/task/TimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TimeTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    TimeTask(String description, String timeString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        time \u003d LocalDateTime.parse(timeString, formatter);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the time attached to this task as a string for saving."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Time as a string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveTimeString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return formatter.format(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the time attached to this task as a string to display to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Time as a string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTimeString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return DateTimeFormatter.ofPattern(\"yyyy MMMM dd HHmm\").format(time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 32
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates objects of this task given the input line."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String[] nameArr \u003d Arrays.copyOfRange(words, 1, words.length);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Task task \u003d new ToDo(String.join(\" \", nameArr));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(\"T\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.addAll(super.getSaveList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 59
    }
  },
  {
    "path": "src/test/java/duke/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DukeExceptionTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void testExceptionConstruction() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        DukeException exception \u003d new DukeException(\"Test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"☹ OOPS!!! Test\", exception.getMessage());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"aaa\", words -\u003e List.of(words[0]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"bbb\", words -\u003e List.of(words[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_validCommandA_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d parser.parse(new String[]{\"aaa\"});"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"aaa\", command.run(new String[]{\"aaa\", \"input\"}).get(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_validCommandB_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d parser.parse(new String[]{\"bbb\"});"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"input\", command.run(new String[]{\"bbb\", \"input\"}).get(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "            parser.parse(new String[]{\"ccc\"});"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String message \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(message).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 46
    }
  },
  {
    "path": "src/test/java/duke/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e stored;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public StorageStub() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(\"StorageStubTemp.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void store(List\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        stored \u003d lines;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 16
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final String location \u003d \"StorageTest.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final List\u003cString\u003e data \u003d List"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            .of(\"This is a test file to test Storage.\", \"You can safely delete it.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void testStoreAndLoad() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        new Storage(location).store(data);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e loadedData \u003d new Storage(location).load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(data, loadedData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertTrue(Files.deleteIfExists(Paths.get(location)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 25
    }
  },
  {
    "path": "src/test/java/duke/command/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_normalInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e message \u003d new ByeCommand().run(new String[]{\"bye\"});"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Bye. Hope to see you again soon!\"), message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void isExit_none_trueReturned() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertTrue(new ByeCommand().isExit());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 21
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String deleteString \u003d new Task(\"remove 123\").toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Noted. I\u0027ve removed this task:\", \"  \" + deleteString,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new DeleteCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"delete\", \"124\"});"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deleteString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deleteString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 29
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DoneCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task doneTask \u003d new Task(\"get 123\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Nice! I\u0027ve marked this task as done:\", \"  \" + doneTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new DoneCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"done\", \"124\"});"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(doneTask.toString(), taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(doneTask.toString(), storageStub.stored.get(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 29
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Here are the matching tasks in your list:\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"1.\" + new Task(\"get 3\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new FindCommand(taskListStub).run(new String[]{\"find\", \"t 3\"});"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 22
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        expected.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (int i \u003d 0; i \u003c taskListStub.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "            expected.add(i + 1 + \".\" + taskListStub.get(i));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new ListCommand(taskListStub).run(new String[]{\"list\"});"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 25
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\"},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"A deadline must have a time.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutDesc_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\", \"/by\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutTime_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\", \"desc\", \"/by\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommandExceptionThrownHelper(String[] words, String expected) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Deadline.getCommand(taskListStub, storageStub).run(words);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String deadlineString \u003d new Deadline(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d Deadline.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"deadline\", \"desc\", \"/by\", \"28/8/2019 1234\"});"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + deadlineString,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadlineString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadlineString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalDeadline_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new Deadline(\"desc\", \"28/8/2019 1234\").getSaveList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"D\", \"0\", \"desc\", \"28/8/2019 1234\"), saveList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalDeadline_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new Deadline(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[D][\" + crossSymbol + \"] desc (by: 2019 August 28 1234)\", output);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 78
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\"},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"An event must have a time.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutDesc_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\", \"/at\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutTime_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\", \"desc\", \"/at\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommandExceptionThrownHelper(String[] words, String expected) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Event.getCommand(taskListStub, storageStub).run(words);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String eventString \u003d new Event(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d Event.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"event\", \"desc\", \"/at\", \"28/8/2019 1234\"});"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + eventString,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(eventString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(eventString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalEvent_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new Event(\"desc\", \"28/8/2019 1234\").getSaveList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"E\", \"0\", \"desc\", \"28/8/2019 1234\"), saveList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalEvent_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new Event(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[E][\" + crossSymbol + \"] desc (at: 2019 August 28 1234)\", output);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 78
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task lastAction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        lastAction \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return lastAction \u003d new Task(\"remove \" + index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return lastAction \u003d new Task(\"get \" + index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return 5;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getAsLines() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(lastAction.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 32
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void addAndGet_validIndex_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new Task(\"desc\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task, taskList.get(0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void size_withTasks_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(new Task(\"task1\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(new Task(\"task2\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(2, taskList.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void delete_validIndex_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task1 \u003d new Task(\"task1\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task2 \u003d new Task(\"task2\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task1, taskList.remove(0));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task2, taskList.get(0));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getAsLines_normalTasks_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", \"27/7/2019 1111\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Event event \u003d new Event(\"event\", \"28/8/2019 1234\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList loadList \u003d new TaskList(taskList.getAsLines());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todo.toString(), loadList.get(0).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadline.toString(), loadList.get(1).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(event.toString(), loadList.get(2).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 49
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_incompleteTask_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new Task(\"desc\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"0\", \"desc\"), task.getSaveList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_doneTask_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new Task(\"desc\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"1\", \"desc\"), task.getSaveList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_incompleteTask_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new Task(\"desc\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[\" + crossSymbol + \"] desc\", task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_doneTask_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new Task(\"desc\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[\" + tickSymbol + \"] desc\", task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 37
    }
  },
  {
    "path": "src/test/java/duke/task/TimeTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TimeTaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveTimeString_normalTime_success() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String save \u003d new TimeTask(\"desc\", \"28/8/2019 1234\").getSaveTimeString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"28/8/2019 1234\", save);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getTimeString_normalTime_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String save \u003d new TimeTask(\"desc\", \"28/8/2019 1234\").getTimeString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"2019 August 28 1234\", save);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 19
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            ToDo.getCommand(taskListStub, storageStub).run(new String[]{\"todo\"});"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String expected \u003d \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String todoString \u003d new ToDo(\"desc\").toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d ToDo.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"todo\", \"desc\"});"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + todoString,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todoString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todoString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalToDo_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new ToDo(\"desc\").getSaveList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"T\", \"0\", \"desc\"), saveList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalToDo_success() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new ToDo(\"desc\").toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[T][\" + crossSymbol + \"] desc\", output);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 62
    }
  }
]
