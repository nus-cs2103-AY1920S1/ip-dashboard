[
  {
    "path": "DukeList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "T~1~read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "E~1~match~5"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "D~0~kill~12th of December 2019, 124pm"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 20,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Displaying the list of current tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `list` - Lists out the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`list` displays the current list of tasks you have stored."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![List](list.png)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Adding a todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `todo [description]` - Adds a todo task to your list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`todo DESCRIPTION`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![Adding todo task](todo.png)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Adding a event task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `event [description] /at DD/MM/YYYY HHMM` - Adds a event task to your list with its date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`event DESCRIPTION /at DATE`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`event project meeting /at 30/9/2019 1400`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![Adding event task](event.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Adding a deadline task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `deadline [description] /at DD/MM/YYYY HHMM` - Adds a deadline task to your list with its date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`deadline DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`deadline finish homework /by 30/9/2019 2359`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![Adding deadline task](deadline.png)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Marking a task as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `done [task_index]` - Marks the task at task_index as done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`done TASK_INDEX`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![mark task 1 as done](done.png)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Deleting a task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "### `delete [task_index]` - Deletes the task at task_index."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`delete TASK_INDEX`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "![delete task 1](delete.png)"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 84,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DateDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class DateDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public DateDoesNotExistException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 5
    }
  },
  {
    "path": "src/main/java/DateReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class DateReader {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public DateReader(String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t * converts a date string into a formatted string in the form \"1 January 2019, 12pm\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t * @param dr An object containing a date as a string in a different format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t * @return Date in a formatted string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t * @throws DateDoesNotExistException If days or months or time is out of range."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String readDate(DateReader dr) throws DateDoesNotExistException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tString[] arr \u003d dr.date.split(\"/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tString dd \u003d arr[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tString mm \u003d arr[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tString yyyy \u003d arr[2].split(\" \")[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String time \u003d arr[2].split(\" \")[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (Integer.parseInt(dd) \u003e 31 || Integer.parseInt(dd) \u003c 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new DateDoesNotExistException(\"Day does not exist!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\tif (Integer.parseInt(mm) \u003e 12 || Integer.parseInt(mm) \u003c 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\t\tthrow new DateDoesNotExistException(\"Month does not exist!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\tif (Integer.parseInt(time) \u003c 0 || Integer.parseInt(time)%100 \u003e 59) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\t\tthrow new DateDoesNotExistException(\"Time does not exist!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tswitch (dd) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"1\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tdd \u003d \"1st\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"2\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tdd \u003d \"2nd\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"3\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tdd \u003d \"3rd\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        case \"21\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dd +\u003d \"st\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        case \"22\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dd +\u003d \"nd\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        case \"23\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dd +\u003d \"rd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        case \"31\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dd +\u003d \"st\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dd +\u003d \"th\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tswitch (mm) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"1\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"January\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"2\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"February\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"3\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"March\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"4\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"April\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"5\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"May\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"6\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"June\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"7\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"July\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"8\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"August\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"9\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"September\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"10\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"October\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"11\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"November\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \tcase \"12\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tmm \u003d \"December\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t\tbreak;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String timeInAmPm;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (time.equals(\"1200\") || time.equals(\"0000\") || time.substring(0, 2).equals(\"12\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            timeInAmPm \u003d \"12\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            timeInAmPm \u003d Integer.toString((Integer.parseInt(time)/100)%12);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String dateAndTime \u003d dd + \" of \" + mm + \" \" + yyyy + \", \" + timeInAmPm;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (!time.substring(2).equals(\"00\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dateAndTime +\u003d time.substring(2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (Integer.parseInt(time) \u003e\u003d 1200) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dateAndTime +\u003d \"pm\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            dateAndTime +\u003d \"am\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \treturn dateAndTime;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 121
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * formats the Task into savable format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return String that can be saved into a txt file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"D~\" + super.toFormattedString() + \"~\" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 27
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * the body of the main method, where Tasklist is initialised and the code runs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param input the next user input which decides what the code does."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String run(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        assert input !\u003d null: \"userinput should not be null\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        storage.readSavedList(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return Parser.parse(input, taskList, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Generate a response to user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param input the next user input which decides what the response will be."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String output \u003d run(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        assert !output.equals(\"\"): \"output should not be empty\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 29,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 5
    }
  },
  {
    "path": "src/main/java/DukeList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "T~0~read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "D~0~do homework~5th of May 2019, 1159pm"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 2
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public EmptyTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * formats the Task into savable format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return String that can be saved into a txt file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"E~\" + super.toFormattedString() + \"~\" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 27
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                DialogBox.getDukeDialog(Ui.greet(), dukeImage)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * The method takes in user input and updates the tasklist based on the input commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param input the next user input which decides what the code does."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskList the list of tasks currently saved."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String parse(String input, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task[] tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        int NUM_OF_TASKS \u003d TaskList.initialiseNumOfTasks(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return ui.exit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            } else if (input.equals(\"todo\") || input.equals(\"event\") || input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                throw new EmptyTaskException(\"☹ OOPS!!! The description of a \" + input + \" cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            switch (input.split(\" \")[0]) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return ui.printList(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return done(input, taskList, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return todo(input, taskList, ui, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return event(input, taskList, ui, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return deadline(input, taskList, ui, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return delete(input, taskList, ui, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                return find(input, taskList, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                throw new UnknownInputException(\"☹ OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                        \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String done(String input, TaskList taskList, Ui ui) throws DukeException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new UnknownInputException(\"☹ OOPS!!! Which task would you like to mark as done?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            int index \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return ui.printDone(taskList.get(index - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String todo(String input, TaskList taskList,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                                   Ui ui, int NUM_OF_TASKS) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String tododescription \u003d input.substring(5);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task todotask \u003d new ToDo(tododescription);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        TaskList.add(todotask, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        NUM_OF_TASKS++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return ui.echo(taskList.get(NUM_OF_TASKS - 1), NUM_OF_TASKS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String event(String input, TaskList taskList,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                                   Ui ui, int NUM_OF_TASKS) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String eventdescription \u003d input.split(\" /at \")[0].substring(6);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String at \u003d input.split(\" /at \")[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (at.contains(\"/\") \u0026\u0026 at.contains(\" \")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            at \u003d DateReader.readDate(new DateReader(at));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Event eventtask \u003d new Event(eventdescription, at);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        TaskList.add(eventtask, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        NUM_OF_TASKS++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return ui.echo(taskList.get(NUM_OF_TASKS - 1), NUM_OF_TASKS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String deadline(String input, TaskList taskList,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                                 Ui ui, int NUM_OF_TASKS) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String deadlinedescription \u003d input.split(\" /by \")[0].substring(9);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String by \u003d input.split(\" /by \")[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (by.contains(\"/\") \u0026\u0026 by.contains(\" \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            by \u003d DateReader.readDate(new DateReader(by));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Deadline deadlinetask \u003d new Deadline(deadlinedescription, by);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        TaskList.add(deadlinetask, NUM_OF_TASKS);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        NUM_OF_TASKS++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return ui.echo(taskList.get(NUM_OF_TASKS - 1), NUM_OF_TASKS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String delete(String input, TaskList taskList,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                                 Ui ui, int NUM_OF_TASKS) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (taskList.get(0) \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new TaskDoesNotExistException(\"There are no tasks to delete!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new UnknownInputException(\"☹ OOPS!!! Which task would you like to delete?\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else if (taskList.get(Integer.parseInt(input.substring(7)) - 1) \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new TaskDoesNotExistException(\"That task does not exist!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            int indextodel \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            Task removed \u003d taskList.delete(indextodel);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return ui.printDeleted(removed, --NUM_OF_TASKS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static String find(String input, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return ui.printFound(keyword, taskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Writes the tasklist to the file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param filePath Location of the file to write to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param textToAdd What is written to the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Saves the current task list into the specified txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskList current list of tasks to be saved."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void save(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task[] arr \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String file2 \u003d \"DukeList.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (arr[0] !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            int x \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            while (arr[x + 1] !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                sb.append(arr[x].toFormattedString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                x++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            sb.append(arr[x].toFormattedString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            writeToFile(file2, sb.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * read the saved tasks in the file and update the tasklist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param filePath location of file to be read."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskList tasklist to be updated with the tasks read in the file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @throws FileNotFoundException If the saved file does not exist."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void readFileContents(String filePath, TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            Task[] tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            int taskIndex \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                String currtask \u003d s.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                tasks[taskIndex] \u003d Task.readString(currtask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                taskIndex++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (UnknownInputException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * reads the tasks in the txt file and updates the tasklist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param tasklist tasklist that will be updated with the saved tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void readSavedList(TaskList tasklist) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            readFileContents(\"DukeList.txt\", tasklist);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 77
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String getSimpleStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return 1 or 0 symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * the method reads the strings from the saved txt file and converts them to Task Object form."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param s string in the txt file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return Task created from the string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @throws UnknownInputException If the string does not follow the format of a Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static Task readString(String s) throws UnknownInputException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String[] arr \u003d s.split(\"~\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        boolean isDone \u003d arr[1].equals(\"1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String description \u003d arr[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return new ToDo(description, isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else if (arr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return new Event(description, isDone, arr[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return new Deadline(description, isDone, arr[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            throw new UnknownInputException(\"Unknown task found.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * formats the Task into savable format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return String that can be saved into a txt file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return this.getSimpleStatusIcon() + \"~\" + this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 64
    }
  },
  {
    "path": "src/main/java/TaskDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public TaskDoesNotExistException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 5
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    private static Task[] tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public TaskList(Task[] tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public Task[] getTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Add a task to the tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param index index of the tasklist array that the task will be added to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void add(Task task, int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        tasks[index] \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Delete a task from the tasklist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param indextodel index of the tasklist that the task to be deleted is in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static Task delete(int indextodel) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task removed \u003d taskArrayList.remove(indextodel - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            tasks[i] \u003d taskArrayList.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        TaskList.updateTasks(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Retrieves a specific task from the tasklist."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param index index of the task to be retrieved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return the task retrieved."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static Task get(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return tasks[index];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Updates the tasklist with a task array."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskarr array of tasks to update the tasklist with."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static void updateTasks(Task[] taskarr) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        tasks \u003d taskarr;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * This method just returns the number of current tasks saved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param arr this is the array of tasks that the code starts with (may not be empty)."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return number of tasks currently."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static int initialiseNumOfTasks(Task[] arr) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        int no \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            if (arr[i] !\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                no++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return no;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 75
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * formats the Task into savable format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @return String that can be saved into a txt file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public String toFormattedString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"T~\" + super.toFormattedString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns an indented line."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String showLine() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return \"    _______________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a goodbye message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a string in a special format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String echo(String s) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        String[] arr \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        for (String str : arr) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     \" + str);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * Overloaded method that returns a string of the response when a task is added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param t Task that is added."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param x Current number of tasks in list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String echo(Task t, int x) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (x \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return echo(\"Got it. I\u0027ve added this task: \\n  \" + t + \"\\nNow you have \" + x + \" task in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            return echo(\"Got it. I\u0027ve added this task: \\n  \" + t + \"\\nNow you have \" + x + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a string of the current list of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskList the list of tasks to be printed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task[] tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (tasks[0] \u003d\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     There are no tasks in your list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            int taskIndex \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            while (tasks[taskIndex] !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                output.append(\"     \" + (taskIndex + 1) + \". \" + tasks[taskIndex]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                taskIndex++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a string of the response when a task is completed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param t the completed task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String printDone(Task t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"       \" + t);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a string of the response when a task is deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param t the deleted task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param numOfTasksLeft number of tasks left in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String printDeleted(Task t, int numOfTasksLeft) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"       \" + t);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (numOfTasksLeft \u003d\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     Now you have \" + numOfTasksLeft + \" task in the list.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     Now you have \" + numOfTasksLeft + \" tasks in the list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * return a string of tasks finding any tasks containing the keyword."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param keyword the word to find for."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param taskList the list of tasks to look at."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String printFound(String keyword, TaskList taskList) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Task[] tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(tasks));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder matchedTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        while (tasks[index] !\u003d null \u0026\u0026 index \u003c 100) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            if (tasks[index].getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                matchedTasks.append(\"     \" + counter + \". \" + tasks[index].toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                matchedTasks.append(\"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            } else {}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        if (matchedTasks.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     There are no matching tasks in your list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(matchedTasks);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * returns a string of the error response."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     * @param string the error to be printed."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public static String showError(String string) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"     \" + string);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(showLine());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        output.append(\"\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 194
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public UnknownInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 5
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void Test() throws Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Deadline deadlinetask \u003d new Deadline(\"finish homework /by 5/5/2019 2359\", true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        assertEquals(\"[D][✘] finish homework (by: 5th of May 2019, 1159pm)\", deadlinetask.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 12
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    public void Test(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        Todo todotask \u003d new Todo(\"read book\", true);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "        assertEquals(\"T~1~read book\", todotask.toFormattedString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kensonoenqh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kensonoenqh": 10
    }
  }
]
