[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        storage.loadFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        outerLoop:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        while (taskLine !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            String[] words \u003d taskLine.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            switch (parser.parse(taskLine)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                if (taskLine.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.throwErrorMessage(\"todo\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task todo \u003d new Todo(taskLine.substring(5));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.printAddTask(todo, tasks.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String[] parts \u003d taskLine.split(\"/at\", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String part1 \u003d parts[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String part2 \u003d parts[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                if (taskLine.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.throwErrorMessage(\"event\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else if (part2.matches(\" \\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{4}\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    int indexOfSlash \u003d taskLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task eventTask \u003d new Event(taskLine.substring(6, indexOfSlash - 1), taskLine.substring(indexOfSlash + 4));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    tasks.add(eventTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.printAddTask(eventTask, tasks.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.printEventFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String[] segments \u003d taskLine.split(\"/by\", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String segment1 \u003d segments[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String segment2 \u003d segments[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                if (taskLine.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.throwErrorMessage(\"deadline\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else if (segment2.matches(\" \\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{4}\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    int indexOfSlash2 \u003d taskLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(taskLine.substring(9, indexOfSlash2 - 1), taskLine.substring(indexOfSlash2 + 4));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.printAddTask(deadlineTask, tasks.size());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    ui.printDeadlineFormat();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                int taskNum \u003d Integer.parseInt(taskLine.substring(7));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                Task deletedTask \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printDelete(deletedTask, tasks.size());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(taskLine.substring(5));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printDone(tasks.get(taskIndex - 1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printBye();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break outerLoop;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String keyword \u003d taskLine.substring(5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                TaskList findList \u003d new TaskList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        findList.add(tasks.get(i));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printFind(findList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                ui.printOops();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                taskLine \u003d ui.readCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        storage.rewriteData();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 102
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents different types of commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    FIND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return name().toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a deadline object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected DateTimeFormatter myFormattedDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String[] dateTimeString \u003d date.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String dateString \u003d dateTimeString[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String timeString \u003d dateTimeString[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String hour \u003d timeString.substring(0, 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String minute \u003d timeString.substring(2, 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myFormattedDate \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by: \" + myDate.format(myFormattedDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * The duke.Duke program implements an app that enables users to track their tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * @author Yen-Peng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Yen-Peng": 15
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Handles exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents an event object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalDate myDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected LocalTime myTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected DateTimeFormatter myFormattedDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String[] dateTimeString \u003d date.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String dateString \u003d dateTimeString[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String year \u003d dateString.split(\"/\")[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String month \u003d dateString.split(\"/\")[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String day \u003d dateString.split(\"/\")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String timeString \u003d dateTimeString[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String hour \u003d timeString.substring(0, 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String minute \u003d timeString.substring(2, 4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myFormattedDate \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myDate \u003d LocalDate.parse(String.format(\"%s-%s-%s\", year, month, day));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        myTime \u003d LocalTime.parse(hour + \":\" + minute);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at: \" + myDate.format(myFormattedDate) + \" \" + myTime + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 43
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    //Converts a string of user input into actual command to be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public CommandType parse(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String[] commandSplit \u003d command.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String taskType \u003d commandSplit[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"todo\") :"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.TODO;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"event\") :"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.EVENT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"deadline\") :"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"list\") :"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"delete\") :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.DELETE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"done\") :"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.DONE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"bye\") :"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.BYE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        case (\"find\") :"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            return CommandType.FIND;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new InputMismatchException(\"⚆ _ ⚆ I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 36
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a storage object that will read and write files into specific file path."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    private File taskListText;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Storage(TaskList taskList){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void loadFile() throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            checkFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            taskListText \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            BufferedReader TasksFile \u003d new BufferedReader(new FileReader(taskListText));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            String dataLine \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            while ((dataLine \u003d TasksFile.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                String[] data \u003d dataLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                switch (data[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task todoFile \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    taskList.add(todoFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        todoFile.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task eventFile \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    taskList.add(eventFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        eventFile.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    Task deadlineFile \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    taskList.add(deadlineFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                        deadlineFile.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void rewriteData() throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        try (PrintStream out \u003d new PrintStream(new FileOutputStream(taskListText))) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    out.print(t.getSymbol() + \" | \" + t.getBoolean() + \" | \" + t.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                    out.print(t.getSymbol() + \" | \" + t.getBoolean() + \" | \" + t.getDescription() + \" | \" + t.getDateString() + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void checkFile() throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        File tmpDir \u003d new File(\"TaskList.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (!tmpDir.exists()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            tmpDir.createNewFile();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 74
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // returns check mark if done, cross symbol if undone"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getBoolean() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a task list that can be populated with task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void remove(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Represents a to-do object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String logo \u003d \"  .-\u0027)   _   .-\u0027)      (\u0027-.     _  .-\u0027)   .-\u0027) _         .-. .-\u0027)     (\u0027-.    .-. .-\u0027)              \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \" ( OO ).( \u0027.( OO )_   ( OO ).-.( \\\\( -O ) (  OO) )        \\\\  ( OO )   ( OO ).-.\\\\  ( OO )             \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \"(_)---\\\\_),--.   ,--.) / . --. / ,------. /     \u0027._        ;-----.\\\\   / . --. / ;-----.\\\\  ,--.   ,--.\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \"/    _ | |   `.\u0027   |  | \\\\-.  \\\\  |   /`. \u0027|\u0027--...__)       | .-.  |   | \\\\-.  \\\\  | .-.  |   \\\\  `.\u0027  / \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \"\\\\  :` `. |         |.-\u0027-\u0027  |  | |  /  | |\u0027--.  .--\u0027       | \u0027-\u0027 /_).-\u0027-\u0027  |  | | \u0027-\u0027 /_).-\u0027)     /  \\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \" \u0027..`\u0027\u0027.)|  |\u0027.\u0027|  | \\\\| |_.\u0027  | |  |_.\u0027 |   |  |          | .-. `.  \\\\| |_.\u0027  | | .-. `.(OO  \\\\   /   \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \".-._)   \\\\|  |   |  |  |  .-.  | |  .  \u0027.\u0027   |  |          | |  \\\\  |  |  .-.  | | |  \\\\  ||   /  /\\\\_  \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \"\\\\       /|  |   |  |  |  | |  | |  |\\\\  \\\\    |  |          | \u0027--\u0027  /  |  | |  | | \u0027--\u0027  /`-./  /.__) \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                \" `-----\u0027 `--\u0027   `--\u0027  `--\u0027 `--\u0027 `--\u0027 \u0027--\u0027   `--\u0027          `------\u0027   `--\u0027 `--\u0027 `------\u0027   `--\u0027      \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        String greet \u003d line + \"\\n Hello! My name is Smart Baby~\\n (๑★ᴗ★๑) What can I do for you?\\n\" + line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n Zzz...sleeping time! ~u~\\n\" + line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printOops() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\nHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            assert task !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            System.out.println((i + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"[\" + task.getStatusIcon() + \"]\" + task.getDescription() + \"\\n\" + line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printAddTask(Task task, int sizeOfTaskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"Now you have \" + sizeOfTaskList + \" tasks in the list.\\n\" + line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printDelete(Task deletedTask, int sizeOfTaskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n Noted. I\u0027ve removed this task: \\n\" + deletedTask.toString() + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "                + \"Now you have \" + (sizeOfTaskList - 1) + \" tasks in the list.\\n\" + line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printFind(TaskList findList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\n Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            Task task \u003d findList.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            System.out.println((i+1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printEventFormat() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\nDoesn\u0027t match the event format. Please use /at dd/mm/yyyy 0000 (in 24hr).\\n\" + line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void printDeadlineFormat() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        System.out.println(line + \"\\nDoesn\u0027t match the deadline format. Please use /by dd/mm/yyyy 0000 (in 24hr).\\n\" + line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    public void throwErrorMessage(String taskType) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        if (Stream.of(\"delete\", \"done\", \"todo\", \"deadline\", \"event\").anyMatch(s -\u003e taskType.equals(s))) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(line + \"\\n ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\" + line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "            throw new DukeException(line + \"\\n ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 96
    }
  },
  {
    "path": "src/main/java/out/production/main/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "E | 0 | this kndn ek | 02/12/2012 1700"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yen-Peng"
        },
        "content": "D | 1 | this nadf kf | 20/04/2017 1400"
      }
    ],
    "authorContributionMap": {
      "Yen-Peng": 2
    }
  }
]
