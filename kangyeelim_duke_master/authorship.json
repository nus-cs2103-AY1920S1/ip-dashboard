[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | ervnev"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 1 | ewnr"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | ewfnw"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | evnvnev"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | evnev"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "D | 0 | frcbe | 30/08/2019 1200"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "E | 0 | eciercb | 01/10/2019 1630"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outDateFormat \u003d new SimpleDateFormat( \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outTimeFormat \u003d new SimpleDateFormat(\"HH.mm aa\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileTimeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected Date date, time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Deadline(String description, Date date, Date time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + outDateFormat.format(date) + \" \" + outTimeFormat.format(time) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"D\" + super.toWriteIntoFile() + \" | \" + fileDateFormat.format(date) + \" \" + fileTimeFormat.format(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //make a new file or read from existing file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            BufferedReader bfr \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            while ((line \u003d bfr.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String[] stringArr \u003d line.split(\" [|] \", 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                if (stringArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String[] dateTimeArr \u003d (stringArr[3]).split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Event event \u003d new Event(stringArr[2], date, time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                } else if (stringArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Todo td \u003d new Todo(stringArr[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        td.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    tasks.add(td);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String[] dateTimeArr \u003d (stringArr[3]).split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    Deadline dl \u003d new Deadline(stringArr[2], date, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        dl.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    tasks.add(dl);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    ;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            System.out.println(\"\\u2639 OOPS!!! There is an incorrect format in the data file.\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"Please correct it.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            command \u003d \"bye\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //add more specific exceptions"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            System.out.println(\"Error with the data file initialization\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            command \u003d \"bye\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                if (command.length() \u003c 4) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String error \u003d \"\\u2639 OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    throw new DukeException(error);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    //deleting task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //throw exception for no task number and there is just trailing whitespaces"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String res \u003d command.replace(\" \", \"\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (res.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to delete.\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else if (command.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //throw exception for no task number"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to delete.\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    int curr \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //check if list has no task to throw exception"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! You do not have any tasks in your list.\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else if (curr \u003e index) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //check if index is within list size or throw exception"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! You do not have that task in your list. \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                + \"Call \u0027list\u0027 to see all your tasks :-)\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String markAsDoneMsg \u003d \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            tasks.get(curr - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    tasks.remove(curr - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(markAsDoneMsg);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    index--;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String statusOfList;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        statusOfList \u003d \"Now you have \" + index + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        statusOfList \u003d \"Now you have \" + index + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(statusOfList);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    //write \u0027tasks\u0027 into data file, overwriting all contents"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String textFileMsg \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            textFileMsg \u003d textFileMsg + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            textFileMsg \u003d textFileMsg + System.lineSeparator() + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.write(textFileMsg);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                } else if (!command.equals(\"list\") \u0026\u0026 !command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    //adding new task of 1 of 3 types"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no description"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! The description of todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (!command.substring(4,5).equals(\" \")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027todo\u0027 \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                +\"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            if (res.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                String error \u003d \"\\u2639 OOPS!!! The description of todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                throw new DukeException(error);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        tasks.add(new Todo(command.substring(5)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else if (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                       if (command.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           //throw exception for no description"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           throw new DukeException(error);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                       } else if (!command.substring(5,6).equals(\" \")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           //throw exception for no whitespace after event"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027event\u0027 \""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                   + \"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           throw new DukeException(error);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                       } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           //throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           if (res.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                               String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                               throw new DukeException(error);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                       }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (!command.contains(\" /at \") \u0026\u0026 command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for wrong user input syntax for incorrect whitespaces for /at"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace before and after \u0027/at\u0027 for me \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                    + \"to keep track of the date/time correctly :-)\\n\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (!command.contains(\" /at \")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no /at"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           String error \u003d \"\\u2639 OOPS!!! You would need to schedule a date and time duration for this event using \u0027/at\u0027.\\n\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                           throw new DukeException(error);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                       }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String[] arr \u003d command.split(\" /at \", 2);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String[] dateTimeArr \u003d (arr[1]).split(\" \", 2);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        tasks.add(new Event(arr[0].substring(6), date, time));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else if (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (command.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no description"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! The description of deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (!command.substring(8, 9).equals(\" \")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no whitespace after deadline"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027deadline\u0027 \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                    + \"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            // throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            if (res.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                String error \u003d \"\\u2639 OOPS!!! The description of deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                throw new DukeException(error);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (!command.contains(\" /by \") \u0026\u0026 command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for incorrect whitespaces for /by"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace before and after \u0027/by\u0027 for me to \""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                    + \"keep track of the date/time correctly :-)\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else if (!command.contains(\" /by \")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            //throw exception for no /by"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! You would need to schedule a date/time for this deadline using \u0027/by\u0027.\\n\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String[] arr \u003d command.split(\" /by \", 2);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String[] dateTimeArr \u003d (arr[1]).split(\" \", 2);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        tasks.add(new Event(arr[0].substring(6), date, time));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //throw exception for wrong command"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String commandMsg \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            + tasks.get(index);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String textFileMsg \u003d System.lineSeparator() + tasks.get(index).toWriteIntoFile();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(commandMsg);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String statusOfList;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        statusOfList \u003d \"Now you have \" + index + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        statusOfList \u003d \"Now you have \" + index + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(statusOfList);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.write(textFileMsg);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                } else if (command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    //marking task as done"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //throw exception for no task number and there is just trailing whitespaces"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String res \u003d command.replace(\" \", \"\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (res.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to mark as done.\\n\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            throw new DukeException(error);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    } else if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //throw exception for no task number"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to mark as done.\\n\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    int curr \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    if (curr \u003e index) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        //check if index is within list size or throw exception"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String error \u003d \"\\u2639 OOPS!!! You do not have that task in your list. \" +"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                                \"Call \u0027list\u0027 to see all your tasks :-)\\n\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        throw new DukeException(error);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    tasks.get(curr - 1).markAsDone();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String markAsDoneMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            \"[\" + tasks.get(curr - 1).getStatusIcon() + \"] \" + tasks.get(curr - 1).getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(markAsDoneMsg);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String textFileMsg \u003d \"\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            textFileMsg \u003d textFileMsg + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                            textFileMsg \u003d textFileMsg + System.lineSeparator() + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.write(textFileMsg);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    //listing tasks out"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    String listMsg \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println(listMsg);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        String taskMsg \u003d (i + 1) + \". \" + task;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        System.out.println(taskMsg);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! Please input the date in dd/mm/yyyy \" +"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                        \"and time in 24hr format, separated by a space.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String exitMsg \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(exitMsg);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 302,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String errMsg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.errMsg \u003d errMsg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return this.errMsg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outDateFormat \u003d new SimpleDateFormat( \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outTimeFormat \u003d new SimpleDateFormat(\"HH.mm aa\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileTimeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected Date date, time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Event(String description, Date date, Date time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + outDateFormat.format(date) + \" \" + outTimeFormat.format(time) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"E\" + super.toWriteIntoFile() + \" | \" + fileDateFormat.format(date) + \" \" + fileTimeFormat.format(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 26
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (isDone? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getIfDone() { return (isDone? \"1\" : \"0\");}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String msg \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String msg \u003d \" | \" + this.getIfDone() + \" | \" + this.getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"T\" + super.toWriteIntoFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 16
    }
  }
]
