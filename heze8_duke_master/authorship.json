[
  {
    "path": "data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "[D][✘] return book (by: 02 December 2019, 06:00 PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": "[D][✘] return book (by: 02 December 2019, 06:00 PM)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "[T][✘] eat"
      }
    ],
    "authorContributionMap": {
      "heze8": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.datahandling.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.datahandling.DataStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private DataStorage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "        storage \u003d new DataStorage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "            tasks.store(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "        parser \u003d new Parser(tasks, storage, ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "                parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "                isExit \u003d parser.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heze8"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heze8"
        },
        "content": "        new Duke(\"data/save.txt\").run();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/bin/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private ArrayList\u003cTask\u003e textStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void store(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "        textStorage.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void store(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "            textStorage.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return textStorage.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Task markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "        --index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "        if (index \u003c 0 | index \u003e\u003d textStorage.size())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"There\u0027s no Task attached to that number\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return textStorage.get(index).completed();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Task delete(int index) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "        --index;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "        if (index \u003c 0 | index \u003e\u003d textStorage.size())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"There\u0027s no Task attached to that number\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return textStorage.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return textStorage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 42
    }
  },
  {
    "path": "src/main/java/duke/bin/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public UI () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "        display(\"What can I do for you?\", \"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "        display(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void display(String string) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.HORIZONTAL_LINE + Constants.INDENTATION + string + \"\\n\" + Constants.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void display(String string, String startPhrase) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.HORIZONTAL_LINE + Constants.INDENTATION + startPhrase);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.INDENTATION + string + \"\\n\" + Constants.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void display(String string, String startPhrase, String endingPhrase) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.HORIZONTAL_LINE + Constants.INDENTATION + startPhrase);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.INDENTATION + \"  \" + string);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.INDENTATION + endingPhrase + \"\\n\" + Constants.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void displayList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.HORIZONTAL_LINE + Constants.INDENTATION + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heze8"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heze8"
        },
        "content": "        while( i \u003c tasks.size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heze8"
        },
        "content": "            System.out.println(Constants.INDENTATION + i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heze8"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.INDENTATION + i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heze8"
        },
        "content": "        System.out.println(Constants.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 54
    }
  },
  {
    "path": "src/main/java/duke/bin/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public static final String INDENTATION \u003d \"     \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d INDENTATION + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 6
    }
  },
  {
    "path": "src/main/java/duke/bin/common/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 7
    }
  },
  {
    "path": "src/main/java/duke/bin/common/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private final String DATE_PATTERN \u003d \"dd MMMM yyyy, hh:mm a\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private String format;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Time(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_PATTERN);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "            date \u003d LocalDateTime.parse(dateString, formatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "            format \u003d date.format(formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String[] stringSplit \u003d dateString.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String[] dateSplit \u003d stringSplit[0].split(\"\\\\/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "                date \u003d LocalDateTime.of(Integer.valueOf(dateSplit[2]), Integer.valueOf(dateSplit[1]),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "                        Integer.valueOf(dateSplit[0]), Integer.valueOf(stringSplit[1].substring(0, 2)),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "                        Integer.valueOf(stringSplit[1].substring(2)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "                format \u003d date.format(formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "                throw new DukeException(\"Oops something when wrong with your date input, \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "                        \"try following this date pattern: \" + DATE_PATTERN);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 36
    }
  },
  {
    "path": "src/main/java/duke/bin/datahandling/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.datahandling;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 5
    }
  },
  {
    "path": "src/main/java/duke/bin/datahandling/DataStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.datahandling;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class DataStorage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private String newLine \u003d System.getProperty(\"line.separator\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "     * Public constructor for the storage of the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "     * @param filePath file path to save and load in the computer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public DataStorage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "            boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (isFirst) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    fw.write(parseTask(task));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heze8"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    fw.write(newLine + parseTask(task));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heze8"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"Oops something when wrong with saving the data.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private String parseTask(Task t) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return t.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private Task parseString(String s) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String type \u003d s.substring(1, 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String status \u003d s.substring(4, 5);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String[] spl \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heze8"
        },
        "content": "            Task temp;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heze8"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heze8"
        },
        "content": "                temp \u003d new ToDo(spl[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String[] nameAndDesc \u003d spl[1].split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String time \u003d nameAndDesc[1].substring(0, nameAndDesc[1].length() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heze8"
        },
        "content": "                Time t \u003d new Time(time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heze8"
        },
        "content": "                temp \u003d new Event(nameAndDesc[0], t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String[] nameAndDescr \u003d spl[1].split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "heze8"
        },
        "content": "                String desc \u003d nameAndDescr[1].substring(0, nameAndDescr[1].length() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "heze8"
        },
        "content": "                Time t2 \u003d new Time(desc);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "heze8"
        },
        "content": "                temp \u003d new Deadline(nameAndDescr[0], t2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "heze8"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "heze8"
        },
        "content": "                temp \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "heze8"
        },
        "content": "                throw new DukeException(\"Something went wrong with the save file.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "heze8"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"Oops something when wrong with the save file.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "heze8"
        },
        "content": "            readFromFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"Oops something when wrong with loading your tasks. So sorry.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private void readFromFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "heze8"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "heze8"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "heze8"
        },
        "content": "                tasks.add(parseString(line));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "heze8"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 104
    }
  },
  {
    "path": "src/main/java/duke/bin/datahandling/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.datahandling;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.Time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private DataStorage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Parser(TaskList taskList, DataStorage storage, UI ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String[] words \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "            String command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "            boolean moreThanOne;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "            if (fullCommand.contains(\" \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "                command \u003d words[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "                moreThanOne \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heze8"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heze8"
        },
        "content": "                command \u003d fullCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heze8"
        },
        "content": "                moreThanOne \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heze8"
        },
        "content": "            Task temp;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heze8"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heze8"
        },
        "content": "                ui.display(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heze8"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heze8"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heze8"
        },
        "content": "                ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (list.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"Oh looks like there\u0027s nothing in your list so far.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heze8"
        },
        "content": "                ui.displayList(list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (moreThanOne) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String secondWord \u003d words[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    int index \u003d Integer.parseInt(secondWord);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    ui.display(taskList.markAsDone(index).toString(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heze8"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, you didn\u0027t specify which index of the list you\u0027ve done.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (moreThanOne) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String secondWord \u003d words[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    int index \u003d Integer.parseInt(secondWord);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    ui.display(taskList.delete(index).toString(),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "heze8"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, you didn\u0027t specify which index of the list you want to delete.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (moreThanOne) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    temp \u003d new ToDo(words[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    taskList.store(temp);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    ui.display(temp.toString(), \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "heze8"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, the description of your ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (moreThanOne) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String[] spl \u003d words[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    if (spl.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "heze8"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, you forgot to put a time for your deadline.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String time \u003d spl[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    Time t \u003d new Time(time);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    temp \u003d new Deadline(spl[0], t);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    taskList.store(temp);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    ui.display(temp.toString(), \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "heze8"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, the description of your DeadLine cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "heze8"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "heze8"
        },
        "content": "                if (moreThanOne) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String[] split \u003d words[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    if (split.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "heze8"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, you forgot to put a time for your event.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    String time \u003d split[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    Time t \u003d new Time(time);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    temp \u003d new Event(split[0], t);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    taskList.store(temp);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    ui.display(temp.toString(), \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "heze8"
        },
        "content": "                            \"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "heze8"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "heze8"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, the description of your Event cannot be empty.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "heze8"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "heze8"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "heze8"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "heze8"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "heze8"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "heze8"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry please give a number instead.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "heze8"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "heze8"
        },
        "content": "    private void updateStorage() throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "heze8"
        },
        "content": "        storage.write(taskList.getList());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 143
    }
  },
  {
    "path": "src/main/java/duke/bin/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Deadline(String task, Time time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "heze8": 22
    }
  },
  {
    "path": "src/main/java/duke/bin/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.Time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Event(String task, Time time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 21
    }
  },
  {
    "path": "src/main/java/duke/bin/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public Task completed() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 31
    }
  },
  {
    "path": "src/main/java/duke/bin/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public ToDo (String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 16
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 10
    }
  },
  {
    "path": "src/test/java/duke/bin/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void testGetSize() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "        TaskList taskListUnderTest \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(0, taskListUnderTest.getSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "        Task todo \u003d new ToDo(\"eat\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "        taskListUnderTest.store(todo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(1, taskListUnderTest.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void testMarkAsDone() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "        TaskList taskListUnderTest \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heze8"
        },
        "content": "            taskListUnderTest.markAsDone(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heze8"
        },
        "content": "        } catch (DukeException expected) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heze8"
        },
        "content": "            assertEquals(\"There\u0027s no Task attached to that number\", expected.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heze8"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heze8"
        },
        "content": "        Task todo \u003d new ToDo(\"eat\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heze8"
        },
        "content": "        taskListUnderTest.store(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(todo, taskListUnderTest.markAsDone(1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 34
    }
  },
  {
    "path": "src/test/java/duke/bin/datahandling/DataStorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.datahandling;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class DataStorageStub extends DataStorage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public DataStorageStub () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "        super(\"data/save.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "        return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e taskList) {}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 19
    }
  },
  {
    "path": "src/test/java/duke/bin/datahandling/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "package duke.bin.datahandling;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "import duke.bin.common.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": "    public void isExitTest() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": "        DataStorage storage \u003d new DataStorageStub();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "        Parser p \u003d new Parser(t, storage, new UI());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "        p.parse(\"deadline test /by 20/12/2019 1800\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(false, p.isExit());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "        p.parse(\"todo eat\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(false, p.isExit());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heze8"
        },
        "content": "        p.parse(\"bye\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heze8"
        },
        "content": "        assertEquals(true, p.isExit());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heze8"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heze8"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heze8": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": "whats up"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "deadline return book /by August 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "event project meeting /at 1 to 3 pm :)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "heze8": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heze8"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heze8"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heze8"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heze8"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heze8"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heze8"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heze8"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heze8"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heze8"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heze8"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heze8"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heze8"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "heze8": 21
    }
  }
]
