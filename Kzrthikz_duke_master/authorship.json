[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/*javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    version \u003d \"13\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}*/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveVersion \u003d \"0.2.1\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 59,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, water plants"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, water plants"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "T, 0, water plants"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Duke is a chatbot to help you manage your tasks. "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Adding a todo tasks: \u0027todo\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Adds a todo task. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027todo cs2103T homework\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Adding a deadline task: \u0027deadline\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Adds a task with the specified deadline in DD/MM/YYYY HHmm format. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027deadline buy textbooks /by 12/10/2019 1700\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Adding a event task: \u0027event\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Adds a task with a specified  date and time of event in DD/MM/YYYY HHmm format. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027event meet friend /at 11/12/2019 1412\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Mark a task as done: \u0027done\u0027 "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Sets a specified task as done. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027done 2\u0027 : Changes from cross to a tick to the 2nd task in the task list, provided it exists. "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Deleting a task: \u0027delete\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Deletes a specified task from the task list. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027delete 4\u0027 : Deletes the 4th task in the task list, provided it exists. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Listing all tasks: \u0027list\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Lists all the tasks stored into task list. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027list\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "1. T][✘]water plants "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "2. [T][✘]eat lunch"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "3. [D][✘]watch webcasts (by: 27/09/2019 1800) "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "4. [E][✘]team meeting (at: 24/09/2019 1600) "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "5. [T][✘]run later "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Finding a task by using a keyword: \u0027find\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Finds a task which contains the specified phrase of keyword. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027find books\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Check clashes in Event tasks "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Checks if the event task to be added clashes with existing event tasks. "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "If there is a clash, task will not be added to tasklist. "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Prints original task list. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Exceptions "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "examples: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "1. Incorrect format "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "example: deadline meeting 12/2/2019 1800 "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "example: event friends meet up 12/2/2018"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "example: deadline "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "exception message: OOPS! Description cannot be empty. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "2. Incorrect input "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "example: done 100 "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "example: delete 100 "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "exception message: Error, you have entered an invalid number. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "### Exiting the program: \u0027bye\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Exits the program. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u0027bye\u0027"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 76,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Deadline class represents on of the 3 tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Has the date attribute to understand date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Has description attribute to represent task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private SimpleDateFormat dateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String amOrPm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected  String[] suffixes \u003d {  \"0th\",  \"1st\",  \"2nd\",  \"3rd\",  \"4th\",  \"5th\",  \"6th\",  \"7th\",  \"8th\",  \"9th\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"30th\", \"31st\" };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String[] months \u003d {  \" \", \"January\", \"February\", \"March\", \"April\", \"May\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                   \"June\", \"July\", \"August\", \"September\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                   \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Deadline object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description Full description of deadline task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param date Date at which task is due."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws ParseException when date entered is invalid or input of wrong format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public Deadline(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.date \u003d dateFormat.parse(date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Formats the the deadline object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a string representation of deadline object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*@Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), dateFormat.format(date));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Deadline object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description Full description of deadline task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param by date and time of deadline"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] arr \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        processTime(arr[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        processDate(arr[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        formattedDateAndTime \u003d formattedDate + \", \" + formattedTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!formattedDateAndTime.equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.by \u003d formattedDateAndTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Formats the date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param dateInString date to be formatted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void processDate(String dateInString) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] splitDates \u003d dateInString.split(\"/\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int size \u003d splitDates.length;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (size \u003d\u003d 3) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String date \u003d splitDates[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String month \u003d splitDates[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String year \u003d splitDates[2];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intDate \u003d Integer.parseInt(date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            date \u003d suffixes[intDate];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intMonth \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String monthInWords \u003d months[intMonth];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intYear \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedDate \u003d date + \" of \" + monthInWords + \" \" + intYear;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Formats time."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param timeInString time to be formatted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void processTime(String timeInString) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int time \u003d Integer.parseInt(timeInString);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (hour \u003d\u003d 12) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"pm\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if (hour \u003e 12) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"pm\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            hour -\u003d 12;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"am\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + amOrPm + \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + \".\" + min + amOrPm;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the description of deadline object."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a string representation of description."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the due date of deadline object."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a string representation of date."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 139
    }
  },
  {
    "path": "src/main/java/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import java.util.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            fx:controller\u003d\"DialogBox\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Creates a Dialogbox with input text and display picture."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param text text."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param img image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Sets up DukeDialogue."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param text text."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param img image."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return DialogBox object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 70
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Represents the main class of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Starts by creating GUI for Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param stage stage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        /*sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        });*/"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*/**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*private void handleUserInput() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                new DialogBox(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                new DialogBox(dukeText, new ImageView(dukeImage))"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*private void handleUserInput() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getResponse(String command) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Parser parse \u003d new Parser(storage, tasks);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return parse.read(command);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Duke. Initialises Ui, Storage and TaskList."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Starts the duke program."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ui.run(tasks, storage);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public static void main(String[] args) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        new Duke(\"../../../data/tasks.txt\").run();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * main method of duke program."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param args args."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 180,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * DukeException handles Exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public DukeException(Exception ex) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(ex);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Event class represents one of the 3 Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String originalAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private Date dateAndTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private SimpleDateFormat dateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    //private String dateAndTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String amOrPm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected  String[] suffixes \u003d {  \"0th\",  \"1st\",  \"2nd\",  \"3rd\",  \"4th\",  \"5th\",  \"6th\",  \"7th\",  \"8th\",  \"9th\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                      \"30th\", \"31st\" };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String[] months \u003d {  \" \", \"January\", \"February\", \"March\", \"April\", \"May\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                                   \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String formattedDateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param dateAndTime dateAndTime in which event is going to take place."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws IllegalArgumentException Invalid dateAndTime."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws ParseException invalid dateAndTime."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*public Event(String description, String dateAndTime) throws IllegalArgumentException, ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.at \u003d dateAndTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.dateAndTime \u003d dateFormat.parse(dateAndTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description Full description of deadline task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param at dateAndTime in which event is going to take place."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.originalAt \u003d at;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] arr \u003d this.at.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        processTime(arr[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        processDate(arr[0]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        formattedDateAndTime \u003d formattedDate + \", \" + formattedTime;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!formattedDateAndTime.equals(\"\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.at \u003d formattedDateAndTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Formats the date."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param dateInString date to be formatted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void processDate(String dateInString) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] splitDates \u003d dateInString.split(\"/\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int size \u003d splitDates.length;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (size \u003d\u003d 3) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String date \u003d splitDates[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String month \u003d splitDates[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String year \u003d splitDates[2];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intDate \u003d Integer.parseInt(date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            date \u003d suffixes[intDate];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intMonth \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String monthInWords \u003d months[intMonth];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int intYear \u003d Integer.parseInt(year);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedDate \u003d date + \" of \" + monthInWords + \" \" + intYear;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Formats time."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param timeInString time to be formatted."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void processTime(String timeInString) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int time \u003d Integer.parseInt(timeInString);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (hour \u003d\u003d 12) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"pm\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if (hour \u003e 12) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"pm\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            hour -\u003d 12;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            amOrPm \u003d \"am\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + amOrPm + \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            formattedTime \u003d hour + \".\" + min + amOrPm;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns string representation of dateAndTime."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @returni at."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return originalAt;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*/**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns string representation of Event object."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string represenation of Event object."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /*@Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), dateFormat.format(dateAndTime));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns description of Event task."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 139
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Reads command and creates its respective Task object. Performs operations and stores tasklist in a storage file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String laterInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Parser."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param storage storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Parser(Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is done and marks task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param laterInput is the number to be marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of task done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String checkDone(String laterInput) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            laterInput \u003d laterInput.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int taskNum \u003d Integer.parseInt(laterInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert (taskNum !\u003d 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks.taskDone(taskNum - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String toOutput \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        + tasks.taskPrint(taskNum - 1) + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                            + \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return toOutput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"Error, you have entered an invalid number\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is delete and removes task from TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param laterInput is the number representing task to be deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of task to be deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String checkDelete(String laterInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            laterInput \u003d laterInput.trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            int numToDelete \u003d Integer.parseInt(laterInput);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert (numToDelete !\u003d 0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String toOutput \u003d \"Noted. I\u0027ve removed this task: \" + \" \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    + tasks.taskPrint(numToDelete - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        + \"Now you have \" + (tasks.size() - 1) + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks.remove(numToDelete - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return toOutput;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"Error, you have entered an invalid number\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is todo and creates a Todo object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws Exception if description is empty."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void checkToDo(String description) throws ArrayIndexOutOfBoundsException, IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assert !description.isEmpty();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!description.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is deadline and creates a Deadline object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description description of deadline task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws Exception if description is empty."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void checkDeadline(String description) throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assert !(description \u003d\u003d null);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!description.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String[] fullDescription \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String taskDescription \u003d fullDescription[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String by \u003d fullDescription[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert !(taskDescription \u003d\u003d null);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert !(by \u003d\u003d null);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            tasks.add(new Deadline(taskDescription, by));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is event and creates a Deadline object."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description description of event object."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws Exception if description is empty."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void checkEvent(String description) throws Exception {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assert !(description \u003d\u003d null);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!description.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String[] fullDescription \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String taskDescription \u003d fullDescription[0];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String at \u003d fullDescription[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert !(taskDescription \u003d\u003d null);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            assert !(at \u003d\u003d null);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (noClash(at)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                tasks.add(new Event(taskDescription, at));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                storage.append(tasks.getLast());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            throw new Exception();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Finds the tasks with the command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param itemToFind finds for tasks with the command."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return String representation of task."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String checkFind(String itemToFind) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!itemToFind.isEmpty()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            TaskList tasksFound \u003d tasks.findByKeyword(itemToFind);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (tasksFound \u003d\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                output \u003d \"Sorry no tasks found with the keyword: \" + itemToFind;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                output \u003d \"Here are the matching tasks in your list:\" + \"\\n\" + tasksFound.printForListString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks for any anomalies like no clash in timing."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param timeAndDate timeAndDate of task object to be checked with the timeAndDate of other task objects."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public boolean noClash(String timeAndDate) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (list.get(i) instanceof  Event) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (((Event) list.get(i)).getAt().equals(timeAndDate)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println(\"Anomaly detected. Schedule clash\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Checks if command is todo, deadline or event."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param command todo or deadline or event."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param laterInput description of the task."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String checkTask(String command, String laterInput) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                checkToDo(laterInput);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                checkDeadline(laterInput);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                checkEvent(laterInput);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String output \u003d \"Got it. I\u0027ve added this task: \" + \"\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    + \" \" + tasks.printLatest().toString() + \"\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"OOPS! Description cannot be empty.\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(.\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //return (command + e.getMessage());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Parser reads in command from user."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param input commands like done, delete, list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String read(String input) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (input.equals(\"todo\") | input.equals(\"deadline\") | input.equals(\"event\")) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"OOPS! Description cannot be empty\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (input.equals(\"hello\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"Hello! I\u0027m Duke. \" + \"\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (arr.length \u003d\u003d 1 \u0026\u0026 (!input.equals(\"hello\") \u0026\u0026 !input.equals(\"bye\") \u0026\u0026 !input.equals(\"list\"))) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        processCommand(input);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //processCommand(input);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return checkDone(laterInput);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //processCommand(input);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return checkDelete(laterInput);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //processCommand(input);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (tasks.printForListString().equals(\"\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                return \"Empty List\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                return tasks.printForListString();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //processCommand(input);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return checkFind(laterInput);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            //processCommand(input);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            return checkTask(command, laterInput);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Processed the input into command and laterInput."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param input input from user."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void processCommand(String input) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            command \u003d \"list\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String[] wordSeparator \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.command \u003d wordSeparator[0];"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            this.laterInput \u003d wordSeparator[1];"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 254
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.filename \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        File directory \u003d new File(String.valueOf(Path.of(filename).getParent()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            directory.mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.file \u003d new File(filename);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        if (!file.isFile()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Error reading file\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Loads tasks into TaskList according to the Task Todo or Deadline or Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return Arraylist of Tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws IOException if file not found."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws ParseException parseexception."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //File file \u003d new File(filename);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(file.getCanonicalPath());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(file.exists());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(fileReader);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String[] task \u003d sc.nextLine().replaceAll(\", \", \",\").split(\",\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (task[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Todo(task[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Deadline(task[2], task[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                Task newTask \u003d new Event(task[2], task[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Appends Task to task.txt file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param task task to add to txt file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws Exception if there is error in file handling."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void append(Task task) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filename, true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String status \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"T, \" + status + \", \" + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"D, \" + status + \", \" + task.getDescription() + \", \" + ((Deadline) task).getBy() +  \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                writer.write(\"E, \" + status + \", \" + task.getDescription() + \", \" + ((Event) task).getAt() +  \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(\"Error in file handling\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Updates the task.txt when task is done or deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param list ArrayList of Task to update."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @throws IOException error in file handling."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void update(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        BufferedWriter bufferWriter \u003d Files.newBufferedWriter(Paths.get(filename));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        while (counter \u003c list.size()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            Task tsk \u003d list.get(counter);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            String status \u003d tsk.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (tsk instanceof Todo) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    bufferWriter.write(\"T, \" + status + \", \" + tsk.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else if (tsk instanceof Deadline) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    bufferWriter.write(\"D, \" + status + \", \" + tsk.getDescription()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                            + \", \" + ((Deadline) tsk).getBy() +  \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else if (tsk instanceof Event) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    bufferWriter.write(\"E, \" + status + \", \" + tsk.getDescription()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                            + \", \" + ((Event) tsk).getAt() +  \"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                System.out.println(\"Error in file handling\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        bufferWriter.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 122
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Represents the 3 Tasks of Todo, Deadline and Storage."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of Task class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns if task object is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return true if task is done false otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the tick or cross symbol to represent task is done or not respectively."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a tick or cross"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns a string representation with the status icon(tick or cross) and description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of task icon and description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns a string representation of description."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return a string representation of description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * TaskList class represents the list of Tasks Todo, Deadline and Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param list List of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor TaskList that creates a new ArrayList of Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Prints the ArrayList when user enters list command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void printForList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns a string representation of the tasks in list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of tasks in list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String printForListString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            output +\u003d i + \".\" + list.get(i - 1).toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param x task number."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void taskDone(int x) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        list.get(x).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Prints the specific task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param x task number."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task taskPrint(int x) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(x);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Prints the last added Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return Task last added to TaskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task printLatest() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(list.size() - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the size of ArrayList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return the size of ArrayList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Removes the Task from ArrayList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param x index of Task to remove."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void remove(int x) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        list.remove(x);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Adds new Task to the ArrayList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param newTask newTask to add."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the last Task from ArrayList."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return last Task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Task getLast() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list.get(list.size() - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns the ArrayList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return ArrayList of Task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns TaskList of tasks found by keyword."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param itemToFind keyword."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return TaskList with the keyword from existing task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public TaskList findByKeyword(String itemToFind) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            if (task.getDescription().contains(itemToFind)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                output.add(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new TaskList(output);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 127
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Represents Todo object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Constructor of ToDo."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns string representation of ToDo object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return string representation of ToDo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public static Todo outputAsTodo(String lineToRead) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return new Todo(lineToRead);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Returns description of Todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return super.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 34
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " * Represents the interaction between user and Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Starts Duke and sends command to parser."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param tasks Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void run(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Parser parser \u003d new Parser(storage, tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                if (command.equals(\"hello\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println(\"Hello! I\u0027m Duke. \" + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println(\"Bye. See you again. \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                    System.out.println(parser.read(command));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     * Prints if file not available."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        //System.out.println(\"File not available\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        return \"File not available\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 44
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"enter text\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 2
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void testEmptySizedTaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assertEquals(new TaskList().size(), 0);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void testLastTaskAdded() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Todo todoTask \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        tl.add(todoTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assertEquals(tl.getLast(), todoTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    public void testTaskPrint() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Todo todoFirstTask \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        Todo todoSecondTask \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        tl.add(todoFirstTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        tl.add(todoSecondTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "        assertEquals(tl.taskPrint(1), todoSecondTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kzrthikz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kzrthikz": 29
    }
  }
]
