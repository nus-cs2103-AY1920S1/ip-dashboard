[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        printWelcomeMsg();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        List\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        while (!command.equals(\"\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    printTasks(list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (command.length() \u003e 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    doneTask(list, command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else if (command.length() \u003e 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    deleteTask(list, command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {  // add task or wrong command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    String[] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    if (!temp[0].equals(\"deadline\") \u0026\u0026 !temp[0].equals(\"event\") \u0026\u0026 !temp[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        throw new DukeException(\"     â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                        addTask(list, command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void addTask(List\u003cTask\u003e list, String command) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String[] words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        String type \u003d words[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                task \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                int index \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Deadline(command.substring(9, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                    task \u003d new Event(command.substring(6, index - 1), command.substring(index + 4));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void doneTask(List\u003cTask\u003e list, String command) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            list.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"       \" + list.get(number - 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void deleteTask(List\u003cTask\u003e list, String command) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            String[] done \u003d command.split(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            int number \u003d Integer.valueOf(done[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            Task task \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            list.remove(number - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The task number does not exist.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void printTasks(List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            throw new DukeException(\"     â˜¹ OOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        for (Task task:list) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "            System.out.println(\"     \" + count + \".\" + task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void printWelcomeMsg() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    private static void printHorizontalLine() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 121,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qiujiaaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qiujiaaa": 11
    }
  }
]
