[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\tid \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\tid \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    mainClassName \u003d \"duke.main.Launcher\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 32,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "[T] | [?] | eat food"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 1
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the various commands given to the bot by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public abstract String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the command giving a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DeadlineCommand(String task, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Adds a new Deadline object in the list of tasks and saves this new task list in the hard disk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (isDuplicate(task, tasks)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Duplicate task already exists!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Deadline dl \u003d new Deadline(task, time, false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        tasks.addTask(dl);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        storage.appendToFile(dl);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                dl.toString(), tasks.getTasksSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public boolean isDuplicate(String task, TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (tasks.getTask(i).getName().equals(task)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the \u0027delete\u0027 command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Deletes the indexed task and saves this new task list in the hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Task deleted \u003d tasks.removeTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    deleted.toString(), tasks.getTasksSize());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(String.format(\"OOPS!!! Please input a number between 1 and %d after \u0027delete\u0027\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    tasks.getTasksSize()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the \u0027done\u0027 command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Marks the indexed task as done and saves this new task list in the hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Task doneTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            doneTask.markDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done: \\n\" + doneTask.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(String.format(\"OOPS!!! Please input a number between 1 and %d after \u0027done\u0027\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    tasks.getTasksSize()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 38
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the command giving a event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public EventCommand(String task, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Adds a new Event object in the list of tasks and saves this new task list in the hard disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (isDuplicate(task, tasks)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Duplicate task already exists!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Event ev \u003d new Event(task, time, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        tasks.addTask(ev);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        storage.appendToFile(ev);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                ev.toString(), tasks.getTasksSize());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public boolean isDuplicate(String task, TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (tasks.getTask(i).getName().equals(task)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 48
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (tasks.getTask(i).getName().contains(keyword)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                output \u003d output + counter + \". \" + tasks.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the \u0027list\u0027 command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Lists the current tasks in the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String output \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            output \u003d output + (i + 1) + \". \" + tasks.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 25
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents the command giving a todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class TodoCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public TodoCommand(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Adds a new ToDo object in the list of tasks and saves this new task list in the hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param storage the Storage object to update the tasks in the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param ui the Ui object dealing with interactions with the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param tasks the TaskList object containing the existing list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String execute(Storage storage, Ui ui, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (isDuplicate(task, tasks)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Duplicate task already exists!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Todo td \u003d new Todo(task, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        tasks.addTask(td);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        storage.appendToFile(td);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                td.toString(), tasks.getTasksSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public boolean isDuplicate(String task, TaskList tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (tasks.getTask(i).getName().equals(task)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 45
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 7
    }
  },
  {
    "path": "src/main/java/duke/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 61
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private final static String FILEPATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            assert c !\u003d null : \"Command c should not be null\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return c.execute(storage, ui, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return ui.getOpening();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 56,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 12
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 31
    }
  },
  {
    "path": "src/main/java/duke/main/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Wookie.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Yoda.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        DialogBox dukeWelcome \u003d DialogBox.getDukeDialog(duke.getWelcome(), dukeImage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assert dukeWelcome !\u003d null : \"dukeWelcome should not be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        dialogContainer.getChildren().addAll(dukeWelcome);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assert userDialog !\u003d null : \"userDialog should not be null\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assert dukeDialog !\u003d null : \"dukeDialog should not be null\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 62
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Deals with understanding the commands given to the bot by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Returns a Command object that corresponds to the fullCommand argument given to the bot"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * by the user as a String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param fullCommand the command given to the bot by the user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @return the corresponding Command object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @throws DukeException if fullCommand is not one of the recognised commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String[] split \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String command \u003d split[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String details \u003d split.length \u003d\u003d 1 ? \"\" : split[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseBye(details);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseList(details);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseDone(details);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseDelete(details);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseDeadline(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseEvent(details);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseTodo(details);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return parseFind(details);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public ByeCommand parseBye(String details) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (!details.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! No input is needed after bye\u0027\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return new ByeCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public ListCommand parseList(String details) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (!details.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! No input is needed after \u0027list\u0027\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DoneCommand parseDone(String details) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            int index \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please input a valid number after \u0027done\u0027\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DeleteCommand parseDelete(String details) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            int index \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please input a valid number after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public DeadlineCommand parseDeadline(String details) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String[] split \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String task \u003d split[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (task.isBlank() || time.isBlank()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return new DeadlineCommand(task, time);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please input in this format: \u0027deadline \u003ctask\u003e /by \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public EventCommand parseEvent(String details) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String[] split \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String task \u003d split[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            if (task.isBlank() || time.isBlank()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return new EventCommand(task, time);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please input in this format: \u0027event \u003ctask\u003e /at \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public TodoCommand parseTodo(String details) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please add task description after \u0027todo\u0027\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return new TodoCommand(details);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public FindCommand parseFind(String details) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        if (details.isBlank()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please add keyword after \u0027find\u0027\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return new FindCommand(details);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 128
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Deals with loading tasks from the file and saving tasks to the file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Loads the tasks saved into the hard drive from the previous Duke session"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * and stores them in an ArrayList of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @return an ArrayList of existing tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @throws DukeException if file cannot be found or opened"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                switch (task[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    tasks.add(new Todo(task[2], (task[1].equals(\"[\\u2713]\") ? true : false)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    tasks.add(new Deadline(task[2], task[3].substring(4), (task[1].equals(\"[\\u2713]\") ? true : false)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    tasks.add(new Event(task[2], task[3].substring(4), (task[1].equals(\"[\\u2713]\") ? true : false)));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void appendToFile(Task task) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fw.append(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!!\" + e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void writeToFile(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            ArrayList\u003cTask\u003e added \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            for (int i \u003d 0; i \u003c added.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "                fw.write(added.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            throw new DukeException(\"OOPS!!!\" + e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 79
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Contains the ArrayList of existing tasks, with operations to add or delete tasks from the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Creates a new TaskList object with an empty ArrayList if existing tasks are not available, or if there is none."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Creates a new TaskList object with an ArrayList of existing tasks loaded by the Storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 45
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Deals with interaction with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String opening \u003d logo + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String closing \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getOpening() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return opening;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getClosing() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "       return closing;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Deadline(String name, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.dateTime \u003d formatDateTime(dateTime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Returns a String containing the formatted date and time given by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param dateTime a String containing the date and time given by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @return a new formatted String containing the date and time, following the format in the method"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String formatDateTime(String dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        SimpleDateFormat newFormat \u003d new SimpleDateFormat(\"d \u0027of\u0027 MMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Date date \u003d format.parse(dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return newFormat.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"[D] | %s | by: %s\", super.toString(), this.dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Event(String name, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.dateTime \u003d formatDateTime(dateTime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * Returns a String containing the formatted date and time given by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @param dateTime a String containing the date and time given by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     * @return a new formatted String containing the date and time, following the format in the method"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    private String formatDateTime(String dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        SimpleDateFormat newFormat \u003d new SimpleDateFormat(\"d \u0027of\u0027 MMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            Date date \u003d format.parse(dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return newFormat.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"[E] | %s | at: %s\", super.toString(), this.dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " * Represents a task given to the bot by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String statusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"[%s] | %s\", this.statusIcon(), this.name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        return String.format(\"[T] | \" + super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 13
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\t\u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\t\t\u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\t\u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\t\u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\t\u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 19
    }
  },
  {
    "path": "src/test/java/duke/command/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        ByeCommand byeCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assertEquals(byeCommand.isRunning(), false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 12
    }
  },
  {
    "path": "src/test/java/duke/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        TaskList tl \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assertEquals(tl.getTasksSize(), 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 14
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        Task task \u003d new Task(\"meeting\", false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        String testString \u003d \"[\\u2718] | meeting\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "        assertEquals(task.toString(), testString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MackyMaguire"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "MackyMaguire": 21
    }
  }
]
