[
  {
    "path": "src/main/java/DateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class DateException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public DateException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 5
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public DateTime() {}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method returns the date in the desired convention."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String getDate(String date) throws DateException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] ddmmyy \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String dd \u003d addDaySuffix(ddmmyy[0]) + \" of \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String mm \u003d wordMonth(ddmmyy[1]) + \" \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String yy \u003d ddmmyy[2] + \", \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return dd + mm + yy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method adds the suffix for the day in the date String. This method is used in the getDate method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String addDaySuffix(String day) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int dayNum \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String dayWithSuffix \u003d day;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (dayNum \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            dayWithSuffix +\u003d \"st\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else if (dayNum \u003d\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            dayWithSuffix +\u003d \"nd\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else if (dayNum \u003d\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            dayWithSuffix +\u003d \"rd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            dayWithSuffix +\u003d \"th\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return dayWithSuffix;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method changes the month number to its name in the date String. This method is used in the getDate method."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String wordMonth(String month) throws DateException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int monthNum \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        switch (monthNum) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"January\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"February\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"March\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 4:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"April\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 5:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"May\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 6:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"June\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 7:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"July\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 8:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"August\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 9:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"September\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 10:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"October\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"November\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                return \"December\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                throw new DateException(\"Invalid month entered!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method returns the time in the desired convention."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String getTime(String time) throws DateException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String hours \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        timeString +\u003d getHours(hours);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String minutes \u003d time.substring(2,4);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        timeString +\u003d getMinutes(minutes);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (Integer.parseInt(hours) \u003c 12) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            timeString +\u003d \"am\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            timeString +\u003d \"pm\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return timeString;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method returns the hour component of time. This method is used in the getTime method."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String getHours(String hours) throws DateException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int hourNum \u003d Integer.parseInt(hours);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String numHour;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (hourNum \u003e 24) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DateException(\"Invalid time entered!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else if (hourNum \u003c 12) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            if (hourNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                numHour \u003d \"12\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else if (hourNum \u003c 10) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                numHour \u003d hours.substring(1,2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                numHour \u003d hours;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            numHour \u003d hourNum%12 + \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return numHour;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method returns the minute component of time. This method is used in the getTime method."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static String getMinutes(String minutes) throws DateException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int minNum \u003d Integer.parseInt(minutes);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (minNum \u003e 60) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DateException(\"Invalid time entered!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else if (minNum \u003e 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            return \".\" + minutes;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 121
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String formatted \u003d \"D | \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int binary \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (super.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            binary \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        formatted +\u003d binary + \" | \" + super.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static ArrayList\u003cTask\u003e memory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static DateTime DT \u003d new DateTime();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static String filePath \u003d \"../duke/data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"; */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        activeChat();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method queries for user input and returns the desired result."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void activeChat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        loadInfoFromDrive();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String input \u003d sc.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    doneTask(taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String TodoTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    if (TodoTask.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        throw new DukeException(\"Oops! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        toDoTask(TodoTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String EventTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    if (EventTask.equals(\"\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        throw new DukeException(\"Oops! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        eventTask(EventTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String DeadlineTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    if (DeadlineTask.equals(\"\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        throw new DukeException(\"Oops! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        deadlineTask(DeadlineTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    int deleteNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    deleteTask(deleteNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    throw new DukeException(\"Oops! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                System.out.println(\"Something went wrong: \"  + e2.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                input \u003d sc.next();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method loads the previously saved information on the hard disk onto Duke."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static void loadInfoFromDrive() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Scanner s \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                Task newTask \u003d convertToTask(s.nextLine());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                memory.add(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static Task convertToTask(String taskLine) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] allInfo \u003d taskLine.split(\"[|]\", 4);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        Task toReturn;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (taskLine.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            toReturn \u003d remakeTodo(allInfo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else if (taskLine.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            allInfo \u003d taskLine.split(\"[|]\", 5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            toReturn \u003d remakeDeadline(allInfo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            allInfo \u003d taskLine.split(\"[|]\", 7);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            toReturn \u003d remakeEvent(allInfo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method generates the Todo task that was loaded from the hard drive."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static ToDo remakeTodo(String[] info) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        //System.out.println(info[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        ToDo ret \u003d new ToDo(info[2].trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (info[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            ret.recordDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method generates the Deadline task that was loaded from the hard drive."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static Deadline remakeDeadline(String[] info) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        //System.out.println(info[1]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        Deadline ret \u003d new Deadline(info[2].trim(), info[3].trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (info[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            ret.recordDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method generates the Event task that was loaded from the hard drive."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static Event remakeEvent(String[] info) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        //System.out.println(info[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        Event ret \u003d new Event(info[2].trim(), info[3].trim());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (info[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            ret.recordDone();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method generates the string of the data to be saved into the hard disk."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static void saveToDrive() throws IOException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (memory.size() \u003e 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            String text \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Task firstTask \u003d memory.get(0);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            if (firstTask instanceof ToDo) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                ToDo first \u003d (ToDo) firstTask;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                text \u003d first.format();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else if (firstTask instanceof Deadline) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                Deadline first \u003d (Deadline) firstTask;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                text \u003d first.format();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                Event first \u003d (Event) firstTask;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                text \u003d first.format();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            int numTasks \u003d memory.size();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            for (int i \u003d 1; i \u003c numTasks; i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                String text2 \u003d \"\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                Task specTask \u003d memory.get(i);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                if (specTask instanceof ToDo) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    ToDo spec \u003d (ToDo) specTask;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    text2 \u003d spec.format();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (specTask instanceof Deadline) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    Deadline spec \u003d (Deadline) specTask;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    text2 \u003d spec.format();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    Event spec \u003d (Event) specTask;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    text2 \u003d spec.format();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                text +\u003d System.lineSeparator() + text2;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            writeToFile(filePath, text);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            writeToFile(filePath, \"\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method overwrites the information from Duke to the hard disk. This is done to automatically update all tasks in the hard disk."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method marks the targeted task as done and provides confirmation to the user through output."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void doneTask(int taskNum) throws DukeException, IOException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (taskNum \u003e index) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! This task number does not exist.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Task target \u003d memory.get(taskNum - 1);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            target.markAsDone();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(target);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            saveToDrive();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method iterates through the data collected and prints them out in the desired format."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        for (Task current : memory) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(id + \".\" + current.toString());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates a ToDo object and adds it into memory."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void toDoTask(String a) throws IOException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        ToDo newTodo \u003d new ToDo(a);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        memory.add(newTodo);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        printTask(newTodo);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        saveToDrive();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates an Event object and adds it into memory."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    If command does not include a timing, then user is prompted to enter the command again."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void eventTask(String b) throws DukeException, IOException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] details \u003d b.split(\"/at\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! Please include the event timing and resubmit that command.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            String[] eventTime \u003d details[1].trim().split(\" \");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            if (eventTime.length \u003c 2) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                throw new DukeException(\"Oops! Please write the event timing such as 29/2/2019 1800-2000\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String[] hoursMin \u003d eventTime[1].split(\"-\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String hM \u003d DT.getTime(hoursMin[0]) + \"-\" + DT.getTime(hoursMin[1]);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String formattedTime \u003d DT.getDate(eventTime[0]) + hM;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    Event newEvent \u003d new Event(details[0].trim(), formattedTime);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    memory.add(newEvent);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    printTask(newEvent);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    saveToDrive();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } catch (DateException e) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    throw new DukeException(\"Oops! \" + e.getMessage() + \" Please write the event timing such as 29/2/2019 1800-2000\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates a deadlineTask and adds it into memory."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    If command does not include a deadline, then user is prompted to enter the command again."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void deadlineTask(String c) throws DukeException, IOException {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] details \u003d c.split(\"/by\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! Please include the deadline and resubmit that command.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            String[] time \u003d details[1].trim().split(\" \");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            if (time.length \u003c 2) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                throw new DukeException(\"Oops! Please write the deadline such as 29/2/2019 1800\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String formattedTime \u003d DT.getDate(time[0]) + DT.getTime(time[1]);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(details[0].trim(), formattedTime);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    memory.add(newDeadline);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    printTask(newDeadline);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    saveToDrive();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } catch (DateException e) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    throw new DukeException(\"Oops! \" + e.getMessage() + \" Please write the deadline such as 29/2/2019 1800\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method prints the task that was just added to the list."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void printTask(Task task) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method removes the target task from the list and prompts the user the number of remaining tasks saved."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @param int deleteNum the index of the task to be deleted"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void deleteTask(int deleteNum) throws DukeException, IOException {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (deleteNum \u003e index) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! This task number does not exist.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Task removed \u003d memory.remove(deleteNum - 1);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(removed);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            index \u003d memory.size();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            saveToDrive();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gohsnn": 305,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String formatted \u003d \"E | \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int binary \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (super.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            binary \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        formatted +\u003d binary + \" | \" + super.description + \" | \" + this.eventTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 24
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "A child class of Object which contains the description of the Task and whether the Task has been done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    //for the purpose of text-ui-testing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    } */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method changes the task to be done when the task has yet to be done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"This task has already been done!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method records the loaded task as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public void recordDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method returns an empty String as it will be overridden in its child classes for more specific format of each type of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"wrong format method used\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 52
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String formatted \u003d \"T | \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String binary \u003d \"0\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (super.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            binary \u003d \"1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        formatted +\u003d binary + \" | \" + super.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 21
    }
  }
]
