[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void addDeadline(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String description \u003d words[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String[] actionAndTime \u003d description.split(\"/by\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Deadline deadline \u003d new Deadline(actionAndTime[0], actionAndTime[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.taskList.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"       \" + deadline);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.printNumber();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "import java.net.SocketOption;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    //static int totalNumber \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        readList(sc);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void readList(Scanner sc) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                String[] words \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                String action \u003d words[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    printBye();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    Task.doneTask(words);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    Task.deleteTask(words);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    ToDo.addTodo(words);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    Deadline.addDeadline(words);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    Event.addEvent(words);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            } catch(DukeException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                System.err.println(\"     \" + ex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void printNumber() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String string \u003d String.format(\"     Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            System.out.println(\"     \" + index + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 70,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void addEvent(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String description \u003d words[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String[] actionAndTime \u003d description.split(\"/at\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Event event \u003d new Event(actionAndTime[0], actionAndTime[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.taskList.add(event);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"       \" + event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.printNumber();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void doneTask(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The index of a done task cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        int doneIndex \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Task currentTask \u003d Duke.taskList.get(doneIndex - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        currentTask.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"       \" + currentTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void deleteTask(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The index of a delete task cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        int doneIndex \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Task currentTask \u003d Duke.taskList.get(doneIndex - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.taskList.remove(doneIndex - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"       \" + currentTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.printNumber();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 52
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public static void addTodo(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        String description \u003d words[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.taskList.add(todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"       \" + todo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        Duke.printNumber();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wang Xueting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wang Xueting": 27
    }
  }
]
