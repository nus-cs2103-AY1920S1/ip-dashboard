[
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    String[] months \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public DateTime(String raw) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String[] rawArr \u003d raw.split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        if (rawArr.length \u003c 2) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] rawTwo \u003d raw.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.day \u003d Integer.parseInt(rawTwo[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.month \u003d rawTwo[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.year \u003d Integer.parseInt(rawTwo[2]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.time \u003d Integer.parseInt(rawTwo[3].split(\"hrs\")[0]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.day \u003d Integer.parseInt(rawArr[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.month \u003d months[Integer.parseInt(rawArr[1]) - 1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] splitt \u003d rawArr[2].split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.year \u003d Integer.parseInt(splitt[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.time \u003d Integer.parseInt(splitt[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.day + \" \" + this.month + \" \" + this.year + \" \" + this.time + \"hrs\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 38
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Deadline(String description, DateTime by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"D/\" + status + \"/\" + description + \"/\" + this.by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.lang.reflect.Field;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Storage storage \u003d new Storage(\"src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\nHere are the current tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d storage.load(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Parser p \u003d new Parser(taskList, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        while(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            p.parse(x);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            if (x.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                scanner.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 23,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Event(String description, DateTime at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"E/\" + status + \"/\" + description + \"/\" + this.at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 22
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected ArrayList\u003cTask\u003e commands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Parser(ArrayList\u003cTask\u003e commands, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses and handles the output for all the commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void parse(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] inputArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String userCommand \u003d inputArr[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    for (Task s : commands) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        System.out.println(count + \". \" + s);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        int index \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task doneTask \u003d commands.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            doneTask.markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + doneTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            storage.done(doneTask, index + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Index for done does not exist in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index for done cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String dL \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String[] taskDeadLine \u003d dL.split(\" /by \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String taskD \u003d taskDeadLine[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String by \u003d taskDeadLine[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task tt \u003d new Deadline(taskD, new DateTime(by));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            commands.add(tt);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                    + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            storage.save(tt);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The format for deadline is wrong. Please follow: \u003cdescription\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String eEvent \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String[] taskEvent \u003d eEvent.split(\" /at \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String taskE \u003d taskEvent[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String at \u003d taskEvent[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task ee \u003d new Event(taskE, new DateTime(at));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            commands.add(ee);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + ee"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                    + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            storage.save(ee);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The format for event is wrong. Please follow: \u003cdescription\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String todoT \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        Task t \u003d new Todo(todoT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        commands.add(t);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        storage.save(t);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        int i \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task tt \u003d commands.remove(i);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + tt +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                    \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            storage.delete(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Index for delete does not exist in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index for delete cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (userCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    String word \u003d inputArr[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    for (Task ttt : commands) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        if (ttt.toString().contains(word)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(count + \". \" + ttt);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            count++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 123
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected FileWriter fw;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Loads tasks from the .txt file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return the updated array list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public ArrayList\u003cTask\u003e load(ArrayList\u003cTask\u003e commands) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(this.filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String[] data \u003d x.split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Todo t \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Deadline d \u003d new Deadline(data[2], new DateTime(data[3]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(d);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + d);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (data[0].equals(\"E\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Event e \u003d new Event(data[2], new DateTime(data[3]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        e.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Saves the lastest task in the .txt file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param task t"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void save(Task t) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.fw.append(t.storageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileWriter ff \u003d new FileWriter(\"src/main/java/data/temp.txt\", true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while ((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (i !\u003d j) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(x + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.flush();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            ff.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.copy(Paths.get(\"src/main/java/data/temp.txt\"), Paths.get(filePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.delete(Paths.get(\"src/main/java/data/temp.txt\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Changes the status of task from not done to done"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void done(Task t, int index) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileWriter ff \u003d new FileWriter(\"src/main/java/data/temp.txt\", true);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while ((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(t.storageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(x + System.lineSeparator());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            ff.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.copy(Paths.get(\"src/main/java/data/temp.txt\"), Paths.get(\"src/main/java/data/duke.txt\"), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.delete(Paths.get(\"src/main/java/data/temp.txt\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 132
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int status;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.status \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Changes the status of a task from not done to done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.status \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Task|\" + status + \"|\" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 36
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"T/\" + status + \"/\" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 20
    }
  }
]
