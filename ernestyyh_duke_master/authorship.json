[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui.initiate(storage, tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 22,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(\"File does not exist\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(String.format(\"\\u2639 OOPS!!! %s\\n\", message));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 18
    }
  },
  {
    "path": "src/main/java/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InsufficientArgumentException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InsufficientArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 5
    }
  },
  {
    "path": "src/main/java/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public InvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo \u003d new String[2];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.matches(\"done\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DONE\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"done\\\\s+\", \"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"delete\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DELETE\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"delete\\\\s+\", \"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"todo\\\\s+.+\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"TODO\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"todo\\\\s+\", \"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"deadline\\\\s+.+\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"DEADLINE\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"deadline\\\\s+\", \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.matches(\"event\\\\s+.+\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"EVENT\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[1] \u003d input.replaceAll(\"event\\\\s+\", \"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"LIST\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"UNKNOWN\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseDetails(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        parseInfo[1] \u003d dateConversion(parseInfo[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String dateConversion(String s) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat numDateTime \u003d new SimpleDateFormat(\"d/M/y HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat textDateTime \u003d new SimpleDateFormat(\"d MMMM y, h.mma\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (s.matches(\"\\\\d+/\\\\d+/\\\\d+\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                Date d \u003d numDateTime.parse(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                s \u003d textDateTime.format(d);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 59
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private File diskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        diskList \u003d new File(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            Scanner s \u003d new Scanner(diskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            while(s.hasNext()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                String[] savedTask \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                switch (savedTask[0]) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Todo t \u003d new Todo(savedTask[2]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Deadline d \u003d new Deadline(savedTask[2], savedTask[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(d);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Event e \u003d new Event(savedTask[2], savedTask[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (savedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        e.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    taskList.add(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void overWrite(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            diskList.createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String s \u003d t.formattedString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (first) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(s);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(String.format(\"\\n%s\", s));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(diskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public abstract String formattedString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 24
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private int numTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d taskList.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public int getNumTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return numTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return taskList.get(numTask - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task doneTask(String s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d taskList.get(Integer.valueOf(s) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task deleteTask(String s) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        int listRank \u003d Integer.valueOf(s) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d taskList.get(listRank);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        taskList.remove(listRank);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask--;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void todoTask(String s) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        taskList.add(new Todo(s));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void deadlineTask(String[] s) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        taskList.add(new Deadline(s[0], s[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void eventTask(String[] s) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        taskList.add(new Event(s[0], s[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 62
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formattedString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"T | %d | %s\", super.isDone ? 1 : 0, super.description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void initiate(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String greeting \u003d String.format(\"\\n%s\\n%s\\n\", \"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(logo + greeting);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String[] parseInfo \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            int currentNum \u003d taskList.getNumTask();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            switch (parseInfo[0]) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(taskList.doneTask(parseInfo[1]) + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(taskList.deleteTask(parseInfo[1]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.todoTask(parseInfo[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.deadlineTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                taskList.eventTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                printTaskAddition(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    System.out.println(String.format(\"%d.%s\", i + 1, taskList.getTask(i)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                            || input.equals(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        String message \u003d String.format(\"The description of a %s cannot be empty.\", input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new InsufficientArgumentException(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new InvalidArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (currentNum !\u003d taskList.getNumTask()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                System.out.println(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getNumTask()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        storage.overWrite(taskList.getList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void printTaskAddition(TaskList taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(taskList.getTask());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(\"No existing task list can be loaded. New task list will be created.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 87
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDateConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(\"2 September 2019, 12.00AM\", Parser.dateConversion(\"02/09/2019 0000\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDetailParsing() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expected \u003d new String[] {\"project meeting\", \"Mon 2-4pm\"};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expected[0], Parser.parseDetails(input)[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expected[1], Parser.parseDetails(input)[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testCommandParsing() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expected \u003d new String[] {\"DONE\", \"1\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"done 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expected[0], Parser.parseCommand(input)[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expected[1], Parser.parseCommand(input)[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 27
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testStorageLoad() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Storage dummy \u003d new Storage(\"data/dummy.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(new ArrayList\u003cTask\u003e(), dummy.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(\"File does not exist\", e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 20
    }
  }
]
