[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 18,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Printer.printString(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        // greet"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        ArrayList\u003cDoableTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        loop: while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                StringBuilder formattedList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (i \u003e 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        formattedList.append(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    formattedList.append(i + 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    formattedList.append(\".\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    formattedList.append(list.get(i).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                // format list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                String finalString \u003d formattedList.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                finalString \u003d finalString.equalsIgnoreCase(\"\") ? \"You have no tasks\" : finalString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                Printer.printString(finalString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                // print list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                Printer.printString(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                break loop;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            // bye"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                if (input.matches(\"^done [0-9]+$\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\"done \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    // get index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (index \u003c 0 || index \u003e list.size() - 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.printError(\"That is not a valid task index\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // index out of bounds"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.printString("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                                \"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                                        + list.get(index).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // mark done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                } else if (input.matches(\"^delete [0-9]+$\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    int index \u003d Integer.parseInt(input.split(\"delete \", 2)[1]) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    // get index"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (index \u003c 0 || index \u003e list.size() - 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.printError(\"That is not a valid task index\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // index out of bounds"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.printString("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                                \"Noted! I\u0027ve removed this task:\\n  \" + list.get(index).toString()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                                + \"\\nNow you have \" + (list.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        list.remove(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    DoableTask t \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    String contentString;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    String[] contentSegments;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (input.matches(\"^todo.*\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        if (input.matches(\"^todo .+\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            t \u003d new Todo(input.split(\"todo \", 2)[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            Printer.printError(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // add todo"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    } else if (input.matches(\"^deadline.*\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        if (input.matches(\"^deadline .+ /by .+\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            contentString \u003d input.split(\"deadline \", 2)[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            contentSegments \u003d contentString.split(\"/by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            t \u003d new Deadline(contentSegments[0], contentSegments[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        } else if (input.matches(\"^deadline .+((?!/by ).)\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            Printer.printError(\"The due date of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            Printer.printError(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // add deadline"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    } else if (input.matches(\"^event.*\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        if (input.matches(\"^event .+ /at .+\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            contentString \u003d input.split(\"event \", 2)[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            contentSegments \u003d contentString.split(\"/at \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            t \u003d new Event(contentSegments[0], contentSegments[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        } else if (input.matches(\"^event .+((?!/at ).)\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            Printer.printError(\"The date range of an event cannot be empty\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                            Printer.printError(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        // add event"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.printError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    if (t !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        list.add(t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                        Printer.addTaskMessage(t, list.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                    // add to list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        name \u003d taskName;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class DoableTask extends Task {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public DoableTask(String taskName) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class Todo extends DoableTask {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class Deadline extends DoableTask {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Deadline(String taskName, String due) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        deadline \u003d due;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class Event extends DoableTask {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private String dateRange;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public Event(String taskName, String range) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        dateRange \u003d range;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateRange + \")\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "class Printer {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /** The spacing after padding for each line of text. */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int MARGIN_LENGTH \u003d 1;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /** The spacing before the horizontal line begin. */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int PADDING_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /** The length the right most tip of the horizontal line will span. */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final int HORIZONTAL_LINE_LENGTH \u003d 64;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /** Text to be inserted before every line of text. */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final String MARGIN_AND_PADDING \u003d repeatChar(MARGIN_LENGTH + PADDING_LENGTH, \u0027 \u0027);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /** Text to be inserted before the start of the first line and after the last line. */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d repeatChar(PADDING_LENGTH, \u0027 \u0027)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            + repeatChar(HORIZONTAL_LINE_LENGTH - PADDING_LENGTH,\u0027_\u0027)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Displays duke logo."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printDukeLogo() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Prints an added message for the last task in the list."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @precondition must have at least one element in the list."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param tasks ArrayList of tasks."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void addTaskMessage(Task task, int length) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        printString(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"\\nNow you have \" + length"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "                + \"tasks in the list.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Print with error decorator prefixing the string"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str   string to be printed"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printError(String str) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        System.out.print(formatString(\"☹ OOPS!!! \" + str));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Prints a string with formatting; border, margin and padding."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str   string to be printed."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static void printString(String str) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        System.out.print(formatString(str));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Builds a string with borders and margin and padding for each line."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param str   string to be formatted"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return      resulting formatted string"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    public static String formatString(String str) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        StringBuilder formattedString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        for (String s : str.split(\"\\n\")) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(MARGIN_AND_PADDING);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(s);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "            formattedString.append(\"\\n\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        formattedString.append(\"\\n\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return formattedString.toString();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * Generates a string of repeated characters."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param length    number of repetitions"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @param c         character to be repeated"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     * @return          resulting repeated character string"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    private static String repeatChar(int length, char c) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        s.append(String.valueOf(c).repeat(Math.max(0, length)));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 251,
      "-": 11
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    void placeHolder() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "        assertEquals(2, 1 + 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 1tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 2tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 3tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 4tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 5tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 6tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Now you have 7tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AHaliq": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AHaliq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AHaliq"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "AHaliq": 34
    }
  }
]
