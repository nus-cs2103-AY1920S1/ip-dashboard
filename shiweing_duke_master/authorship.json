[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "TODO | read book | true"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "DEADLINE | return book | false | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "EVENT | project meeting | false | Aug 6th 2-4pm"
      }
    ],
    "authorContributionMap": {
      "shiweing": 3
    }
  },
  {
    "path": "src/main/java/App.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Handles logic of application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class App {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Stores tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Gets input from user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Reads input from user and sends to performAction to determine action."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Load data if exist"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        loadTasks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Greet"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String input \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            performAction(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            input \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        // Exit"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Handles command by user by forwarding to specific methods."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Input from user. Includes command and other attributes applicable."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void performAction(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            //inputArr[0] is the action, inputArr[2] is the data"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            switch (inputArr[0]) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            // List"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                displayList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                doneTask(inputArr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                addTodo(inputArr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                addDeadline(inputArr);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                addEvent(inputArr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                deleteTask(inputArr);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Displays all tasks in list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void displayList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(\"You have no tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            StringBuilder strbui \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                strbui.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(strbui.deleteCharAt(strbui.length() - 1).toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Size 2 array of user input of format \"done | [attributes]\"."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If no valid task number is provided."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void doneTask(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int id \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d list.get(id);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            task.done();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(String.format(\"Nice! I\\\u0027ve marked this task as done:%n%s\", task));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a valid task number.\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: done [task no.]\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Adds a Todo task to the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Size 2 array of user input of format \"todo | [attributes]\"."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If no task description is provided."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addTodo(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: todo [task description]\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        Task task \u003d new Todo(input[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        printAlert(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Adds a Deadline task to the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Size 2 array of user input of format \"deadline | [attributes]\"."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If no task description or deadline is provided; or unable to find flag \"/by\"."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addDeadline(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline task cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: deadline [task description] /by [deadline]\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d input[1].split(\" /by \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (attributes.length \u003c 2 || attributes[1].strip().isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please provide a deadline for the task.\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: deadline [task description] /by [deadline]\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Date deadline \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(attributes[1]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d new Deadline(attributes[0], deadline);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            printAlert(task);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Please enter the deadline in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Adds an Event to the list."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Size 2 array of user input of format \"event | [attributes]\"."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If no event description or event time is provided; or unable to find flag \"/at\"."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void addEvent(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (input.length \u003c 2 || input[1].strip().isEmpty())"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: event [event description] /at [event time]\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d input[1].split(\" /at \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (attributes.length \u003c 2 || attributes[1].strip().isEmpty())"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please provide a time for the event.\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: event [event description] /at [event time]\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Date eventTime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(attributes[1]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d new Event(attributes[0], eventTime);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            printAlert(task);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Please enter the event time in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input Size 2 array of user input of format \"delete | [attributes]\"."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If no valid task number is provided."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void deleteTask(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            int id \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Task task \u003d list.remove(id);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(String.format(\"Noted. I\u0027ve removed this task:%n\" +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            \"\\t%s%n\" +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                            \"Now you have %d tasks in the list\","
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    task, list.size()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a valid task number.\\n\" +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    \"   Usage: delete [task no.]\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Loads task from file."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void loadTasks() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            File file \u003d new File(\"C:\\\\Users\\\\shiwe\\\\Documents\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            System.out.println(\"Loading tasks from \" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    String[] taskInput \u003d s.nextLine().split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    list.add(TaskType.valueOf(taskInput[0]).stringToTask(taskInput[1]));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Save tasks in list to a save file."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void saveTasks() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            File file \u003d new File(\"C:\\\\Users\\\\shiwe\\\\Documents\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                fw.write(task.getType().taskToString(task));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            print(e.getMessage());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Prints an alert after a task is added."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void printAlert(Task task) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        print(String.format(\"Got it. I\u0027ve added this task:%n\" +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \"\\t%s%n\" +"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                task, list.size()));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Prints in specifed output format."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param output Output to print.s"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private void print(String output) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String border \u003d \"\\t------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        output \u003d output.replaceAll(\"(?m)^\", \"\\t \");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        System.out.print(border + output + \"\\n\" + border);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 276
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Stores deadline of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Deadlne."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Deadline(String desc, Date by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Another constructor for Deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param isDone Completion of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Deadline(String desc, boolean isDone, String by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.by \u003d by.strip();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Return deadline of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns type of TaskType.DEADLINE."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type DEADLINE."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                new SimpleDateFormat(\"dd MMM yyyy hh:mm aa\").format(this.by));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        App app \u003d new App();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        app.run();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 3,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represent an Exception thrown by the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"\\u2639 %s\", super.getMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represent an event."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * The event timing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param at Event timing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Event(String desc, Date at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Another constructor for Eveny."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param isDone Completion of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param at Event timing.."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Event(String desc, boolean isDone, String at) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.at \u003d at.strip();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns event timing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Event timing."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns TaskType.EVENT."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type EVENT."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.EVENT;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                new SimpleDateFormat(\"dd MMM yyyy hh:mm aa\").format(this.at));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 55
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represent a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Task description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Indicator for task completion."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Task(String desc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.desc \u003d desc.strip();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Another constructor for Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param isDone Indicator for completion of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.desc \u003d desc.strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Return task description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Return if task is done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return True if done, false if not."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    abstract TaskType getType();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[%c] %s\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.isDone ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                this.desc);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 64
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Checks input for each task type."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input user input of attributes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return array of attributes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException if check fails"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    private String[] checkAndSplitInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (attributes.length \u003c 2 || attributes[0].strip().isEmpty()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    || (!attributes[1].equals(\"true\") \u0026\u0026 !attributes[1].equals(\"false\"))) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(\"Invalid input: \" + input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            if (attributes.length \u003c 3 || attributes[0].strip().isEmpty()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    || (!attributes[1].equals(\"true\") \u0026\u0026 !attributes[1].equals(\"false\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                    || attributes[2].strip().isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "                throw new DukeException(\"Invalid input: \" + input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return attributes;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns String output of tasks in format to save in file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param task Task to output string"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return String of format [Type] | [Desc] | [isDone] | [other attribute]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If unknown type"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    String taskToString(Task task) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Todo todo \u003d (Todo) task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s | %s | %b\\n\", this, todo.getDesc(), todo.isDone());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s | %s | %b | %s\\n\", this, deadline.getDesc(), deadline.isDone(), deadline.getBy());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return String.format(\"%s | %s | %b | %s\\n\", this, event.getDesc(), event.isDone(), event.getAt());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns created task from String input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param input attributes from user input of format [Desc] | [isDone] | [other attribute]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Created task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @throws DukeException If input check fails"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Task stringToTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        String[] attributes \u003d checkAndSplitInput(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return new Todo(attributes[0], Boolean.parseBoolean(attributes[1]));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return new Deadline(attributes[0], Boolean.parseBoolean(attributes[1]), attributes[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            return new Event(attributes[0], Boolean.parseBoolean(attributes[1]), attributes[2]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shiweing"
        },
        "content": "            throw new DukeException(\"Unknown type: \" + this);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 78
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": " * Represent a todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Another constructor for Todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @param isDone Task completion."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * Returns TaskType.TODO."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     * @return Type TODO."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return TaskType.TODO;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shiweing"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shiweing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shiweing": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "deadline borrow book /by Sunday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shiweing"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shiweing"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shiweing"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shiweing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shiweing": 28
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shiweing"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shiweing"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shiweing"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shiweing"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shiweing"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shiweing"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shiweing"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shiweing"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shiweing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shiweing"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shiweing"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shiweing": 21
    }
  }
]
