[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "D | 0 |  return book  | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "E | 1 |  project meeting  | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/YYYY HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] dateAndTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int dayOfMonth \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        localDateTime \u003d LocalDateTime.of(year, month, dayOfMonth, hour, min);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return String.format(\"[D][%s] %s(by: %s)\", getStatusIcon(), description, localDateTime.format(dateTimeFormat));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        openFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        readUserInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static void readUserInput() throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String error \u003d \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        boolean isTheEnd \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        while (!isTheEnd) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String[] taskDetails \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (taskType.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        System.out.println(\"\" + i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (taskType.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (taskDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IncompleteCommandException(error);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    } else if (Integer.parseInt(taskDetails[1]) \u003e tasks.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IndexOffBoundException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(taskDetails[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    tasks.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(taskIndex));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (taskDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IncompleteCommandException(error);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    String[] msg \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    tasks.add(new Deadline(msg[0].trim().substring(8), msg[1].trim()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    printTaskAdded();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (taskDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IncompleteCommandException(error);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    String[] msg \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    tasks.add(new Event(msg[0].trim().substring(5), msg[1].trim()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    printTaskAdded();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (taskDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IncompleteCommandException(error);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    String toDo \u003d input.substring(5);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    tasks.add(new ToDo(toDo));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    printTaskAdded();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    isTheEnd \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (taskDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IncompleteCommandException(error);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    if (Integer.parseInt(taskDetails[1]) \u003e tasks.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        throw new IndexOffBoundException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    int second \u003d Integer.parseInt(taskDetails[1]) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasks.get(second)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                            + \"\\nNow you have \" + (tasks.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    tasks.remove(second);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } catch (Exception err) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                System.out.println(err);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        updateFile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static void openFile() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            sc \u003d new Scanner(new File(\"C:\\\\Users\\\\zhenh\\\\cs2103T\\\\duke\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            readFile();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"could not find file\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static void readFile() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String[] taskDetails \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String taskType \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            boolean isDone \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (taskDetails[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task toDoTask \u003d new ToDo(taskDetails[2].trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    toDoTask.markAsDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(toDoTask);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task deadlineTask \u003d new Deadline(taskDetails[2], taskDetails[3].trim());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task eventTask \u003d new Event(taskDetails[2], taskDetails[3].trim());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                System.out.println(\"invalid format of data input\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static void updateFile() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"C:\\\\Users\\\\zhenh\\\\cs2103T\\\\duke\\\\data\\\\duke.txt\", false);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String taskFormat;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String done;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                done \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"T | %s | %s\", done, task.getDescription());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"D | %s | %s | %s\", done, task.getDescription(), ((Deadline) task).getDateTime());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"E | %s | %s | %s\", done, task.getDescription(), ((Event) task).getDateTime());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"file not found\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private static void printTaskAdded() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + tasks.get(tasks.size() - 1)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "oscarsu97": 181
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/YYYY HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] dateAndTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int dayOfMonth \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        localDateTime \u003d LocalDateTime.of(year, month, dayOfMonth, hour, min);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return String.format(\"[D][%s] %s(at: %s)\", getStatusIcon(), description, localDateTime.format(dateTimeFormat));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 26
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class IncompleteCommandException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String msg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public IncompleteCommandException(String msg){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 12
    }
  },
  {
    "path": "src/main/java/IndexOffBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class IndexOffBoundException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + \"please enter a valid index\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 7
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String msg;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public InvalidCommandException(String msg){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 38
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 11
    }
  },
  {
    "path": "textUITestingTutorial/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if not exist Duke\\bin mkdir Duke\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   javac  -cp Duke\\src -Xlint:none -d Duke\\bin Duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   java -classpath Duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ ! -d \"Duke/bin\" ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       mkdir Duke/bin"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "\t"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if ! javac -cp Duke/src -Xlint:none -d Duke/bin Duke/src/main/java/Duke.java"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   java -classpath Duke/bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   else"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 59
    }
  }
]
