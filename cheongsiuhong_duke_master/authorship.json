[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TASK_LOAD_ERR \u003d \"Error loading files, starting a new list...\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final int NUMBER_TASKS \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private boolean running;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        running \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            tasks \u003d new TaskList(NUMBER_TASKS, storage.read());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.sayError(TASK_LOAD_ERR);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            tasks \u003d new TaskList(NUMBER_TASKS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            input \u003d ui.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                command.execute(storage, ui, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                if(command.isExit())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                ui.sayError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.running \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Duke duke \u003d new Duke(FILE_PATH);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 57
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String EMPTY_TODO_STRING \u003d \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String EMPTY_EVENT_STRING \u003d \"The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String EMPTY_DEADLINE_STRING \u003d \"The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String UNKNOWN_COMMAND_STRING \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        String[] args \u003d input.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return create(input, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static Command create(String input, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numArgs \u003d args.length;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        switch(args[0]) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return ByeCommand.create(input, args);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return ListCommand.create(input, args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return DoneCommand.create(input, args);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return DeleteCommand.create(input, args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                if (numArgs \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    throw new DukeException(EMPTY_TODO_STRING);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return new AddCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                if (numArgs \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    throw new DukeException(EMPTY_EVENT_STRING);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return new AddCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                if (numArgs \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    throw new DukeException(EMPTY_DEADLINE_STRING);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                return new AddCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                throw new DukeException(UNKNOWN_COMMAND_STRING);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 46
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String path_string;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public Storage(String path_string) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.path_string \u003d path_string;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public ArrayList\u003cString\u003e read() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        File f \u003d new File(path_string);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            input.add(sc.nextLine());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void write(ArrayList\u003cString\u003e formatStrings) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Path path \u003d Paths.get(path_string);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Files.write(path, formatStrings);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String LINE_BREAK \u003d \"______________________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String HELLO_STRING \u003d \"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String BYE_STRING \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String ERROR_PREPEND \u003d \"☹ OOPS!!!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        say(HELLO_STRING);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        say(BYE_STRING);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void sayError(String sequence) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        say(String.format(\"%s %s\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                ERROR_PREPEND,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                sequence));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void say(String sequence) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        String indented \u003d sequence.replaceAll(\"(?m)^\", \"\\t\\t\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                \"\\t%s\\n%s\\n\\t%s\\n\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                LINE_BREAK,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                indented,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                LINE_BREAK"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.scanner.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String AT_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String BY_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String ADDED_TASK_STRING \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void execute(Storage storage, Ui ui, TaskList tasklist) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        String[] args \u003d input.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            switch (args[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                case TODO_COMMAND:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    newTask \u003d new TodoTask("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            input.split(TODO_COMMAND)[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    String[] eventArgs \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            input.split(EVENT_COMMAND)[1]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                                    .split(AT_DELIMITER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    newTask \u003d new EventTask("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            eventArgs[0], eventArgs[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    String[] deadlineArgs \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            input.split(DEADLINE_COMMAND)[1]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                                    .split(BY_DELIMITER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    newTask \u003d new DeadlineTask("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            deadlineArgs[0],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            DATE_FORMAT.parse(deadlineArgs[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            tasklist.addTask(newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.say("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    String.format(\"%s\\n\\t%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            ADDED_TASK_STRING, newTask, tasklist.numTasks())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            storage.write(tasklist.getFormattedStrings());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 66
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TOO_MANY_ARGUMENTS \u003d \"The bye command takes no arguments.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static ByeCommand create(String input, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numArgs \u003d args.length;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        if (numArgs \u003e 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(TOO_MANY_ARGUMENTS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return new ByeCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private ByeCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void execute(Storage s, Ui ui, TaskList tasklist) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public abstract void execute(Storage storage, Ui ui, TaskList tasklist) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String DELETE_TASK_STRING \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TOO_MANY_ARGUMENTS \u003d \"The delete command needs only one argument.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String WRONG_ARGUMENTS \u003d \"The delete command needs an integer argument.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String WRONG_INDEX \u003d \"There is no task with index: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String[] args;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static DeleteCommand create(String input, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numArgs \u003d args.length;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        if (numArgs \u003e 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(TOO_MANY_ARGUMENTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } else if (numArgs \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(WRONG_ARGUMENTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            return new DeleteCommand(args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private DeleteCommand(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void execute(Storage storage, Ui ui, TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numTasks \u003d tasklist.numTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            index \u003d Integer.parseInt(args[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            if (index \u003e numTasks || index \u003c 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        String.format(\"%s%d\", WRONG_INDEX, index)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            task \u003d tasklist.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            tasklist.deleteTask(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            String message \u003d String.format(\"%s\\n\\t%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    DELETE_TASK_STRING, task, tasklist.numTasks());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.say(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            storage.write(tasklist.getFormattedStrings());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.sayError(WRONG_ARGUMENTS);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 60
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String DONE_TASK_STRING \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TOO_MANY_ARGUMENTS \u003d \"The done command needs only one argument.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String WRONG_ARGUMENTS \u003d \"The done command needs an integer argument.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String WRONG_INDEX \u003d \"There is no task with index: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String ALREADY_DONE \u003d \"This task is already done.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String[] args;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static DoneCommand create(String input, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numArgs \u003d args.length;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        if (numArgs \u003e 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(TOO_MANY_ARGUMENTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } else if (numArgs \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(WRONG_ARGUMENTS);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            return new DoneCommand(args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private DoneCommand(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void execute(Storage storage, Ui ui, TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numTasks \u003d tasklist.numTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            index \u003d Integer.parseInt(args[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            if (index \u003e numTasks || index \u003c 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        String.format(\"%s%d\", WRONG_INDEX, index)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            task \u003d tasklist.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                throw new DukeException(ALREADY_DONE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            tasklist.markDone(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            String message \u003d String.format(\"%s\\n\\t%s\", DONE_TASK_STRING, task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.say(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            storage.write(tasklist.getFormattedStrings());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            ui.sayError(WRONG_ARGUMENTS);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 62
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String TOO_MANY_ARGUMENTS \u003d \"☹ OOPS!!! The list command takes no arguments.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public static ListCommand create(String input, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int numArgs \u003d args.length;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        if (numArgs \u003e 1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            throw new DukeException(TOO_MANY_ARGUMENTS);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private ListCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void execute(Storage storage, Ui ui, TaskList tasklist) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ui.say(tasklist.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 29
    }
  },
  {
    "path": "src/main/java/duke/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public DeadlineTask(String description, Date dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format(\"[D]%s(at: %s)\", super.toString(), DATE_FORMAT.format(dateTime));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                \"D|%s|%s\", super.formatString(), DATE_FORMAT.format(dateTime));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 28
    }
  },
  {
    "path": "src/main/java/duke/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String location;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public EventTask(String description, String location) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format(\"[E]%s(at:%s)\", super.toString(), location);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                \"E|%s|%s\", super.formatString(), location);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format(\"[%s]%s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                \"%d|%s\", isDone ? 1 : 0, description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public  TaskList(int num) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(num);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public TaskList(int num, ArrayList\u003cString\u003e storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(num);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        for (String s : storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                String[] args \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                switch (args[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        Task todo \u003d new TodoTask(args[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        if (args[1].equals(\"1\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            todo.markDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        Task event \u003d new EventTask(args[2], args[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        if (args[1].equals(\"1\"))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            event.markDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        Task deadline \u003d new DeadlineTask(args[2],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                                DATE_FORMAT.parse(args[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        if (args[1].equals(\"1\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            deadline.markDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            } catch(ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                this.tasks \u003d new ArrayList\u003c\u003e(num);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public int numTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        Task doneTask \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        doneTask.markDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        if(size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            return \"Empty list: no tasks added\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            StringBuilder listOfTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            for(Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                if(index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    listOfTasks.append("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            String.format(\"%d.%s\", index, task));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    listOfTasks.append("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                            String.format(\"\\n%d.%s\", index, task));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            return listOfTasks.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public ArrayList\u003cString\u003e getFormattedStrings() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        ArrayList\u003cString\u003e al \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "            al.add(task.formatString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return al;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 102
    }
  },
  {
    "path": "src/main/java/duke/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "                \"T|%s\", super.formatString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 19
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tHello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[T][✘] one two"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[E][✘] three four (at: five six)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t1.[T][✘] one two"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t2.[E][✘] three four (at: five six)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t3.[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[T][✓] one two"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[E][✓] three four (at: five six)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t1.[T][✓] one two"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t2.[E][✓] three four (at: five six)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t3.[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 40
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tHello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[T][✘] one two"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[E][✘] three four (at: five six)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t1.[T][✘] one two"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t2.[E][✘] three four (at: five six)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t3.[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[T][✓] one two"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t\t[E][✓] three four (at: five six)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t1.[T][✓] one two"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t2.[E][✓] three four (at: five six)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\t3.[D][✘] seven eight (at: nine ten)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "todo one two"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "event three four /at five six"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "deadline seven eight /by nine ten"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "if [ -e \"./ACTUAL.txt\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    rm ACTUAL.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "java -classpath ../bin duke.Main \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "diff ACTUAL.txt EXPECTED.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheongsiuhong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "cheongsiuhong": 34
    }
  }
]
