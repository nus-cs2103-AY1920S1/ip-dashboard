[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "SakshiPradyumn": 16
    }
  },
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "T | 0 | p"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 1
    }
  },
  {
    "path": "src/main/java/ChatLike.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class ChatLike {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void getResponseDirect() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void readFromFile(String str) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String arr[] \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        int taskInfo \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskDescr \u003d arr[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"D\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \" /by \" + arr[3];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"E\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"event\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \" /at \" + arr[3];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.add(tasksType + \" \" + taskDescr + tasksTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException exc) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(exc.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (taskInfo \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.done(taskList.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String genInfoForFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Convert details of Task object into a String which will be stored in the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String currTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (task.getTimeLabel().equals(\"\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                currTask \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                currTask \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription() + \" | \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        + task.getTimeLabel();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d currTask + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d currTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return taskData;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private static String getTimeFormat(int n) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"st of\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"nd of\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"rd of\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th of\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void add(String s) throws DukeException{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String[] arrWords \u003d s.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arrWords[0]; //Type of Task: ToDo, Event, Deadline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksDescr \u003d \"\"; //Description of the task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\"; //Time the task is associated with (not for ToDo)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for(int i \u003d 1; i \u003c arrWords.length; i++){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if(arrWords[i].length() \u003e\u003d 1 \u0026\u0026 arrWords[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                for(int k \u003d i + 1; k \u003c arrWords.length; k++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    tasksTime +\u003d \" \" + arrWords[k]; //Stores time of the task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksDescr +\u003d \" \" + arrWords[i];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksDescr \u003d tasksDescr.trim(); //Remove extra spaces"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!(tasksType.equals(\"todo\") || tasksType.equals(\"deadline\") || tasksType.equals(\"event\"))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksDescr.equals(\"\")) throw new DukeException("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\u2639\" +\" OOPS!!! The description of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if ((tasksType.equals(\"deadline\") || tasksType.equals(\"event\")) \u0026\u0026 tasksTime.equals(\"\"))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\u2639\" + \" OOPS!!! The time of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\").parse(tasksTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            SimpleDateFormat fmtr \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d fmtr.format(date);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String arr[] \u003d tasksTime.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            arr[0] \u003d getTimeFormat(Integer.valueOf(arr[0]));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            arr[arr.length - 1] \u003d arr[arr.length - 1].toLowerCase();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for(int i \u003d 0; i \u003c arr.length; i++){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task; //To be added in the taskList"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Got it. I\u0027ve added this task:\\n       \" + task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void byeUser() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void greet() { //Default starting for Duke"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"     What can I do for you?\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void list() { //Shows the list of events"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskListed \u003d \"Here are the tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskListed +\u003d (i + 1) + \".\" + taskList.get(i) ;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d this.taskList.size() - 1)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskListed +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d taskListed;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void done(int n) throws DukeException{ //Marks a task to be completed by calling method of Task object"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if(n \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but you do not have so many tasks :-(\" +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList.get(n - 1).mark();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Nice! I\u0027ve marked this task as done:\\n       \" + this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void delete(int n) throws DukeException{ //Deletes a task by calling method of Task object"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if(n \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but you do not have a task at that position to delete :-(\" +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task taskToBeDel \u003d this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList.remove(taskToBeDel); //Deletes the task from taskList"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Noted. I\u0027ve removed this task:\\n       \" + taskToBeDel +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\"; //Shows truncated list"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"    ____________________________________________________________\\n     \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + this.response"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 205
    }
  },
  {
    "path": "src/main/java/Check.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Check {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Scanner S \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String listOfAct[] \u003d new String[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            while(!(inp.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if(inp.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    for (int j \u003d 0; j \u003c i; j++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(\"     \" + (j + 1) + \". \" + listOfAct[j]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"     added: \" + inp + \"\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfAct[i++] \u003d inp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 41
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents a task of the type Deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String timeOfDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Deadline task denoted as \u0027D\u0027."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param time time of the task by which it needs to be completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Deadline(String s, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(s); //Call to Parent Class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.timeOfDeadline \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a String containing details of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[D]\" + this.getStatusIcon() + this.description + \" (by: \" + this.timeOfDeadline + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 29
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * An example of a custom control using FXML library."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the Duke\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * containing text from the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right for aesthetic."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Storage storage \u003d new Storage(\"src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of Duke with a path to list of tasks file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * New Ui instance is created for Gradle."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Loads data from the file and the tasks are stored into a TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Exception is reported, if file is not found or empty."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates new instance of Parser and run parse method to read user input and then give reply."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Catches and reports DukeExceptions."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getResponseDirect(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Parser parser \u003d new Parser(storage, tasks, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return parser.parse(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Works as the exception thrown in wrong inputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Generates an exception with custom message to be shown from the method it is being called."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param message Stores message to be printed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents a task of the type Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    //private String timeOfEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s stores the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param time stores the time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Event(String s, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(s, time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //this.timeOfEvent \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    //private String timeOfEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //this.timeOfEvent \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with details of the Event task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a String with details of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[E]\" + this.getStatusIcon() + this.getDescription() + \" (at: \" + this.getTimeLabel() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 34
    }
  },
  {
    "path": "src/main/java/Help.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Help {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Help() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    static void helpFile() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"/n _______________________________________________\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"Use following functions:\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"/n _______________________________________________\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"todo \u003ctask\u003e \u003d\u003e for an unscheduled event\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"/n _______________________________________________\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"deadline \u003ctask\u003e \u003ctime\u003e \u003d\u003e for an event to be done by particular time\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"/n _______________________________________________\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"event \u003ctask\u003e \u003ctime\u003e \u003d\u003e for a scheduled event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"/n _______________________________________________\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"find \u003ckeyword\u003e \u003d\u003e finds a keyword in the list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 18
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Sets duke to a Duke object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param d Duke object to be set."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * the dialog container. Clears the user input after processing. Closes the window if exit command is inputted."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String response \u003d duke.getResponseDirect(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Deals with reading and making sense of the user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new parser instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param storage Storage instance to be used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList TaskList containing task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param ui Ui instance to be used."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Parser(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Reads user input as commands, deciphers commands and carries out the commands correspondingly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Instructs Ui to return different messages to interact with users."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param command user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String to be displayed as reply to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException self-defined exceptions caused by illegal input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Read user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return ui.exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return ui.list(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (command.length() \u003e 5 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (command.charAt(4) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    Task task \u003d taskList.add(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    return ui.add(task, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    Task task \u003d taskList.done(Integer.parseInt(command.substring(5)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    String response \u003d ui.done(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    storage.writeOnFile(taskList.generateInfo());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    return response;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (command.length() \u003e 7 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return getString(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (command.length() \u003e 5 \u0026\u0026 command.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (command.charAt(4) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    Task task \u003d taskList.add(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    return ui.add(task, taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    String response \u003d ui.find(taskList, command.substring(5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    storage.writeOnFile(taskList.generateInfo());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    return response;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"help\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                Help.helpFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                Task task \u003d taskList.add(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                String response \u003d ui.add(task, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                storage.writeOnFile(taskList.generateInfo());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String getString(String command) throws DukeException, IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (command.charAt(6) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d taskList.add(command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return ui.add(task, taskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d taskList.delete(Integer.parseInt(command.substring(7)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String response \u003d ui.delete(task, taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            storage.writeOnFile(taskList.generateInfo());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 89
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Deals with loading tasksList from the file and saving tasksList in the file after change."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String fPath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new Storage instance with a file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param fPath Stores the path of the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Storage(String fPath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.fPath \u003d fPath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new FileWriter object for the file path to write on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param ftext Stores the text to be written on the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws IOException Exception produced if some failure."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void writeOnFile(String ftext) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        FileWriter fwrit \u003d new FileWriter(fPath); //Creates a FileWriter object for the given file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        fwrit.write(ftext);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        fwrit.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Loads file from the file path and converts instances into \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return list of tasksList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws FileNotFoundException Exception produced if file not found."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException in case of empty file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        File file \u003d new File(fPath); // create a File for the given file path"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Scanner sc \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!sc.hasNext())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"Your task list is currently empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String arr[] \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int tasksInfo \u003d Integer.valueOf(arr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksDescr \u003d arr[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            checkTaskAndMark(arr, tasksType, tasksInfo, tasksDescr);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private void checkTaskAndMark(String[] arr, String tasksType, int tasksInfo, String tasksDescr) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksList.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assert tasksType \u003d\u003d \"T\": \"It should be T here\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task.mark();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"D\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d arr[3];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksList.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assert tasksType \u003d\u003d \"D\": \"It should be D here\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task.mark();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"E\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d arr[3];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksList.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assert tasksType \u003d\u003d \"E\": \"It should be E here\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task.mark();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 92
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents the Task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String timeLabel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String wordLabel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates the new instance of Task with timeLabel parameter as well."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param timeLabel Stores the time value for specific types of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task(String description, String timeLabel) { //Requires both type of parameterised constructors"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.timeLabel \u003d timeLabel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the label of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the letter of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return wordLabel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the time of the task, when applicable."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the time of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getTimeLabel() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (this.timeLabel !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return timeLabel;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the status if the task is done or not."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return 0, 1 status of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public int getInfo() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Updates the status of the task by marking if the task is done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!isDone)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    } //update status of task if completed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a string representing tick or X symbols for done/not done task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String of tick or X."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 88
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Specifications for Task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of TaskList with empty new arrayList of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of TaskList with input arrayList of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the number of tasks in the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return size of task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns ith Task element from the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param i index of Task in the list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return Task at index i of the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task getElement(int i) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Converts time to particular format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n number as integers."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing ordinal number nth."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private static String getTimeFormat(int n) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return n + \"st of\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return n + \"nd of\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return n + \"rd of\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                return n + \"th of\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Converts command of users into Task objects with relevant details."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s String used by user for creating a new task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a Task object with input details"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException Exception thrown when input is of invalid format."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task add(String s) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String[] arr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksDescr \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Get task description"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (arr[i].length() \u003e\u003d 1 \u0026\u0026 arr[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                // Get task time"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                for (int j \u003d i + 1; j \u003c arr.length; j++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    tasksTime +\u003d \" \" + arr[j];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksDescr +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksDescr \u003d tasksDescr.trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Handle exceptions"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!(tasksType.equals(\"todo\") || tasksType.equals(\"deadline\") || tasksType.equals(\"event\"))) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksDescr.equals(\"\")) throw new DukeException("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"\\u2639 OOPS!!! The description of a \" + tasksType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if ((tasksType.equals(\"deadline\") || tasksType.equals(\"event\")) \u0026\u0026 tasksTime.equals(\"\"))"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639 OOPS!!! The time of a \" + tasksType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Converts into required date format."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\").parse(tasksTime);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d formatter.format(date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String[] array \u003d tasksTime.split(\" \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            array[0] \u003d getTimeFormat(Integer.valueOf(array[0]));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            array[array.length - 1] \u003d array[array.length - 1].toLowerCase();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for (int i \u003d 0; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime +\u003d \" \" + array[i];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Creates new task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Marks the nth task in the task list as done."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n the position of task in the list of tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the task marked as done."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task done(int n) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task \u003d this.tasks.get(n - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        task.mark();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Deletes nth task from the list of tasks."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n the position of task in the list of tasks."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the task deleted from the list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task delete(int n) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task \u003d this.tasks.get(n - 1);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Converts task into a String format to be stored in the data file."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a String representation to be stored in the task list file."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String generateInfo() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskFile \u003d \"\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        taskFile \u003d getTimeRefact(taskFile);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return taskFile;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String getTimeRefact(String taskFile) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String current;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (task.getTimeLabel().equals(\"\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                current \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                current \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        + \" | \" + task.getTimeLabel();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskFile +\u003d current + System.lineSeparator();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskFile +\u003d current;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return taskFile;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 207
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents of the task-type ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of ToDo with label \u0027T\u0027."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.wordLabel \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with the details of the ToDo task in a String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representation of the task ToDo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[T]\" + this.getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Deals with interactions with the user in the window."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *Prints out the response to be displayed to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String getResponseDirect() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when user adds a new task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task task added by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param tasks the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String add(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //update response"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Got it. I\u0027ve added this task:\\n       \" + task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response showing a list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param tasks the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String list(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Get the list of tasks in the Arraylist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String listOfTasks \u003d \"Here are the tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assert listOfTasks \u003d\u003d \"Here are the tasks in your list:\\n     \" : \"Oops\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            listOfTasks +\u003d (i + 1) + \".\" + tasks.getElement(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d tasks.getSize() - 1) listOfTasks +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Update response"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d listOfTasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when user exits the application."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //update response"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when the user marks a task in the list as done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task task done by user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String done(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Update response"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Nice! I\u0027ve marked this task as done:\\n       \" + task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Displays the response when the user deletes a task from the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task task to be deleted."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String delete(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Update response"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Noted. I\u0027ve removed this task: \\n       \" + task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Finds a task in the list of tasks which contains a keyword as part of its description."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList a \u003ccode\u003eTaskList\u003c/code\u003e instance containing a list of tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param key   the keyword to be compared against each task description."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException Exceptions thrown when there are more than/ less than one keyword specified."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representing the response."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String find(TaskList taskList, String key) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (key.split(\" \").length \u003e 1 || key.equals(\" \")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please include at most/ at least one keyword.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Get the list of tasks in the tasks list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String listOfTasks \u003d \"Here are the matching tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String[] words \u003d taskList.getElement(i).getDescription().split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            boolean containsKey \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for (int j \u003d 0; j \u003c words.length; j++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (key.equalsIgnoreCase(words[j])) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    containsKey \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (containsKey) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfTasks +\u003d (i + 1) + \".\" + taskList.getElement(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfTasks +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Update response"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        updateResponse(listOfTasks, isFound);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return getResponseDirect();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private void updateResponse(String listOfTasks, boolean isFound) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int index \u003d listOfTasks.lastIndexOf(\"\\n     \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (index \u003e 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfTasks \u003d listOfTasks.substring(0, index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.response \u003d listOfTasks;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.response \u003d \"\\u2639 OOPS!!! There is no matching tasks in your list.\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 131
    }
  },
  {
    "path": "src/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 16
    }
  },
  {
    "path": "src/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void add_userTaskInput_success() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2718] check1\", new TaskList().add(\"todo check1\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[D][\\u2718] check2 (by: 25th of September 2019, 09:00 am)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList().add(\"deadline check2 /by 25/9/2019 0900\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2718] check3 (at: today)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList().add(\"event check3 /at today\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /*@org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void add_userTaskInput_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"task check1 /by 25/9/2019 0900\").toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"event\").toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! The description of a event cannot be empty.\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"deadline check2\").toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! The time of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void done_integerInput_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2713] check1 (at: today)\", new TaskList(List.of(new Event(\"check1\", \"today\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new Deadline(\"check2\", \"tomorrow\"), new ToDo(\"check3\"))).done(1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2713] check3\", new TaskList(List.of(new Event(\"check1\", \"today\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new Deadline(\"check2\", \"tomorrow\"), new ToDo(\"check3\"))).done(3).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void delete_integerInput_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Event(\"check1\", \"tomorrow\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Deadline(\"check2\", \"tomorrow\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new ToDo(\"check3\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2718] check1 (at: tomorrow)\", new TaskList(ls).delete(1).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2718] check3\", new TaskList(ls).delete(2).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void genInfo() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Event(\"testing\", \"tomorrow\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Deadline(\"testing2\", \"tomorrow\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new ToDo(\"testing3\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"E | 0 | testing | tomorrow\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"D | 0 | testing2 | tomorrow\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"T | 0 | testing3\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList(ls).genInfo());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 75
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetLabel() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"T\", new ToDo(\"check\").getLabel());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"D\", new Deadline(\"check\", \"today\").getLabel());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"E\", new Event(\"check\", \"today\").getLabel());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetTimeLabel() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"\", new ToDo(\"check\").getTimeLabel());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"today\", new Deadline(\"check\", \"today\").getTimeLabel());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"day after\", new Event(\"check\", \"day after\").getTimeLabel());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "         */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetInfo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(0, new Deadline(\"check\", \"today\").getInfo());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(1, newDead.getInfo());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new ToDo(\"check\").getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new Deadline(\"check\", \"day after\").getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new Event(\"check\", \"tomorrow\").getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingMark() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(0, newDead.getInfo());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(1, newDead.getInfo());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[\\u2718] \", new Deadline(\"check\", \"today\").getStatusIcon());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[\\u2713] \", newDead.getStatusIcon());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingToString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[T][\\u2718] check\", new ToDo(\"check\").toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[D][\\u2718] check (by: today)\", new Deadline(\"check\", \"today\").toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[E][\\u2718] check (at: today)\", new Event(\"check\", \"today\").toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 59
    }
  }
]
