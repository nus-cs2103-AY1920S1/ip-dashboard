[
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Exceute the bye command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Bye Constructor with command string input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the bye command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"      Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Bye command means exit. return true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return return true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 36
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Command constructor using string user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Command (String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Execute the command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 30
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Deadline task of Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Deadline constructor with description and by as string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param by deadline date. Has to be in the format \"DD/MM/YYYY 24hour\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 25
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Deadline command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Deadline constructor with string command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Deadline command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String[] deadlinetask \u003d command.split(\"deadline \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String deadlineString \u003d deadlinetask[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String[] deadlinearr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String[] date \u003d deadlinearr[1].split(\"/\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String[] tm \u003d date[2].split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int day \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int year \u003d Integer.parseInt(tm[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String time \u003d tm[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            time t \u003d new time(day, month, year, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlinearr[0], t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            task.addTask(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(\"       \" + deadline.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int checkdone \u003d deadline.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                storage.appendToFile(checkdone + \"/deadline/\" + deadline.description + \"/\" + deadline.by + System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 56
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Delete command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Delete Command constructor using string user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Delete command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] deletearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int number \u003d Integer.parseInt(deletearr[1]) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Task deletetask \u003d task.getTaskList().get(number);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"       \" + deletetask.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.deleteTask(number);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Now you have \" + task.getCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.DeleteWrite(number);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 42
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute Done command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Done Command constructor using string user input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Done command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String[] donearr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                int x \u003d Integer.parseInt(donearr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                throw new DukeException(\"Done _ must be a number\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (donearr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Which task do you want to complete?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            int no \u003d Integer.parseInt(donearr[1]) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if(task.getCount() \u003c no) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                throw new DukeException(\"SSS\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                Task donetask \u003d task.getTaskList().get(no);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                donetask.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                System.out.println(\"       \" + donetask.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    storage.writeDone(no, donetask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Entry point of Duke application."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Initialises the application and starts the interaction withthe user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Initialises necessary classes and variables"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Read the stored data in the file and executes it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param filePath filepath of stored data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Runs the program until termination."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                Command c \u003d new Parser().parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Main method which runs the program"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        new Duke(\"Tasklist.txt\").run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 62,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Signals an error caused by any data error in Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super((message));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Event task of Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Event constructor with description and at as string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param at refers to location/venue/places"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 22
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute Event command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Event Command constructor using string user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Event command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] eventtask \u003d command.split(\"event \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String eventString \u003d eventtask[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] eventarr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        Event event \u003d new Event(eventarr[0], eventarr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.addTask(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"       \" + event.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int checkdone \u003d event.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.appendToFile(checkdone + \"/event/\" + event.description + \"/\" + event.at+System.lineSeparator() );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 45
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Find command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  Find Command constructor using string user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Find command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task,Ui ui,Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ArrayList\u003cTask\u003e tasklist \u003d task.getTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] strarr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String search \u003d strarr[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        boolean none \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for(int i \u003d 0; i \u003ctasklist.size();i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            Task t \u003d tasklist.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            boolean check \u003d t.getDescription().contains(search);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if(check) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                none \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                System.out.println(\"     \" + (i+1) + \".\" + t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (none) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(\"     Cannot Find any matching task in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 50
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute List command in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *  List Command constructor using string user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user String input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the List command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        for(int i \u003d 0 ;i \u003c task.getCount();i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "             int number \u003d i + 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "             System.out.println(\"     \" + number + \".\" + task.getTaskList().get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 31
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return the command based on string input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Command parse(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ToDoCommand c \u003d new ToDoCommand(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ListCommand c \u003d new ListCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            ByeCommand c \u003d new ByeCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DeadlineCommand c \u003d new DeadlineCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            EventCommand c \u003d new EventCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DoneCommand c \u003d new DoneCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            DeleteCommand c \u003d new DeleteCommand(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            FindCommand c \u003d new FindCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            WrongCommand c \u003d new WrongCommand(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 46
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Represents the file used to store task in duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Storage constructor with filepath of data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param filePath data filepath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Loads the {@code Duke} data from this storage file, and returns it."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return Task data in file. Returns empty task list if file is empty."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException errors when reading file or empty file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException,IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                // example : 0/todo/homework"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                // 1/deadline/homework/2nd of August 2019, 12.35pm"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String line \u003d scan.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                String[] scanned \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                if (scanned[1].equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    ToDo scannedDo \u003d new ToDo(scanned[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if (scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        scannedDo.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedDo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else if (scanned[1].equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    Event scannedEvent \u003d new Event(scanned[2],scanned[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if(scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                        scannedEvent.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedEvent);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                } else if (scanned[1].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    Deadline scannedDeadline \u003d new Deadline(scanned[2],scanned[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    if(scanned[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    scannedDeadline.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                    taskArrayList.add(scannedDeadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        throw new DukeException(\"LOADING ERROR\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Append data to file without modifying original data."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param textToAppend String to be added to file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Change the done status in task file according to the line number specified by user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param LineNumber task number done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task task done"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void writeDone(int LineNumber, Task task) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        File filetobemodified \u003d new File(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filetobemodified));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (number !\u003d LineNumber) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {//replace first character with 1"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d line.replaceFirst(\"0\",\"1\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        writeToFile(filePath,oldContent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void writeToFile(String filePath,String textToAdd)  throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Delete the specified task indicated by user."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param Linenumber task number to be deleted."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void DeleteWrite(int Linenumber) throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        File filetobemodified \u003d new File(filePath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filetobemodified));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            if (number !\u003d Linenumber) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        writeToFile(filePath,oldContent);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 131
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Task of Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Task Constructor with description and at as string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * returns done status. Tick if done and cross if not done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return status icon as string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    //✓u2713"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (isDone ? \"DONE\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * mark the task as done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 42
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Task List stores task information in an array list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * constructor with task list from storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param tasklist from storage class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasklist) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * add task to the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return tasklist.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * delete task in the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param number task number"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        tasklist.remove(number);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 52
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * ToDo task of Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * ToDo constructor with description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param description description of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 18
    }
  },
  {
    "path": "src/main/java/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the ToDo command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * ToDo constructor with string command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public ToDoCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the ToDo command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String[] todotask \u003d command.split(\"todo \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (todotask.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        ToDo newToDoTask \u003d new ToDo(todotask[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        task.addTask(newToDoTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int numberOfTask \u003d task.getCount();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"        \" + newToDoTask.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"     Now you have \" + numberOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int checkdone \u003d newToDoTask.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            String textToAppend \u003d checkdone + \"/todo/\" + newToDoTask.description + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            storage.appendToFile(textToAppend);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 48
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Text Ui of the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private final Scanner input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /** UI interface divider lines* */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private static final String DIVIDER_LINES \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Generates and print the welcome message upon the start of the application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Read user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * show the divider lines"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(DIVIDER_LINES);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * show loading error"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(\"Loading Error. New tasklist will be created\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * shows any error if there is thrown"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 63
    }
  },
  {
    "path": "src/main/java/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Execute the Wrong command in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * WrongCommand constructor with string command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param command user string input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public WrongCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Execute the Wrong command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param task Tasklist data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param ui Ui interfaces and strings"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param storage stored file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @throws DukeException if any of raw values are invalid"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "       throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 31
    }
  },
  {
    "path": "src/main/java/time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " * Date and 24 format of by in deadline task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class time {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * Constructor for time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param day DD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param month MM"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param year YYYY"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param time has to be in 24 hour format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public time (int day, int month, int year, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if(day \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day +\"st\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (day \u003d\u003d 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"nd\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (day \u003d\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"rd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.day \u003d day + \"th\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (month \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"January\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"February\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 3) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"March\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"April\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 5) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"May\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 6) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"June\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 7) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"July\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 8) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"August\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 9) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"September\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 10) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"October\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 11) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"November\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        else if (month \u003d\u003d 12) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            this.month \u003d \"December\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.year \u003d year +\"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        //1800"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.time \u003d convert(time);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * convert the string input of by to the needed format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String convert(String time) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String t \u003d time;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String hour \u003d time.charAt(0) + \"\" + time.charAt(1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String mins \u003d time.charAt(2) + \"\" + time.charAt(3);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        int hourr \u003d Integer.parseInt(hour);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        if (hourr\u003c12) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output \u003d hour + \".\" + mins + \"am\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        } else if (hourr \u003d\u003d 12) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "            output \u003d hour + \".\" + mins + \"pm\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "       else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "           hourr \u003d hourr - 12;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "           output \u003d hourr + \".\" + mins + \"pm\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "       return output;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        String t \u003d this.day + \" of \" + this.month + \" \" + this.year + \", \" + this.time;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 104
    }
  },
  {
    "path": "src/test/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 18
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    void getBy() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assertEquals(\"2nd of December 2019, 6pm\",new Deadline(\"homework\",\"2nd of December 2019, 6pm\").getBy());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assertEquals(\"[D]✘ homework (by: 2nd of December 2019, 6pm)\",new Deadline(\"homework\",\"2nd of December 2019, 6pm\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 16
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assertEquals(1, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 10
    }
  },
  {
    "path": "src/test/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    //✓u2713"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return (isDone ? \"DONE\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 22
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assertEquals(\"\\u2718\" + \" homework\",new Task(\"homework\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    public void testgetStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "        assertEquals(\"\\u2718\",new Task(\"homework\").getStatusIcon());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wongchuankai"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wongchuankai": 21
    }
  }
]
