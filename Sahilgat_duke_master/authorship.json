[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 14
    }
  },
  {
    "path": "src/main/java/DeleteParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DeleteParameterException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DeleteParameterException(String exceptionMsg) { super(exceptionMsg); }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/DoneParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DoneParameterException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DoneParameterException(String exceptionMsg) { super(exceptionMsg); }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "//Test comment"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void introduction() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            Task curr_task \u003d this.tasks.get(i-1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(i + \".\" + curr_task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void done(int task_num) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Task curr_task \u003d this.tasks.get(task_num - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        curr_task.setDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + curr_task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void delete(int task_num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Task curr_task \u003d this.tasks.get(task_num - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"  \" + curr_task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.tasks.remove(task_num - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        duke.introduction();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    duke.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    duke.list();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    String[] splited \u003d command.split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    if (splited[1].matches(\"^[0-9]*[1-9][0-9]*$\") \u0026\u0026 splited.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                        duke.done(Integer.parseInt(splited[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                        throw new DoneParameterException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    if(command.equals(\"todo\") || command.equals(\"todo \")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                        throw new EmptyToDoDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    ToDo curr_task \u003d new ToDo(command.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    duke.add(curr_task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    String[] splited \u003d command.split(\" /by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    splited[0].replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    Deadline curr_task \u003d new Deadline(splited[0], splited[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    duke.add(curr_task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    String[] splited \u003d command.split(\" /at \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    splited[0].replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    Event curr_task \u003d new Event(splited[0], splited[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    duke.add(curr_task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    String[] splited \u003d command.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    if (splited[1].matches(\"^[0-9]*[1-9][0-9]*$\") \u0026\u0026 splited.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                        duke.delete(Integer.parseInt(splited[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                        throw new DeleteParameterException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                    throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(InvalidInputException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(EmptyToDoDescriptionException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(DoneParameterException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        } catch(DeleteParameterException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 95,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public DukeException(String exceptionMsg) { super(exceptionMsg); }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/EmptyToDoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class EmptyToDoDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public EmptyToDoDescriptionException(String exceptionMsg) { super(exceptionMsg); }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 14
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class InvalidInputException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public InvalidInputException(String exceptionMsg) { super(exceptionMsg); }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 3
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.getName();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sahilgat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sahilgat": 11
    }
  }
]
