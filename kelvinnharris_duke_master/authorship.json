[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        String text \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        while (!text.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                String firstWord \u003d text.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    IntStream.rangeClosed(1, list.size()).forEach(x -\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        Task task \u003d list.get(x - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        System.out.println(x + \".\" + task.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    String[] words \u003d text.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        throw new DukeException(\"You need to specify a task that is done.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    if (Integer.parseInt(words[1]) \u003e list.size() || Integer.parseInt(words[1]) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        throw new DukeException(\"Task does not exist.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    Task task \u003d list.get(Integer.parseInt(words[1]) - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    task.setDone(true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    String[] words \u003d text.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        throw new DukeException(\"You need to specify a task that is done.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    if (Integer.parseInt(words[1]) \u003e list.size() || Integer.parseInt(words[1]) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        throw new DukeException(\"Task does not exist.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    Task removed \u003d list.remove(Integer.parseInt(words[1]) -1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"  \" + removed.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Now you have \" + list.size() + \" in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        if (text.split(\" \").length \u003c 2 || text.split(\" \")[1].equals(\"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        task \u003d new ToDo(text.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        if (text.split(\" \").length \u003c 2 || text.split(\" \")[1].equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        String description \u003d text.split(\" \", 2)[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        String by \u003d text.split(\" \", 2)[1].split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        if (text.split(\" \").length \u003c 2 || text.split(\" \")[1].equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        String description \u003d text.split(\" \", 2)[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        String at \u003d text.split(\" \", 2)[1].split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                System.err.println(\"Input must be an integer.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                System.err.println(\"Something is wrong\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "                text \u003d sc.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 91,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public DukeException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(message, cause, enableSuppression, writableStackTrace);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 22
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 35
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinnharris"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinnharris": 11
    }
  }
]
