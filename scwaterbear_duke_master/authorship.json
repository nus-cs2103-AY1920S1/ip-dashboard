[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "test {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "scwaterbear": 45
    }
  },
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | new book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | fun run"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 1 | work"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 3
    }
  },
  {
    "path": "src/main/java/duke/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DateTimeHelper class formats numerical dates and 24-hour time into readable dates and 12-hour time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "class DateTimeHelper {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Days of a month ordinals."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static final String[] ORDINALS \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        \"0th\", \"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\", \"6th\", \"7th\", \"8th\", \"9th\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        \"10th\", \"11th\", \"12th\", \"13th\", \"14th\", \"15th\", \"16th\", \"17th\", \"18th\", \"19th\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        \"20th\", \"21st\", \"22nd\", \"23rd\", \"24th\", \"25th\", \"26th\", \"27th\", \"28th\", \"29th\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        \"30th\", \"31st\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns a readable date and 12-hour time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param dateAndTime numerical date and 24-hour time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String readable date and 12-hour time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws DukeException If invalid date time format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    static String convertDateToString(String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String date \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String time \u003d dateAndTime.split(\" \")[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return parseDate(date) + \", \" + parseTime(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        format.setLenient(false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            format.parse(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"Invalid date format\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String[] ddmmyyyy \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String month \u003d (Month.of(Integer.parseInt(ddmmyyyy[1]))).toString().toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ORDINALS[Integer.parseInt(ddmmyyyy[0])] + \" of \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            + month.substring(0, 1).toUpperCase()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            + month.substring(1)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            + \" \" + ddmmyyyy[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String parseTime(String time) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        System.out.println(time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (!(time.matches(\"([0-1][0-9][0-5][0-9])\") || time.matches(\"(2[0-3][0-5][0-9])\"))) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\"Invalid time format, must be between 0000 and 2359\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        int timeInt \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (timeInt \u003c 100) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt + 1200, \"am\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (timeInt \u003c 1200) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt, \"am\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (timeInt \u003c 1300) { // \u0026\u0026 timeInt \u003e\u003d 1200"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt, \"pm\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else { // \u003e 1300 pm"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return formatTime(timeInt - 1200, \"pm\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private static String formatTime(int timeInt, String ampm) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (timeInt % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return (timeInt / 100) + ampm;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return (timeInt / 100) + \".\" + (timeInt % 100) + ampm;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 83
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.ScrollPane.ScrollBarPolicy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Duke class is the driver class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * References to important objects."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that initializes storage, tasks and ui fields."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        storage \u003d new Storage(\"/Users/stephenchua/duke/src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String dukeText;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            dukeText \u003d ui.showWelcome();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            dukeText \u003d ui.showLoadingError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            dukeText \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String run(String command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assert ui !\u003d null : \"UI cannot be null when program is run\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String fullCommand \u003d ui.readCommand(command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, dialogContainer);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String dukeText \u003d run(userInput.getText());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        );"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 181
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Parser class deals with making sense of the user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Categorizes a broad range of user input to a narrower set of commands."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return Command user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws DukeException If IndexOutOfBoundException has occurred or user input is invalid or unknown."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Todos must have a description\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand(new Todo(fullCommand));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Deadlines must have a description\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String[] arguments \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Deadlines must have exactly one deadline\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    new Deadline("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                            arguments[0].trim(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                            DateTimeHelper.convertDateToString(arguments[1].trim())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Events must have a description\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String[] arguments \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Events must have exactly one time\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new AddCommand("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    new Event("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                            arguments[0].trim(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                            DateTimeHelper.convertDateToString(arguments[1].trim())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.matches(\"delete ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new DeleteCommand(deleteIndex - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.matches(\"done ([1-9]|[1-9][0-9]|100)\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            int displayNumber \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return new DoneCommand(displayNumber - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! You must input a search term\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 101
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param filePath location of file to load and store data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Loads a list of tasks from a file. If no file is present, a new file is created and an empty list is returned."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return List list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws IOException If there has been IOException while reading from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws DukeException If there has been corrupted data in the file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            //read file contents into List"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    String[] lines \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    boolean isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    if (lines[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        isDone \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    if (lines[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Todo(lines[2], isDone));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else if (lines[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Deadline(lines[2], lines[3], isDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else if (lines[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        tasks.add(new Event(lines[2], lines[3], isDone));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                        throw new DukeException(\"Corrupted data in file.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Saves a list of tasks to a file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws IOException If there has been IOException while writing to the file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void saveDataToFile(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //write to a completely new file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            String s \u003d task.toDataFormat();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fw.write(s + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 95
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke welcome message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke welcome message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"Hello! I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns trimmed user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String trimmed user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String readCommand(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return command.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke load file error message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke load file error message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String showLoadingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"Error loading data from file. Creating tasklist from scratch.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke error message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke error message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    String showError(String errorMessage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke farewell message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke farewell message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showFarewell() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke successfully added task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke successfully added task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assert size \u003e\u003d 0 : \"showAddTask should not have a negative size\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        s \u003d appendTask(s, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return appendListSize(s, size);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke successfully deleted task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke successfully deleted task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showDeleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assert size \u003e\u003d 0 : \"showDeleteTask should not have a negative size\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        s \u003d appendTask(s, task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return appendListSize(s, size);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String appendTask(String s, Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return s.concat(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String appendListSize(String s, int size) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assert size \u003e\u003d 0 : \"appendListSize should not have a negative size\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return s.concat(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return s.concat(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns Duke successfully set task as done."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String Duke successfully set task as done."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showDoneTask(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String s \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return appendTask(s, task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns error message stating the task index does not exist."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String error message stating the task index does not exist."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showIndexError(int index) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        assert index \u003e\u003d 0 : \"showIndexError should not have a negative index\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \" ☹ OOPS!!! There is no task number \" + (index + 1) + \"\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns error message that Duke was unable to save to file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String error message that Duke was unable to save to file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showSaveError() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"Unable to write to datafile.\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Prints the task list it is supplied with."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param list task list to print."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String showList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //guard clause"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return \"No tasks found\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        //happy path"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            s \u003d s.concat((i + 1) + \".\" + list.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 153
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * AddCommand class adds a task to the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param task task to add."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (!isSaved(tasks, storage)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showSaveError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ui.showAddTask(task,tasks.getSize());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Command class is an abstract class that other command classes inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Performs action determined in subclass."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Writes changes to task list to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param tasks   list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param storage storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    boolean isSaved(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            storage.saveDataToFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DeleteCommand class deletes a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param index list task identifier."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Task t \u003d tasks.removeTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (!isSaved(tasks, storage)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                return ui.showSaveError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showDeleteTask(t, tasks.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showIndexError(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DoneCommand class sets a task to be done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param index list task identifier."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Executes the done command and persists state to disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param tasks   list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param ui      ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param storage storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Task t \u003d tasks.setIsDone(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            if (!isSaved(tasks, storage)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                return ui.showSaveError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showDoneTask(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return ui.showIndexError(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * ExitCommand class exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ui.showFarewell();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d tasks.getTasksWithKeywords(keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ui.showList(foundTasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * ListCommand class lists user\u0027s tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return ui.showList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 23
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * DukeException class represents errors specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String errorDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param errorDescription description of the error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public DukeException(String errorDescription) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(errorDescription);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.errorDescription \u003d errorDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return errorDescription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Deadline class represents an act a user wants to perform by a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param by          target date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that must set deadline status when instantiated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param by          target date and time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param isDone      set status of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"D\" + super.toDataFormat() + \" | \" + by;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Event class represents a meeting a user wants to attend at a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param at          event date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param at          event date and time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param isDone      status of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"E\" + super.toDataFormat() + \" | \" + at;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Task class represents an act a user wants to perform."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that must set task status when instantiated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param isDone      set status of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns whether self\u0027s description contains the keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param keyword search term."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return boolean whether description contains the search term."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    boolean hasKeywordsInDescription(String keyword) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns a string representation of the task status and description."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String task status and description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns a string representation of the task status and description for data storage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return String task status and description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        int isDoneInt;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDoneInt \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            isDoneInt \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \" | \" + isDoneInt + \" | \" + description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 72
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * TaskList class manages the task list and has operations to add/delete/modify tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * List of tasks for the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that allocates new list of initial capacity 100."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that loads existing tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns a list of tasks which descriptions match the keyword."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param keyword the search term."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return List Found tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public List\u003cTask\u003e getTasksWithKeywords(String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks.stream().filter(x -\u003e x.hasKeywordsInDescription(keyword)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param t task to add."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Modifies task status to done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param index task identifier."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return Task the task marked as done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws IndexOutOfBoundsException If there is no such index in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Task setIsDone(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return tasks.get(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Removes the specified task from the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param index task identifier."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return Task the task removed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @throws IndexOutOfBoundsException If there is no such index in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Task removeTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            return tasks.remove(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns all tasks in the task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return List list of all tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @return int size of task list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 96
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * Todo class represents an act a user wants to perform at an unspecified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " * @author scwaterbear"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * Class constructor that must set todo status when instantiated."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param description description of todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * @param isDone      set status of todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        return \"T\" + super.toDataFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 44
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 19
    }
  },
  {
    "path": "src/test/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 0 | read interesting stuff"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "T | 0 | build some cool things"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 2
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void load_hasExistingFile_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            Storage storage \u003d new Storage(\"/Users/stephenchua/duke/src/test/data/test.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            List\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            expected.add(new Todo(\"read interesting stuff\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            expected.add(new Todo(\"build some cool things\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            for (int i \u003d 0; i \u003c expected.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "                assertEquals(expected.get(i).toString(), storage.load().get(i).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    //test create a new file if there is no file at that location"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void load_noExistingFile_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        String filePath \u003d \"/Users/stephenchua/duke/src/test/data/nonexistentfile.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            storage.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            assertTrue(f.exists() \u0026\u0026 !f.isDirectory());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            f.delete();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 48
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    public void setIsDone_emptyArrayList_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        int testIndex \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            tasks.setIsDone(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "            assertEquals(\" ☹ OOPS!!! There is no task number \" + (testIndex + 1), e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "scwaterbear"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "scwaterbear": 23
    }
  }
]
