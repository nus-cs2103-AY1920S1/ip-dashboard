[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 28,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Main class duke to start the programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Duke with empty constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        storage \u003d new Storage(\"./src/main/java/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            tasks \u003d storage.readFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Gets response from the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void start (Stage start) {}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weikiat97": 44,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent all the exceptions met by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructs a Duke exception with the message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param message message to print to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 16
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weikiat97": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            TimerTask exitGUI \u003d new TimerTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            };"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            timer.schedule(exitGUI, 1000);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 63
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to parse the input by the user into a command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Takes in the full string and processes the string into a command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param fullCommand input by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return Command to be executed later."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws DukeException if the command is unknown."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        String[] myArray \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        String command \u003d myArray[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        ArrayList\u003cString\u003e returnCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(myArray[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new NumberFormatException(\"Error! Please enter a valid integer!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                int taskNumber2 \u003d Integer.parseInt(myArray[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return new DeleteCommand(taskNumber2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new NumberFormatException(\"Error! Please enter a valid integer!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            returnCommand \u003d getTask(myArray, \"/at\", false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return new AddCommand(new Event(returnCommand.get(0), returnCommand.get(1), returnCommand.get(2)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            returnCommand \u003d getTask(myArray, \"/by\", false );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return new AddCommand(new Deadline(returnCommand.get(0), returnCommand.get(1)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            returnCommand \u003d getTask(myArray, \"any word\", true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return new AddCommand(new ToDo(returnCommand.get(0)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"postpone\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                int taskNumber3 \u003d Integer.parseInt(myArray[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                returnCommand \u003d postponeTask(myArray);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return new PostponeCommand(taskNumber3, returnCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new NumberFormatException(\"Error! Please enter a valid integer!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                String keyword \u003d myArray[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new DukeException(\"The keyword must not be empty! Try again!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            throw new DukeException(\"Invalid command! Please use one of the following commands:\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    \"list, delete, find, todo, deadline, event, bye\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Handles the parsing for postponing of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param inputCommand commands from the user in String[] format"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return an array list of the start time and end time."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private static ArrayList\u003cString\u003e postponeTask(String[] inputCommand) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        ArrayList\u003cString\u003e returnCommand \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder startTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder endTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        int cutoff \u003d 2;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        for (int j \u003d 2; j \u003c inputCommand.length; j++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (inputCommand[j].equals(\"to\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                cutoff \u003d j;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                if (j !\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    startTime.append(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                startTime.append(inputCommand[j]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                cutoff \u003d j;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        for (int k \u003d cutoff + 1; k \u003c inputCommand.length; k++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (k !\u003d cutoff + 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                endTime.append(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            endTime.append(inputCommand[k]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        returnCommand.add(startTime.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        returnCommand.add(endTime.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Handles the parsing for tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param inputCommand commands from the user in String[] format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param stopAt either \u0027/at\u0027 or \u0027/by\u0027 depending on which event."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return an array list of the instructions in task, start time, end time format."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private static ArrayList\u003cString\u003e getTask(String[] inputCommand, String stopAt, boolean isToDo) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        ArrayList\u003cString\u003e returnCommand \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder task \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder startTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder endTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        int cutoff \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        for (int j \u003d 1; j \u003c inputCommand.length; j++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (!isToDo \u0026\u0026 inputCommand[j].equals(stopAt)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                cutoff \u003d j;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                if (j !\u003d 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    task.append(\" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                task.append(inputCommand[j]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                cutoff \u003d j;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        for (int k \u003d cutoff + 1; k \u003c inputCommand.length; k++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (inputCommand[k].equals(\"to\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                endTime.append(inputCommand[k + 1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else if (k !\u003d cutoff + 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                startTime.append(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            startTime.append(inputCommand[k]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        returnCommand.add(task.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        returnCommand.add(startTime.toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        returnCommand.add(endTime.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 145
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Storage class to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to make a new storage with the txt file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param path file path to access from."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        assert this.path !\u003d null : \"The address path must not be empty!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Reads the txt file for previously saved list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return TaskList which has all the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws DukeException if the task type is different from the expected commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public TaskList readFile() throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        TaskList currentList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        File f;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            f \u003d new File(path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            assert f.canRead();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            assert f.canWrite();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                String[] input \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                assert input.length \u003e\u003d 3 : \"Inputs from file has an error!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                assert Integer.valueOf(input[1]) \u003d\u003d 1 ||"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                        Integer.valueOf(input[1]) \u003d\u003d 0 : \"Inputs from file has an error!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    ToDo toDo \u003d new ToDo(input[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    markIfDone(toDo, input[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    currentList.add(toDo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    Deadline deadline \u003d new Deadline(input[2], input[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    markIfDone(deadline, input[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    currentList.add(deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    Event event \u003d new Event(input[2], input[3], input[4]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    markIfDone(event, input[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    currentList.add(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    throw new DukeException(\"Error reading task type.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return currentList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            System.out.println(\"File not found! Making new list now.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            f \u003d new File(path);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return currentList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Checks if the task from the txt file is completed or not. Marks as done if they are."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param task Task to check if it is done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param input Input 0 means undone, input 1 means done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private void markIfDone(Task task, String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        if (Integer.parseInt(input) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            task.isDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Writes new items to the txt file and saves it."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param list TaskList to write each task into the txt file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws IOException if there is an error with input or output."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void writeFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                fw.write(list.get(i).outputToFile() + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 102
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the add command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to set the task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * executes the add command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            String eventMessage \u003d \"Got it. I\u0027ve added this task:\\n       \" + task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            String numberOfTaskMessage \u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return eventMessage + \"\\n\" + numberOfTaskMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error writing tasks to file!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 39
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Abstract class command that represents all the different possible commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the command that is given."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to see which task to delete from task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param taskNumber the index of task to be deleted from the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Task currentTask \u003d tasks.delete(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            String deleteMessage \u003d \"     Noted. I\u0027ve removed this task:\\n       \" + currentTask;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            String numberOfTaskMessage \u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return deleteMessage + \"\\n\" + numberOfTaskMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error writing tasks to file!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error! Index must be between 1 and \" + tasks.size() + \"!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to see which task to mark as done from task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param taskNumber the index of task that is done from the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Task currentTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            currentTask.isDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n       \" + currentTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error writing tasks to file!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error! Index must be between 1 and \" + tasks.size() + \"!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the exit command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor that sets the boolean exit to be true. Stops the programme after this."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to find keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param keyword keyword to find."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            boolean foundKeyword \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            String findMessage \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                String currentJob \u003d currentTask.getJob();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                String[] findingKeyword \u003d currentJob.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                for (String s : findingKeyword) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    if (s.equals(keyword)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                        foundKeyword \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                        findMessage +\u003d \"\\n     \" + counter + \".\" + currentTask;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (foundKeyword) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return findMessage;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return \"There are no matching tasks in your list!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error writing tasks to file!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 56
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the list command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Empty constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            output.append(i + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                output.append(\"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        if (output.toString().equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"There is no tasks in the list!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 36
    }
  },
  {
    "path": "src/main/java/duke/command/PostponeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that represents the postpone command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private ArrayList\u003cString\u003e returnCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructor to see which task to postpone from task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param taskNumber the index of task to be postponed from the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public PostponeCommand(int taskNumber, ArrayList\u003cString\u003e returnCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.returnCommand \u003d returnCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Executes the postpone command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param tasks TaskList of all the current tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param storage Storage to save tasks in the file after execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Task currentTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (currentTask.getType().equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                return (\"Current job is ToDo, there is no date to postpone!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else if (currentTask.getType().equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                currentTask.snooze(returnCommand.get(0));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else if (currentTask.getType().equals(\"Event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                currentTask.snooze(returnCommand.get(0), returnCommand.get(1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Alright! I\u0027ve postponed the timings for this task:\\n       \" + currentTask;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error writing tasks to file!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error! Index must be between 1 and \" + tasks.size() + \"!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            return \"Error! Format should be postpone (index) (dd/mm/yyyy hhmm)! \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 55
    }
  },
  {
    "path": "src/main/java/duke/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "E | 0 | eat | 02/12/1998 1800 | 2100"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "T | 0 | bitch"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "T | 0 | god"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "T | 0 | wow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "T | 0 | hi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "T | 0 | eat"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "D | 0 | homework | 23/09/2019 1100"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent the Deadline tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructs a new Deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param job the Deadline task to be added to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param by the time of the deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws DukeException if there is an error in formatting."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Deadline(String job, String by) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        super(job);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        checkFormat(by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        changeType(\"Deadline\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void snooze(String newBy) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        checkFormat(newBy);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private void checkFormat(String by) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            this.date \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (job.equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else if (by.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            throw new DukeException(\"Error in format! Deadline must be written in \\\"(deadline name) \" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    \"/at dd/MM/yyyy HHmm\\\" format\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Formats the Deadline task to be added to the txt file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return String to be added to the txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String outputToFile() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", this.status.equals(\"[✓]\") ? 1 : 0, this.job, sdf.format(date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + sdf.format(date) + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent the Event tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final SimpleDateFormat sdfEndTime \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Date dateAndStartTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private Date dateAndEndTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructs a new Event task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param job the Event task to be added to the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param startTime the date and start time of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param endTime the end time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws DukeException if the description or the date and time of the event is empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Event(String job, String startTime, String endTime) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        super(job);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        checkFormat(startTime, endTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        changeType(\"Event\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void snooze(String newStartTime, String newEndTime) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        checkFormat(newStartTime, newEndTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private void checkFormat(String startTime, String endTime) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            this.dateAndStartTime \u003d sdf.parse(startTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            this.dateAndEndTime \u003d sdfEndTime.parse(endTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            if (job.equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty! Please try again.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            } else if (startTime.equals(\"\") || endTime.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                throw new DukeException(\"The date/time of an event cannot be empty! Please try again.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            throw new DukeException(\"Error in format! Event must be written in \\\"(event name) \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    \"/at dd/MM/yyyy HHmm to HHmm\\\" format\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Formats the Event task to be added to the txt file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return String to be added to the txt file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String outputToFile() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return String.format(\"E | %d | %s | %s | %s\", this.status.equals(\"[✓]\") ? 1 : 0, this.job,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                sdf.format(dateAndStartTime), sdfEndTime.format(dateAndEndTime));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + sdf.format(dateAndStartTime) + \" to \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                sdfEndTime.format(dateAndEndTime) + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent the task in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    protected String job;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    protected String status;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructs a new task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param job the task to be added to the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Task(String job) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.job \u003d job;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.status \u003d \"[✗]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        taskType \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    protected void changeType(String taskType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void snooze(String date) throws DukeException {};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void snooze(String startTime, String endTime) throws DukeException {};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Changes the status of the task to done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void isDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        this.status \u003d \"[✓]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Find the job of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return the task\u0027s job."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String getJob() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return this.job;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Formats the task to be added to the txt file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return String to be added to the txt file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String outputToFile() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return String.format(\"Task | %d | %s\", this.status.equals(\"[✓]\") ? 1 : 0, this.job);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return status + \" \" + job;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 65
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class that contains the task list that allows users to do operations on the tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Initialises an empty task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param task Task to be added to task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Gets the number of tasks in the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return the number of tasks in the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Gets the task that user is looking for."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param taskNumber The number of the corresponding task that user is looking for."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return Task that user is looking for."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws IndexOutOfBoundsException if task number is more than number of items in list or less than 0."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Task get(int taskNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Deletes the task that user is looking for"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param taskNumber The number of the corresponding task that user is looking for."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return Task that user is looking for."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws IndexOutOfBoundsException if task number is more than number of items in list or less than 0."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public Task delete(int taskNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 56
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " * Class to represent the ToDo tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Constructs a new ToDo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @param job the ToDo to be added to the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @throws DukeException if the description of the ToDo task is empty."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public ToDo(String job) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        super(job);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        if (job.equals(\"\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty! Please try again.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        changeType(\"ToDo\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * Formats the ToDo task to be added to the txt file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     * @return String to be added to the txt file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String outputToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return String.format(\"T | %d | %s\", this.status.equals(\"[✓]\") ? 1 : 0, this.job);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void testToDo() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        ToDo todo \u003d new ToDo(\"CS2103 Tutorial\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        assertEquals(\"[T][✗] CS2103 Tutorial\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void testDeadline() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103 TP Submission\", \"05/09/2019 2359\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        assertEquals(\"[D][✗] CS2103 TP Submission (by: 05/09/2019 2359)\", deadline.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void testEvent() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        Event event \u003d new Event(\"CS2103 Examination\", \"05/09/2019 1800\", \"2000\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        assertEquals(\"[E][✗] CS2103 Examination (at: 05/09/2019 1800 to 2000)\", event.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void testEmptyEvent() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Event event \u003d new Event(\"\", \"\", \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            assertEquals(\"Error in format! Event must be written in \\\"(event name) \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    \"/at dd/MM/yyyy HHmm to HHmm\\\" format\", e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    public void testUnkonwnParser() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            Command c \u003d Parser.parse(\"hello\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "            assertEquals(\"Invalid command! Please use one of the following commands:\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "                    \"list, delete, find, todo, deadline, event, bye\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weikiat97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weikiat97": 51
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weikiat97"
        },
        "content": "       mainClassName \u003d \"cd Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "│     └─seedu/duke/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "weikiat97": 1,
      "-": 169
    }
  }
]
