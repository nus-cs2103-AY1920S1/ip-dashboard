[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "run{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 27,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "duke-L1toL6-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "event return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "deadline project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "list 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "done -19"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "done a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "delete 109"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "delete -0as1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 26
    }
  },
  {
    "path": "duke-L1toL6-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 34
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":init"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":end"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":init"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":end"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 6e6ace130121eba10a3559454d8092300c7518d0"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 171
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    Deadline(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        super(\"[D]\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        } else if (!taskString.contains(\"/by \")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"Please separate deadline description and date/time by \\\" /by \\\".\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task.tasklist.add(this);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        String[] arr \u003d taskString.split(\" /by \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.taskString \u003d arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.dateAndTime \u003d arr[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.printAdded();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        return super.toString() + \" (by: \" + this.dateAndTime + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(logo + \"\\nHello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        + \"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                String command \u003d sc.next();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                String taskString \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    taskString \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    int n \u003d Task.getValidatedListIndex(taskString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    Task.setDone(n - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    int n \u003d Task.getValidatedListIndex(taskString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    Task.deleteTask(n- 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    Task.ensureEmptyTaskString(taskString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    Task.printTaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        Todo todo \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        Deadline deadline \u003d new Deadline(taskString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        Event event \u003d new Event(taskString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                            throw new DukeException(\"Command cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            } catch (DukeException dukeExc) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                System.out.println(\"OOPS!!! \" + dukeExc.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 53,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    Event(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        super(\"[E]\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        } else if (!taskString.contains(\"/at \")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"Please separate event description and date/time by \\\" /at \\\".\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task.tasklist.add(this);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        String[] arr \u003d taskString.split(\" /at \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.taskString \u003d arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.dateAndTime \u003d arr[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.printAdded();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        return super.toString() + \" (at: \" + this.dateAndTime + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    String taskString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    String isDone \u003d \"[ ]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    String type \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    String dateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    //Precondition: Task type is a valid type that has its own individual class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    Task(String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        //printing and adding to tasklist will be handled by individual class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    Task(String type, String taskString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task.tasklist.add(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.printAdded();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    void printAdded() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.print(\"Now you have \" + tasklist.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (tasklist.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            System.out.print(\" task in the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            System.out.print(\" tasks in the list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static void ensureEmptyTaskString(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (!taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"There cannot be any additional characters after this command (other than trailing spaces).\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static int getValidatedListIndex(String s) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (s.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"Please enter a valid numerical value after the intended command (separated by a space).\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                    \"The number cannot be empty for this command.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            n \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            if (n \u003c\u003d 0 || n \u003e Task.tasklist.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                throw new NumberFormatException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            return n;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            if (Task.getTaskList().size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the tasklist\u0027s size after the intended command (separated by a space).\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        \"There is currently 1 task in the list.\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                throw new DukeException(\"Please enter a valid numerical value from 1 to the tasklist\u0027s size after the intended command (separated by a space).\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        \"There are currently \" + Task.getTaskList().size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                        \"Try entering \\\"list\\\" to view the full list of tasks.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static void setDone(int n) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task task \u003d Task.tasklist.get(n);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        task.isDone \u003d \"[+]\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static void printTaskList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        for (Task task : Task.getTaskList()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            System.out.println(count + \".\" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        return Task.tasklist;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    static void deleteTask(int n) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task task \u003d Task.tasklist.get(n);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task.tasklist.remove(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (Task.tasklist.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            System.out.println(\"Now you have \" + Task.tasklist.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        return type + isDone + \" \" + this.taskString;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 103
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    Todo(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        super(\"[T]\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        if (taskString.equals(\"\")) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        Task.tasklist.add(this);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        this.printAdded();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Neo Weihong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Neo Weihong": 34
    }
  }
]
