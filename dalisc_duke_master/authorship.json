[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "run {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    testImplementation(\"org.junit.jupiter:junit-jupiter-api:5.4.2\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.4.2\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 33,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][?] hihi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][?] hihi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[E][?] wedding (at: chapel)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[D][?] dede (by: now)"
      }
    ],
    "authorContributionMap": {
      "dalisc": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "dalisc": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d \"Bye! Hope to see you again soon.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 16
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String response;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public abstract void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Task deadlineTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            response \u003d \"Got it. I\u0027ve added this task:\\n    \" + deadlineTask + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    + \" task(s) in the \" + \"list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assert index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size(): \"The task index does not exist.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Task deletedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d \"Noted. I\u0027ve deleted the following task:\\n    \" + deletedTask + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                + \" task(s) in the \" + \"list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assert index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size(): \"The task index does not exist.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d \"Nice! I\u0027ve marked this task as done:\\n    \" + task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 24
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Task eventTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        tasks.add(eventTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d \"Got it. I\u0027ve added this task:\\n    \" + eventTask + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                + \" task(s) in the \" + \"list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String searchPhrase;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public FindCommand(String searchPhrase) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.searchPhrase \u003d searchPhrase;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching task(s) in your list:\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            int k \u003d i + 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (task.description.contains(searchPhrase)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (i \u003e 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(k);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(\". \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d sb.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            response \u003d \"There are no tasks for now.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                int k \u003d i + 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (i \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(k);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(\". \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                sb.append(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            response \u003d sb.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Parser parses the input by the user and determines what the command is the user is issuing, or no command at all"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * (invalid command)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Returns the correct command object, or an exception if the user input is invalid in format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param fullCommand The full string input of the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return An object that is a child class of Command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @throws DukeException DukeException is thrown if the command is not valid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assert !fullCommand.equals(\"\"): \"The command is empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        fullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String[] commandWords \u003d fullCommand.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String commandType \u003d commandWords[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (commandType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String toDoDescription \u003d fullCommand.substring(5).trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new ToDoCommand(toDoDescription);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String eventDescription \u003d fullCommand.split(\"/at\")[0].substring(6).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String at \u003d fullCommand.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new EventCommand(eventDescription, at);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String description \u003d fullCommand.split(\"/by\")[0].substring(9).trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String by \u003d fullCommand.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            int indexDone \u003d Integer.parseInt(commandWords[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new DoneCommand(indexDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            int indexDelete \u003d Integer.parseInt(commandWords[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new DeleteCommand(indexDelete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"find\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String searchPhrase \u003d fullCommand.substring(5).trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new FindCommand(searchPhrase);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (commandType.equals(\"sort\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String by \u003d fullCommand.substring(5).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return new SortCommand(by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 53
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class SortCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public SortCommand(String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (by.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    deadlines.add(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            deadlines \u003d getSortedTaskByDeadline(deadlines);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (deadlines.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                response \u003d \"You have no deadlines.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder(\"Here are your tasks sorted by \" + by + \":\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                for (int i \u003d 0; i \u003c deadlines.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    int k \u003d i + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (i \u003e 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(k);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(\". \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(deadlines.get(i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                response \u003d sb.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else if (by.equals(\"type\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks \u003d getSortedTaskByType(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                response \u003d \"You have no tasks.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder(\"Here are your tasks sorted by \" + by +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        \":\\nDeadline, Event, Todo\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    int k \u003d i + 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (i \u003e 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(k);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(\". \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    sb.append(tasks.get(i));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                response \u003d sb.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            throw new DukeException(\"I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cDeadline\u003e getSortedTaskByDeadline(ArrayList\u003cDeadline\u003e deadlineTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Collections.sort(deadlineTasks, Deadline.deadlineComparator);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return deadlineTasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cTask\u003e getSortedTaskByType(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Collections.sort(tasks, Task.typeComparator);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 79
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Task toDoTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        tasks.add(toDoTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        response \u003d \"Got it. I\u0027ve added this task:\\n    \" + toDoTask + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                + \" task(s) in the \" + \"list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 28
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * An unchecked exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 15
    }
  },
  {
    "path": "src/main/java/duke/handler/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.handler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Storage class deals with the saving and loading of data into Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The data are the tasks that the user specified."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The path of the file where data are stored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Saves the data into the specified filepath."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list The list of tasks to be saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (i \u003e 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            writer.write(task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Loads data from the specified filepath."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return The list of tasks that were loaded."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String read;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            while ((read \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String type \u003d read.substring(1, 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String status \u003d read.substring(4, 5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String info \u003d read.substring(7);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new ToDo(info.trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String[] infoArr \u003d info.split(\"at:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String description \u003d infoArr[0].substring(0, infoArr[1].length() - 1).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String at \u003d infoArr[1].substring(1, infoArr[1].length() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String[] infoArr \u003d info.split(\"by:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String description \u003d infoArr[0].substring(0, infoArr[1].length() - 1).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String by \u003d infoArr[1].substring(1, infoArr[1].length() - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.print(e);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 92
    }
  },
  {
    "path": "src/main/java/duke/handler/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.handler;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The TaskList contains the list of current tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Contructs a TaskList instance with a pre-existing list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list The list of tasks that already existed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Constructs a TaskList instance with no tasks added to the list yet."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A getter for the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Deadline class extends Task. It is a type of task that also has a deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The deadline for the task to be completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Create an instance of Deadline. Date and time provided in the right format will be parsed into a"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * datetime object. Otherwise, the deadline will remain seen as the original string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param dateTime Date and Time at which the deadline is."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Deadline(String description, String dateTime) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.date \u003d dateFormat.parse(dateTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.by \u003d date.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "//            this.by \u003d dateTime;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "//            System.out.println(\"    Next time, please specify the deadline in this format: dd/mm/yyy hh:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "//            System.out.println(\"    example: 01/12/2019 14:30\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "//            System.out.println();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            throw new DukeException(\"Please specify the deadline in this format: dd/mm/yyy hh:mm\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    \"example: 01/12/2019 14:30\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static Comparator\u003cDeadline\u003e deadlineComparator \u003d new Comparator\u003cDeadline\u003e() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        public int compare(Deadline d1, Deadline d2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return (d1.date.before(d2.date) ? -1 :"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    (d1.date.after(d2.date) ? 1 : 0));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Event class extends Task. It is a type of task with a specified location."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The location of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Task is a class to represent a task. It contains a description of the task and its status"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * (whether the task has been completed)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A boolean describing whether the task has been completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A method that returns the tick or cross symbol, depending whether the task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return A tick or cross symbol, depending on whether the task has been completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static Comparator\u003cTask\u003e typeComparator \u003d new Comparator\u003cTask\u003e() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        public int compare(Task t1, Task t2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return t1.toString().compareTo(t2.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 50
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The ToDo class extends the Task class. It is the most basic type of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 16
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Ui class handles the chat bot\u0027s responses to the user, namely what it should print back to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The Duke logo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A line that separates user input from chat bot output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String line \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * An indentation of 4 spaces. All chat bot output are indented by 4 spaces."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String indent \u003d \"    \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the loading error message if Duke fails to load properly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Duke has failed to load properly.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(seedu.duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialog.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        db.setMinHeight(db.dialog.getMinHeight());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        db.setMinHeight(db.dialog.getMinHeight());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 67
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.handler.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Duke is the main class that launches the chat bot when it is run."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * This is the storage class which does the saving and loading of the files."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * This is the task list class that contains the list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The ui class handles the output to the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Creates a new chat bot with a specified file path."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * If the specified file contains pre-saved tasks, it will be loaded."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialogContainer.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        if (!userText.equals(\"\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            c.execute(tasks.getList(), ui, storage);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return c.response;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            return \"The command is invalid!\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalisc": 176,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dalisc": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dalisc": 19
    }
  },
  {
    "path": "src/test/java/SimpleTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class SimpleTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(\"Test 1 works\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 9
    }
  },
  {
    "path": "text-ui-testing/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "hello"
      }
    ],
    "authorContributionMap": {
      "dalisc": 1
    }
  },
  {
    "path": "text-ui-testing/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "todo hello"
      }
    ],
    "authorContributionMap": {
      "dalisc": 1
    }
  },
  {
    "path": "text-ui-testing/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dalisc": 21
    }
  }
]
