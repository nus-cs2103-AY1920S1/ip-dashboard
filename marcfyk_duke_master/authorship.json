[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 23,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "T - 0 - join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "D - 0 - return book - Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "E - 0 - project meeting - Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "T - 0 - n1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "T - 0 - n2"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Duke Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents the main driver class of Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Storage to data file access and writes.. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** TaskList to store user input. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Ui for user interaction. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param filePath File path of data file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Main Method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke and runs the logic."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param args Arguments."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        new Duke(\"../../../data/tasks.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Runs Duke main program logic."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 58,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.TaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents an Add Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to add a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of AddCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public AddCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds the task to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes the changes to the data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task task \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d task.message();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + e.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            storage.write(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 53
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * An abstract class of commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance of its sub-classes are instances of commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Whether the command is an exit command. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Acts as intended depending on the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks if command is an exit command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return boolean attribute of whether command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to delete a task from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Index of the task to be deleted. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of delete command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes the task from the task list, which is determined by a 1-based index."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes the changes to the data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"Index out of range, no task found.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d new StringBuilder()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"Noted. I\u0027ve removed this task:\\n\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"  \" + task + \"\\n\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"Now you have \" + taskList.getTotalTasks() + \" tasks in the list.\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents of a Do Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to do a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Index of task to do. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a Do Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of the task to do."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DoCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does a task in the task list, which is determined by a 1-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes to the data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.doTask(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Nice! I\u0027ve marked this task as done:\\n\" + indent + \"  \" + taskList.getTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 43
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents an Exit Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to exit Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of an Exit Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to true as it is the exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Exits Duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a List Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance prints out the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of List Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/datetime/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.datetime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a Date and Time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance keeps track of the day, month, year, hours and minutes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Day. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Month name. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Year. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Hours (12hr clock). */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String hours;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Minutes. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String minutes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** AM or PM. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String sign;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Month Mapping from 1-12 to Jan-Dec. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static HashMap\u003cString, String\u003e monthMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds all the mappings from numbers to month names."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Executes when class is loaded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"1\", \"January\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"2\", \"February\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"3\", \"March\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"4\", \"April\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"5\", \"May\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"6\", \"June\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"7\", \"July\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"8\", \"August\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"9\", \"September\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"10\", \"October\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"11\", \"November\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        monthMap.put(\"12\", \"December\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of DateTime."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param info Date and Time information, delimited by a space."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException Invalid info given either in the wrong format, or incompatible."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DateTime(String info) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d info.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String date \u003d tokens[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String time \u003d tokens[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            parseDate(date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            parseTime(time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new InvalidDateTimeException(\"Bad String\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks date and sets day, month, year fields."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param date Date string to parse."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException Thrown if date is not formatted correctly."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void parseDate(String date) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length !\u003d 3) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new InvalidDateTimeException(\"Invalid Date\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            int d \u003d Integer.parseInt(tokens[0]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (d \u003c 0 || d \u003e 31) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new InvalidDateTimeException(\"Invalid Date\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (monthMap.get(tokens[1]) \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new InvalidDateTimeException(\"Invalid Date\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            int y \u003d Integer.parseInt(tokens[2]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            day \u003d tokens[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            month \u003d monthMap.get(tokens[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            year \u003d tokens[2];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new InvalidDateTimeException(\"Invalid Date\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks the time and sets hours, minutes and sign."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param time Time string to be parsed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException Thrown if time string is not formatted correctly."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void parseTime(String time) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            int t \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            int hrs \u003d t / 100;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            boolean isAft \u003d hrs \u003e 12;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            hrs \u003d isAft ? hrs - 12 : hrs;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            sign \u003d isAft ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            hours \u003d String.format(\"%d\", hrs);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            int mins \u003d t % 100;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            minutes \u003d String.format(\"%02d\", mins);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new InvalidDateTimeException(\"Invalid Time\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of DateTime (nth of month year, HH:MM am/pm)."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of DateTime."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String nth;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        int d \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (d) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            nth \u003d \"st\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            nth \u003d \"nd\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            nth \u003d \"rd\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            nth \u003d \"th\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"%s%s of %s %s, %s:%s%s\", day, nth, month, year, hours, minutes, sign);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcfyk": 138
    }
  },
  {
    "path": "src/main/java/duke/exception/DeadlineTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Deadline Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DeadlineTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of the error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/EventTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Event Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class EventTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Invalid DateTime Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class InvalidDateTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/ToDoTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom ToDo Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDoTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.DoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents parsing and decomposing string commands into Command types."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Parses a string, determining what command it is."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param string String to be parsed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Relevant command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DukeException If string is badly formatted."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Command parse(String string) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (string \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d string.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003e 0 \u0026\u0026 tokens[0] !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                switch (tokens[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        Command c \u003d new DoCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        return c;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        Command c \u003d new DeleteCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        return c;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return new AddCommand(string);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new AddCommand(string);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 58
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents the storage and updating of tasks to data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances can write to data file and are"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * responsible for writing to the file for storage purposes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Given path to the which holds the data. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String filePath \u003d \"../data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Tries to create data file if it does not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Error creating storage file.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes down all tasks and their state and data."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param tasklist Tasklist that provides the relevant data."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void write(TaskList tasklist) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d tasklist.getAllTasks();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"T\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.isDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"D\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.isDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.getDescription());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(((Deadline) task).getBy());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"E\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.isDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(task.getDescription());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\" - \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(((Event) task).getAt());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    fw.write(\"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    System.out.println(\"Unknown task\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"There was a write error to storage.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Reads data file and gets all the tasks written on it."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return ArrayList of Tasks recorded on data file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ArrayList\u003cTask\u003e parseFile() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String[] tokens \u003d line.split(\" - \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String type \u003d tokens[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                boolean isDone \u003d tokens[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String desc \u003d tokens[2];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Task t \u003d null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new Deadline(desc, tokens[3]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new Event(desc, tokens[3]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Error reading file.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 125
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.datetime.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Deadline Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances are tasks that has a due date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Deadline date for the deadline. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** DateTime of deadline. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private DateTime datetime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param by deadline for the deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException If DateTime format is wrong."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Deadline(String description, String by) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        datetime \u003d new DateTime(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the deadline for this deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the String representation of deadlines."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of deadlines."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), datetime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.datetime.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Event Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances are tasks with at a specific time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Time of event. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** DateTime of the event. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private DateTime datetime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param at Time of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException If DateTime format is wrong."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Event(String description, String at) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        datetime \u003d new DateTime(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the timing of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the Event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), datetime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Tasks could be ToDos, Deadlines, Events."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Total tasks created. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Whether task is done. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** String of the task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ++totalTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks created."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return The total tasks created."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static int getTotalTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Changes isDone to true, setting the task to be done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string message of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String message() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%4s\", \"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new StringBuilder()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \" Got it. I\u0027ve added this task:\\n\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \"   \" + this + \"\\n\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \" Now you have \" + totalTasks + \" tasks in the list.\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks whether the task is done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Boolean value on whether task is done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string symbol of whether the task is done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String symbol of whether the task is done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 91
    }
  },
  {
    "path": "src/main/java/duke/task/TaskFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.TaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.ToDoTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.DeadlineTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.EventTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a TaskFactory."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Class creates a task and determines what type of task it is."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskFactory {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Determines which sub-class constructor to call."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description of the task to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws TaskException When task cannot be created. Sub-classes of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *     exception are called in for specificity."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Task create(String description) throws TaskException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (tokens.length \u003d\u003d 0 || tokens[0] \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createToDo(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createDeadline(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createEvent(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a ToDo Task Object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws ToDoTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createToDo(String description) throws ToDoTaskException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new ToDoTaskException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new ToDo(message.trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new ToDoTaskException(\"OOPS!!! The description of a todo is invalid.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Deadline Task Object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DeadlineTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createDeadline(String description) throws DeadlineTaskException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"deadline\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new DeadlineTaskException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] divide \u003d message.split(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new Deadline(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (InvalidDateTimeException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DeadlineTaskException(\"OOPS!!! The description of a deadline is invalid.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates Event Task Object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws EventTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createEvent(String description) throws EventTaskException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"event\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new EventTaskException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] divide \u003d message.split(\"/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new Event(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (InvalidDateTimeException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new EventTaskException(\"OOPS!!! The description of a event is invalid.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 101
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** ArrayList to store Tasks. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of an empty TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Loads tasks stored on data file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object to access data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        load(storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Loads the tasks from storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage instance to load files."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void load(Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d storage.parseFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        tasks.forEach(task -\u003e list.add(task));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks in this list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Total number of tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds Task to list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was added."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does Task at the given 1-based index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of task to check (1-based)."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task doTask(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes a task at given 1-based index to delete."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of the task to delete (1-based)."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was deleted. Null if index is out of range."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.remove(index - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets a Task from the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index index of task to get (1-based)."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets an ArrayList of all tasks in the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return ArrayList of all tasks in the task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.forEach(x -\u003e newList.add(x));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        StringBuilder strb \u003d new StringBuilder(indent + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); ++i) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            strb.append(indent).append(i + 1).append(\".\").append(list.get(i));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (i \u003c list.size() - 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                strb.append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return strb.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 128
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a ToDo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a ToDo Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of a todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of a todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 25
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents interactions with user via CLI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** BufferedReader to read CLI input. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Line for responses. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String line \u003d String.format(\"%4s\", \"\") + String.format(\"%60s\", \"\").replace(\" \", \"_\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Indentation for response. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Ui."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Opens BufferedReader."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Reads the user command from CLI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String command from user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return br.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the greeting."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Hello! I\u0027m Duke\\n\" + indent + \"What can I do for you?\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param tasklist TaskList to be printed out."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void printList(TaskList tasklist) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(tasklist);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the in text indent width."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Indentation."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getIndent() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return indent;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints error."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showError(String errMessage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(errMessage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Closes the bufferedreader."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Buffered Reader could not close properly.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 100
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_newEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String description \u003d \"Event Test 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String at \u003d \"01/01/2000 1730\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 20
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcfyk": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 21
    }
  }
]
