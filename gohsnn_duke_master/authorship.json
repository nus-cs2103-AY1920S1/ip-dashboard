[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static ArrayList\u003cTask\u003e memory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    static int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"; */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        activeChat();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method queries for user input and returns the desired result."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void activeChat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String input \u003d sc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    int taskNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    doneTask(taskNum);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String TodoTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        if (TodoTask.equals(\"\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            throw new DukeException(\"Oops! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            toDoTask(TodoTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String EventTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        if (EventTask.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            throw new DukeException(\"Oops! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            eventTask(EventTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    String DeadlineTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        if (DeadlineTask.equals(\"\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            throw new DukeException(\"Oops! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                            deadlineTask(DeadlineTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    int deleteNum \u003d sc.nextInt();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    deleteTask(deleteNum);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                    throw new DukeException(\"Oops! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "                input \u003d sc.next();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        //end of the loop before Duke encounters BYE"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method marks the targeted task as done and provides confirmation to the user through output."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void doneTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (taskNum \u003e index) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! This task number does not exist.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Task target \u003d memory.get(taskNum - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            target.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(target);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method iterates through the data collected and prints them out in the desired format."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        for (Task current : memory) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(id + \".\" + current.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates a ToDo object and adds it into memory."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void toDoTask(String a) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        ToDo newTodo \u003d new ToDo(a);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        memory.add(newTodo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        printTask(newTodo);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates an Event object and adds it into memory."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    If command does not include a timing, then user is prompted to enter the command again."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void eventTask(String b) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] details \u003d b.split(\"/at\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! Please include the event timing and resubmit that command.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Event newEvent \u003d new Event(details[0], details[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            memory.add(newEvent);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            printTask(newEvent);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method creates a deadlineTask and adds it into memory."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    If command does not include a deadline, then user is prompted to enter the command again."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void deadlineTask(String c) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        String[] details \u003d c.split(\"/by\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! Please include the deadline and resubmit that command.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(details[0], details[1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            memory.add(newDeadline);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            printTask(newDeadline);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    This method removes the target task from the list and prompts the user the number of remaining tasks saved."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @param int deleteNum the index of the task to be deleted"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void deleteTask(int deleteNum) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (deleteNum \u003e index) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"Oops! This task number does not exist.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            Task removed \u003d memory.remove(deleteNum - 1);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(removed);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            index \u003d memory.size();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            System.out.println(\"Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public static void printTask(Task task) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        index \u003d memory.size();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        System.out.println(\"Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gohsnn": 154,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "A child class of Object which contains the description of the Task and whether the Task has been done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    //for the purpose of text-ui-testing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    } */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            throw new DukeException(\"This task has already been done!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 35
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gohsnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gohsnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gohsnn": 10
    }
  }
]
