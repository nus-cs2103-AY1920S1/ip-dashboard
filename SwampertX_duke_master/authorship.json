[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 1,
      "-": 15
    }
  },
  {
    "path": "src/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "event a /at tonight"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "deadline b /at tonight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "todo hahahahahaha"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Deadline(boolean done, String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.by \u003d parseTime(by.trim());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this(false, description, by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return String.format(\" D | %d | %s | %s\\n\", isDone ? 1 : 0, getDesc(), by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        d.loadTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        d.greeting();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        d.listen();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private static final String SAVE_LOCATION \u003d new String(\"data.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private Duke() {}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void greeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private ArrayList\u003cTask\u003e cache \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void listen() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        Scanner listener \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        while(listener.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String line \u003d listener.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                saveTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                showList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                handleTask(line);                "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        listener.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void loadTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // load tasks from SAVE_LOCATION into the arraylist of tasks, cache."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Scanner sc \u003d new Scanner(new FileReader(SAVE_LOCATION));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"reading...\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    Task t \u003d parseTask(sc.nextLine());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    cache.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                } catch (InvalidFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    System.out.println(e.message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"Wow. First time to Duke?\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(cache);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private Task parseTask(String line) throws InvalidFormatException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // format: \" [T|D|E] | [0|1] | desc | [by|at] \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        for(int i\u003d0; i\u003c parts.length; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            parts[i] \u003d parts[i].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.printf(\"length of splitted is %d \\n\", parts.length);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        if (parts.length \u003c 3 || parts.length \u003e 4) throw new InvalidFormatException(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        String type \u003d parts[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        boolean done \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        String desc \u003d parts[2];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        Task t \u003d new Task(done, desc);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                t \u003d new ToDo(done, desc);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                t \u003d new Deadline(done, desc, parts[3]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                t \u003d new Event(done, desc, parts[3]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void saveTasks() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // horrible design: rewrite the file at SAVE_LOCATION with the cache"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            FileWriter fw \u003d new FileWriter(SAVE_LOCATION);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            for (Task t: cache) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                bw.write(t.saveFormat());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"Oh no!! Couldn\u0027t save for some reason.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleTask(String line) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // something else: help message"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // done \u003cnumber\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // todo \u003cdesc\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // deadline \u003cdesc\u003e /by \u003ctime\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // event desc /at \u003ctime\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        Scanner wordReader \u003d new Scanner(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        String command \u003d wordReader.next();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    handleDone(wordReader.nextLine());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    handleToDo(wordReader.nextLine());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    handleDeadline(wordReader.nextLine());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    handleEvent(wordReader.nextLine());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    handleDelete(wordReader.nextLine());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    printHelpMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"A command must be followed by one or more arguments! Type \u0027help\u0027 for more help\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void printHelpMessage() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(\"Available commands:\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"event \u003cdesc\u003e /at \u003ctime\u003e\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"todo \u003cdesc\u003e\\n\" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"deadline \u003cdesc\u003e /by \u003ctime\u003e\\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"list\\n\" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"delete \u003cnumber\u003e\\n\" +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                \"done \u003cnumber\u003e\\n\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleDone(String number) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // parse the number, mark as done"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            int n \u003d Integer.parseInt(number.trim());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Task t \u003d cache.get(n-1).markAsDone();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"Hey bro why no number?\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"The format is: \u0027done \u003cnumber\u003e\u0027. Please try again.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleDelete(String number) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        // parse the number, mark as done"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            int n \u003d Integer.parseInt(number.trim());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Task t \u003d cache.remove(n-1); "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list.\\n\", cache.size());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"You probably gave a number outside of the list.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"The format is: \u0027delete \u003cnumber\u003e\u0027. Please try again.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            banner();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleEvent(String descAt) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            // separate by /at"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String[] splitted \u003d descAt.split(\"/at\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            if (splitted.length \u003c 2) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"Please enter a non-empty description and time, in the following format:\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"event \u003cdesc\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                banner();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String desc \u003d splitted[0];"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            List\u003cString\u003e restAsList \u003d Arrays.asList("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    Arrays.copyOfRange(splitted, 1, splitted.length));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String at \u003d String.join(\"/at\", restAsList);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Event e \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            cache.add(e);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            printAddConfirmation();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"The datetime format is wrong! Try \u0027dd/mm/yyyy HHMM\u0027 in 24-hour format.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleDeadline(String descBy) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            // separate by /by"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String[] splitted \u003d descBy.split(\"/by\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            if (splitted.length \u003c 2) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"Please enter a non-empty description and time, in the following format:\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                System.out.println(\"deadline \u003cdesc\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                banner();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String desc \u003d splitted[0];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            List\u003cString\u003e restAsList \u003d Arrays.asList("
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "                    Arrays.copyOfRange(splitted, 1, splitted.length));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            String by \u003d String.join(\"/by\", restAsList);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Deadline e \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            cache.add(e);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            printAddConfirmation();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.println(\"The datetime format is wrong! Try \u0027dd/mm/yyyy HHMM\u0027 in 24-hour format.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void handleToDo(String desc) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        cache.add(new ToDo(desc));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        printAddConfirmation();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void printAddConfirmation() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(\"Got It. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println(cache.get(cache.size()-1)); // last object"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", cache.size());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        banner();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void showList() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        for (int i\u003d0; i\u003ccache.size(); i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            Task t \u003d cache.get(i);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i+1, t);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        banner();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    private void banner() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 273,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Event(boolean done, String description, String at) throws DateTimeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.at \u003d parseTime(at.trim());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Event(String description, String at) throws DateTimeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this(false, description, at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return String.format(\"E | %d | %s | %s\\n\", isDone ? 1 : 0, getDesc(), at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 26
    }
  },
  {
    "path": "src/main/java/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "public class InvalidFormatException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public InvalidFormatException() {}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public InvalidFormatException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        message \u003d s;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    protected static final DateTimeFormatter dtf \u003d "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Task(boolean done, String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDesc());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return String.format(\"| %d | %s\\n\", isDone ? 1 : 0, getDesc());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public static LocalDateTime parseTime(String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return LocalDateTime.parse(time, dtf);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 45
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public ToDo(boolean done, String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "        return String.format(\" T | %d | %s\\n\", isDone ? 1 : 0, getDesc());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SwampertX": 21
    }
  },
  {
    "path": "src/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SwampertX"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SwampertX"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SwampertX": 34
    }
  }
]
