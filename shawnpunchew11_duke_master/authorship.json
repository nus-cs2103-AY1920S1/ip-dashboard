[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "run{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 26,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "T|0| hey there"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "D|1|hi there |23/05/0019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "E|0|yo |13/11/1219 2100"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "T|0| hi there"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "E|0|book |12/11/1885 2359"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private ListManager listManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    private SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        storage \u003d new Storage(filePath, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            listManager \u003d new ListManager(storage.load(), formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            listManager \u003d new ListManager(formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String fullCommand \u003d ui.inputCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ui.bar();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            c.execute(listManager, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ui.bar();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/backend/ListManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ListManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ArrayList\u003cTask\u003e actualList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListManager(SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.actualList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListManager(ArrayList\u003cTask\u003e taskList, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.actualList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void add(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if(splitCommand[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d fullCommand.split(\"todo\",2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            if (!stringBreaker[1].equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                ToDos todo \u003d new ToDos(stringBreaker[1], this.formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                //Should throw exception here"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String newString \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d newString.split(\"/by\",2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Deadlines deadline \u003d new Deadlines(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String newString \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] stringBreaker \u003d newString.split(\"/at\",2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Date date \u003d formatter.parse(stringBreaker[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                Events event \u003d new Events(stringBreaker[0], formatter, date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                actualList.add(event);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            //Throw exception here"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void iterate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.actualList.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\tYou have nothing on your to-do list!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for(int i \u003d 0; i \u003c actualList.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.print(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.print(i+1 + \".\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.println(actualList.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (index \u003c\u003d actualList.size()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            actualList.get(index - 1).done \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\t  [✓] \" + actualList.get(index - 1).name);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\tTask does not exist!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Task removed \u003d this.actualList.remove(index - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\t  \" + removed);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\tNow you have \" + actualList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void find(String query) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.actualList.isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"\\tYou have nothing on your to-do list!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            for (int i \u003d 0; i \u003c actualList.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                if (actualList.get(i).name.contains(query) \u003d\u003d true) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    tempList.add(actualList.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            if (tempList.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                System.out.println(\"\\tSorry no tasks matched your query!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                for (int j \u003d 0; j \u003c tempList.size(); j++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    System.out.print(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    System.out.print(j+1 + \".\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    System.out.println(tempList.get(j));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 112
    }
  },
  {
    "path": "src/main/java/duke/backend/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Storage(String filePath, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ArrayList\u003cTask\u003e oldList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            String[] splitTask \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            switch(splitTask[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    ToDos todo \u003d new ToDos(splitTask[2], formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    todo.done \u003d isDone(Integer.parseInt(splitTask[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    oldList.add(todo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        Date date \u003d formatter.parse(splitTask[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        Deadlines dl \u003d new Deadlines(splitTask[2], formatter, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        dl.done \u003d isDone(Integer.parseInt(splitTask[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        oldList.add(dl);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        System.out.println(splitTask[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        Date date \u003d formatter.parse(splitTask[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        Events event \u003d new Events(splitTask[2], formatter, date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        event.done \u003d isDone(Integer.parseInt(splitTask[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        oldList.add(event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    System.out.println(\"Task does not exist.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return oldList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void save(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isDone(int num) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 80
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public AddCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listManager.add(this.fullCommand, this.splitCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ui.successfulAdd(listManager);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String[] splitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Command(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.splitCommand \u003d splitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public abstract void execute(ListManager listManager, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public DeleteCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listManager.delete(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public DoneCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        int index \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listManager.done(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ExitCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        for (int i \u003d 0; i \u003c listManager.actualList.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d listManager.actualList.get(i).saveText() + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            storage.save(storage.filePath, output);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            System.out.println(\"Failed to save:\" + e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ListCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listManager.iterate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 22
    }
  },
  {
    "path": "src/main/java/duke/parser/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public FindCommand(String fullCommand, String[] splitCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void execute(ListManager listManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        listManager.find(this.splitCommand[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 22
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public static Command parse(String fullCommand) throws IllegalArgumentException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 0);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if(splitCommand[0].equals(\"todo\") || splitCommand[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                || splitCommand[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new AddCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new DoneCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new ListCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new ExitCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new DeleteCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else if (splitCommand[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            return new FindCommand(fullCommand, splitCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid Command\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Deadlines(String name, SimpleDateFormat formatter, Date date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[D]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓] \" + this.name + \"(by:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X] \" + this.name + \"(by:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"D|\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if(this.done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"1|\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"0|\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d this.name + \"|\" + formatter.format(this.date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Events(String name, SimpleDateFormat formatter, Date date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓] \" + this.name + \"(at:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X] \" + this.name + \"(at:\" + formatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"E|\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if(this.done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"1|\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"0|\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d this.name + \"|\" + formatter.format(this.date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Task(String name, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public abstract String saveText();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 18
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public ToDos(String name, SimpleDateFormat formatter) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        super(name, formatter);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.type \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[✓]\" + this.name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output \u003d this.type + \"[X]\" + this.name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String output \u003d \"T|\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        if(this.done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"1|\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "            output +\u003d \"0|\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        output +\u003d this.name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 34
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import duke.backend.ListManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String logo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    String bar;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.bar \u003d \"\\t_________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.bar();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.print(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        this.bar();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void bar() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(bar);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public String inputCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void successfulAdd(ListManager listManager) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\t  \" + listManager.actualList.get(listManager.actualList.size() - 1));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\tNow you have \" + listManager.actualList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"\\nBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "        System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnpunchew11"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnpunchew11": 53
    }
  }
]
