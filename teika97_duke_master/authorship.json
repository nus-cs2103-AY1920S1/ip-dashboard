[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public AddCommand (String type, String description, String dateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute(taskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "                tasks.list.add(new Todo(description));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "                tasks.list.add(new Deadline(description,dateTime));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "                tasks.list.add(new Event(description,dateTime));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"   \" + tasks.list.get(tasks.list.size() - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (tasks.list.size() \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.list.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 34
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Command (String type) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (this.type.equals(\"bye\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute(taskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type+\"-\"+super.getInfo()+\"-\"+this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String itemNo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public DeleteCommand (String type, String itemNo) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.itemNo \u003d itemNo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // delete task from list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute(taskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int item \u003d Integer.parseInt(itemNo) - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"   \" + tasks.list.get(item));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        tasks.list.remove(item);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.list.size() + \" in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import javax.swing.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private taskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Duke (String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks \u003d new taskList(storage.loadFile());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "            tasks \u003d new taskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "                Command c \u003d parser.parseCommand(fullCommand,tasks.getSize());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "                c.execute(tasks,ui,storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "            storage.writeToFile(tasks.list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "            ui.showSavingError();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new Duke(\"/Users/Kai/Documents/GitHub/duke/data/data.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teika97": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String err;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.err \u003d s;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"DukeException: \"+\"\\u2639\"+ \" OOPS!!! \"+err;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 9
    }
  },
  {
    "path": "src/main/java/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class EditCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String itemNo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public EditCommand (String type, String itemNo) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.itemNo \u003d itemNo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // marks tasks as done for the done command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute(taskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int item \u003d Integer.parseInt(itemNo) - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        tasks.list.get(item).isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // print out completed task with indentation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"   \" + tasks.list.get(item));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type+\"-\"+super.getInfo()+\"-\"+this.at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    boolean isTodo, isDeadline, isEvent, isList,isBye,isDone,isDelete;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    String [] cmdBreakdown;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // Reformats command line based on command type i.e. todo, deadline, event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Command parseCommand(String cmd, int n) throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        cmdBreakdown \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Reformatted command only has command type, description, /by or /at and time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String [] cmdFormatted \u003d new String[4];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Command finalCmd \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        boolean continuing \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Directly input command type into first element of cmdFormatted"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        cmdFormatted[i] \u003d this.cmdBreakdown[i];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isTodo \u003d cmdFormatted[0].equals(\"todo\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDeadline \u003d cmdFormatted[0].equals(\"deadline\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isEvent \u003d cmdFormatted[0].equals(\"event\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isList \u003d cmdFormatted[0].equals(\"list\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isBye \u003d cmdFormatted[0].equals(\"bye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDone \u003d cmdFormatted[0].equals(\"done\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "        isDelete \u003d cmdFormatted[0].equals(\"delete\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        i++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int j\u003d1; j\u003ccmdBreakdown.length; j++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (cmdBreakdown[j].contains(\"/\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "                cmdFormatted[i] \u003d cmdBreakdown[j];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "                continuing \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "                if (!continuing) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    cmdFormatted[i] \u003d cmdBreakdown[j];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    cmdFormatted[i] \u003d cmdFormatted[i].concat(\" \"+cmdBreakdown[j]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "                continuing \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "        validateCmd(cmdFormatted, n);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isBye) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new Command(cmdFormatted[0]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new PrintCommand(cmdFormatted[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isTodo) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new AddCommand(cmdFormatted[0],cmdFormatted[1],null);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDeadline || isEvent) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String convertedDate;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teika97"
        },
        "content": "                convertedDate \u003d setDate(cmdFormatted[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teika97"
        },
        "content": "                System.out.println(\"Warning - Unable to format date/time input.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teika97"
        },
        "content": "                convertedDate \u003d cmdFormatted[3];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new AddCommand(cmdFormatted[0],cmdFormatted[1],convertedDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new EditCommand(cmdFormatted[0], cmdFormatted[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDelete) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teika97"
        },
        "content": "            finalCmd \u003d new DeleteCommand(cmdFormatted[0], cmdFormatted[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return finalCmd;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // Reformat date/time input into (dd MMMM, yyyy hh a) format e.g. 12 December, 2019, 06pm"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // Adapted from https://stackoverflow.com/questions/10308720/java-change-date-format-from-custom-date-to-mm-dd-yyyy"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public static String setDate(String input) throws ParseException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teika97"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teika97"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMM, yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Date convertedDate \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teika97"
        },
        "content": "        convertedDate \u003d parser.parse(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return formatter.format(convertedDate);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void validateCmd(String [] cmd, int n) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // validate user input command for following requirements"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (!(isTodo||isDeadline||isEvent||isList||isBye||isDone||isDelete)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teika97"
        },
        "content": "            throw new DukeException(\"Command type not valid.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isTodo||isDeadline||isEvent) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (cmd[1]\u003d\u003dnull) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"The description of a \"+cmd[0]+\" cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if ((isDeadline||isEvent)\u0026\u0026(cmd[3]\u003d\u003dnull)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"No date/time input for \"+cmd[0]+ \".\"+"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teika97"
        },
        "content": "                        \" Note: Input for \"+cmd[0]+\" must have \"+(isDeadline? \"/by\" : \"/at\")+\" before date/time.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if ((isDeadline||isEvent)\u0026\u0026!(cmd[2].equals(isDeadline? \"/by\" : \"/at\"))) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Input for \"+cmd[0]+\" must have \"+(isDeadline? \"/by\" : \"/at\")+\".\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (isDone || isDelete) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teika97"
        },
        "content": "            int itemNo;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teika97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teika97"
        },
        "content": "                itemNo \u003d Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teika97"
        },
        "content": "            } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Unable to format due to improper input.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (itemNo \u003e n) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Task \"+itemNo+\" not found in list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teika97"
        },
        "content": "            if (!(cmd[2]\u003d\u003dnull)||!(cmd[3]\u003d\u003dnull)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teika97"
        },
        "content": "                throw new DukeException(\"Unable to format due to improper input.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 123
    }
  },
  {
    "path": "src/main/java/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class PrintCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public PrintCommand (String type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    // calls method to print all tasks in list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute(taskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.list.size(); i++) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "            int listNum \u003d i+1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "            System.out.println(listNum+\".\"+tasks.list.get(i));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 14
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected File f;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Storage (String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        ArrayList \u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "            String [] item \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "            switch (item[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.add(new Todo(item[2]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "                        list.get(list.size()-1).isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.add(new Event(item[2],item[3]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "                        list.get(list.size()-1).isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    list.add(new Deadline(item[2],item[3]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    if (item[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teika97"
        },
        "content": "                        list.get(list.size()-1).isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teika97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teika97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teika97"
        },
        "content": "        String[] toBeSaved \u003d new String[100];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teika97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teika97"
        },
        "content": "            Task item \u003d list.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teika97"
        },
        "content": "            toBeSaved[i] \u003d item.getInfo();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teika97"
        },
        "content": "        for (int j \u003d 0; j \u003c list.size(); j++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teika97"
        },
        "content": "            fw.write(toBeSaved[j] + System.lineSeparator());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teika97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 57
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return (isDone? \"\\u2713\" : \"\\u2718\"); //return tick or x symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "            return \"1\"+\"-\"+this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"0\"+\"-\"+this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[\"+this.getStatusIcon()+\"]\"+\" \"+this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teika97": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return this.type+\"-\"+super.getInfo();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new DukeException(\"Unable to find File!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void showSavingError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new DukeException(\"Unable to save File!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        /**String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "         + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "         System.out.println(\"Hello from\\n\" + logo);**/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teika97"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void showError(String err) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(err);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void sayGoodbye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teika97"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 37
    }
  },
  {
    "path": "src/main/java/taskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class taskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public taskList (ArrayList\u003cTask\u003e loadFile) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        list \u003d loadFile;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public int getSize () {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 14
    }
  },
  {
    "path": "src/test/java/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private taskList tasksTest \u003d new taskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Ui uiTest \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Storage storageTest \u003d new Storage(\"stuff\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - todo command type"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"todo\",\"buy books\",null).execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(1,tasksTest.list.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - event command type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"event\",\"birthday party\",\"08-12-2019 18:00\").execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(2,tasksTest.list.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test AddCommand works for correct input - deadline command type"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": "        new AddCommand(\"deadline\",\"report\",\"11-12-2019 23:59\").execute(tasksTest,uiTest,storageTest);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(3,tasksTest.list.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 23
    }
  },
  {
    "path": "src/test/java/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(true,new Command(\"bye\").isExit());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"todo\",\"buy books\",null).isExit());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new PrintCommand(\"list\").isExit());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"event\",\"birthday party\",\"08-12-2019 18:00\").isExit());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new AddCommand(\"deadline\",\"project\",\"31-08-2019 23:59\").isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new DeleteCommand(\"delete\",\"2\").isExit());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(false,new EditCommand(\"done\",\"1\").isExit());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 15
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teika97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teika97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teika97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teika97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teika97"
        },
        "content": "    private Command cmdTest;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teika97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teika97"
        },
        "content": "    public void testSetDate() throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test for correct input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teika97"
        },
        "content": "        assertEquals(\"29 August, 2019, 06:00 PM\",new Parser().setDate(\"29-08-2019 18:00\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teika97"
        },
        "content": "        // Test for exception thrown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teika97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assertEquals(\"Unparseable date: 31 Aug 2019 11:59pm\",new Parser().setDate(\"31 Aug 2019 11:59pm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teika97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teika97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teika97"
        },
        "content": "            assertEquals(\"Unparseable date: \\\"31 Aug 2019 11:59pm\\\"\",e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teika97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teika97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teika97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teika97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teika97": 23
    }
  }
]
