[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "E|0|test|2/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "T|0|nothing"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "D|1|testing|13/2/2019 0900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "D|1|test|3/4/2019 0100"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected Date byDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String hour;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String minute;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public Deadline(String description, String by) throws InvalidTaskArgumentDukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String[] dateTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String[] date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.day \u003d date[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.month \u003d date[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.year \u003d date[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.hour \u003d dateTime[1].substring(0, 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.minute \u003d dateTime[1].substring(2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.byDate \u003d format.parse(day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } catch (Exception e) { throw new InvalidTaskArgumentDukeException(\"â˜¹ OOPS!!! The format of event timing is invalid.\");}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String dateToString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        SimpleDateFormat format;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        if (this.day.equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027st of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else if (this.day.equals(\"2\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027nd of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else if (this.day.equals(\"3\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027rd of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027th of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return format.format(this.byDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public Date getByDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setByDate(Date byDate) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setDay(String day) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getMonth() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setMonth(String month) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getYear() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setYear(String year) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getHour() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return hour;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setHour(String hour) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getMinute() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return minute;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setMinute(String minute) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.minute \u003d minute;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateToString() + \")\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 108
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import javax.swing.plaf.basic.BasicInternalFrameTitlePane;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static void runDuke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String currentCommand \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        ArrayList\u003cTask\u003e addedItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            getTasksFromFile(addedItems, filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } catch (InvalidTaskArgumentDukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        while (!currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            currentCommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                if (!currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    if (currentCommand.equals(\"list\")) { // Showing list of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        for (int i \u003d 0; i \u003c addedItems.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     \" + (i + 1) + \".\" + addedItems.get(i));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    } else if (currentCommand.length() \u003e\u003d 6 \u0026\u0026 currentCommand.substring(0, 4).equals(\"done\")) { // Marking a task as done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(currentCommand.substring(5)) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c addedItems.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            addedItems.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"       \" + addedItems.get(taskNumber));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! There is no task labelled that number.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    } else if (currentCommand.length() \u003e\u003d 8 \u0026\u0026 currentCommand.substring(0, 6).equals(\"delete\")) { // Deleting a task in the list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(currentCommand.substring(7)) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c addedItems.size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            Task removedTask \u003d addedItems.get(taskNumber);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            addedItems.remove(taskNumber);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"       \" + removedTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     Now you have \" + addedItems.size() + (addedItems.size() \u003e 1 ? \" tasks in the list.\" : \" task in the list.\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! There is no task labelled that number.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    } else if (!currentCommand.equals(\"\")){ // Adding new task to the list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        String[] tempArray \u003d currentCommand.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        String description \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        if (tempArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            description \u003d currentCommand.substring(5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                currentTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        } else if (tempArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            String by \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            boolean descriptionRecorded \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            for (int i \u003d 1; i \u003c tempArray.length; i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                if (!tempArray[i].equals(\"/by\") \u0026\u0026 !descriptionRecorded) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    description +\u003d tempArray[i];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    if (i + 1 \u003c tempArray.length \u0026\u0026 !tempArray[i + 1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                        description +\u003d \" \";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                } else if (tempArray[i].equals(\"/by\") \u0026\u0026 !descriptionRecorded){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    descriptionRecorded \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                } else if (!tempArray[i].equals(\"/by\") \u0026\u0026 descriptionRecorded){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    by +\u003d tempArray[i];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    if (i !\u003d tempArray.length - 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                        by +\u003d \" \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            if (!description.equals(\"\") \u0026\u0026 !by.equals(\"\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                currentTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description/timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        } else if (tempArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            String at \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            boolean descriptionRecorded \u003d false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            for (int i \u003d 1; i \u003c tempArray.length; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                if (!tempArray[i].equals(\"/at\") \u0026\u0026 !descriptionRecorded) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    description +\u003d tempArray[i];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    if (i + 1 \u003c tempArray.length \u0026\u0026 !tempArray[i + 1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                        description +\u003d \" \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                } else if (tempArray[i].equals(\"/at\") \u0026\u0026 !descriptionRecorded){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    descriptionRecorded \u003d true;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                } else if (!tempArray[i].equals(\"/at\") \u0026\u0026 descriptionRecorded){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    at +\u003d tempArray[i];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    if (i !\u003d tempArray.length - 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                        at +\u003d \" \";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            if (!description.equals(\"\") \u0026\u0026 !at.equals(\"\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                currentTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description/timing of an event cannot be empty.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"       \" + currentTask);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(\"     Now you have \" + addedItems.size() + (addedItems.size() \u003e 1 ? \" tasks in the list.\" : \" task in the list.\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                        throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } catch (InvalidCommandDukeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } catch (InvalidTaskDescriptionDukeException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } catch (InvalidTaskArgumentDukeException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        loadTasksToFile(addedItems, filePath);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static void getTasksFromFile(ArrayList\u003cTask\u003e taskList, String filePath) throws FileNotFoundException, InvalidTaskArgumentDukeException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        File taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        Scanner scanner \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            String textLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            taskList.add(stringToTask(textLine));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static void loadTasksToFile(ArrayList\u003cTask\u003e taskList, String filePath) throws IOException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                fileWriter.write(taskToString(taskList.get(i)));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                    fileWriter.write(System.lineSeparator());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static Task stringToTask(String text) throws InvalidTaskArgumentDukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            String[] textSplit \u003d text.split(\"\\\\|\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            Task resultTask;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            if (textSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                resultTask \u003d new ToDo(textSplit[2]);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } else if (textSplit[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                resultTask \u003d new Deadline(textSplit[2], textSplit[3]);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                resultTask \u003d new Event(textSplit[2], textSplit[3]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            if (textSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                resultTask.markAsDone();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            return resultTask;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static String taskToString(Task task) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String taskType \u003d \"\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        String isDone \u003d \"0\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            isDone \u003d \"1\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            taskType \u003d \"T\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            return taskType + \"|\" + isDone + \"|\" + description;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else { // event or deadline"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                taskType \u003d \"E\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                time \u003d ((Event) task).getAt();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                taskType \u003d \"D\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "                time \u003d ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            return taskType + \"|\" + isDone + \"|\" + description + \"|\" + time;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        runDuke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 256,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected Date atDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String hour;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String minute;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public Event(String description, String at) throws InvalidTaskArgumentDukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            String[] dateTime \u003d at.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            String[] date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.day \u003d date[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.month \u003d date[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.year \u003d date[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.hour \u003d dateTime[1].substring(0, 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.minute \u003d dateTime[1].substring(2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            this.atDate \u003d format.parse(day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            throw new InvalidTaskArgumentDukeException(\"â˜¹ OOPS!!! The format of event timing is invalid.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String dateToString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        SimpleDateFormat format;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        if (this.day.equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027st of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else if (this.day.equals(\"2\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027nd of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else if (this.day.equals(\"3\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027rd of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "            format \u003d new SimpleDateFormat(\"d\" + \"\u0027th of \u0027\" + \"MMMM yyyy\" + \"\u0027, \u0027\" + \"hh:mma\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return format.format(this.atDate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public Date getAtDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return atDate;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setAtDate(Date atDate) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.atDate \u003d atDate;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setDay(String day) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getMonth() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setMonth(String month) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getYear() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setYear(String year) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getHour() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return hour;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setHour(String hour) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.hour \u003d hour;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getMinute() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return minute;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setMinute(String minute) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.minute \u003d minute;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateToString() + \")\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 111
    }
  },
  {
    "path": "src/main/java/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public InvalidCommandDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskArgumentDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class InvalidTaskArgumentDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public InvalidTaskArgumentDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskDescriptionDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class InvalidTaskDescriptionDukeException extends InvalidTaskArgumentDukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public InvalidTaskDescriptionDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 38
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Davidcwh": 11
    }
  }
]
