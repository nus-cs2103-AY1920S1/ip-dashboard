[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# CS2103T Individual Component - Duke, The Handsome Bot"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "![OH MAI GAWD](https://i.kym-cdn.com/photos/images/newsfeed/000/972/842/1aa.gif)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "***Save me plz, Bell Curve God***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "##Tutorials "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "krusagiz": 7,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    mainClassName \u003d\"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "run{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Checkbox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public enum Checkbox {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    TICK(\"[✓]\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    CROSS(\"[✗]\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public final String icon;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    private Checkbox (String icon) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.icon \u003d icon;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 11
    }
  },
  {
    "path": "src/main/java/CmdInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * Provides Command Line Interface elements"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * Makes printing easier"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class CmdInterface {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void printHBars(String str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        String horizontalBar \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        String[] strSplit \u003d str.split(\"\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        System.out.println(horizontalBar);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        for (String line: strSplit) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            System.out.println(\"    \" + line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        System.out.println(horizontalBar);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    private String deadlineTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public Deadline (String deadlineName, String deadlineTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(deadlineName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return super.getTaskName() + \" (by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public char getRepLetter() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * Drives the Duke bot"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * This is the main driver class and entry point."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    static final String welcomeMsg \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            \"What can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    static final String exitMsg \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(welcomeMsg);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        boolean isGoodbye \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        while (!isGoodbye) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            String input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.matches(\"todo.*\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeTodoException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else if (input.charAt(4) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        addTodo(input.substring(5));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.matches(\"deadline.*\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeDeadlineException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else if (input.charAt(8) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        addDeadline(input.substring(9));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.matches(\"event.*\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeEventException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else if (input.charAt(5) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        addEvent(input.substring(6));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                        throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.matches(\"done\\\\s\\\\d+\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    doDoneTask(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.matches(\"delete\\\\s\\\\d+\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    doDeleteTask(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    exitApp();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    isGoodbye \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                    throw new DukeUnknownCommandException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            } catch (DukeException dukeEx) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                //do nothing"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                CmdInterface.printHBars(\"☹ OOPS!!! Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void exitApp() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(exitMsg);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    /* deprecated"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void addTask(String taskName) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        taskList.add(new Task(taskName));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"added: \" + taskName);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void addTodo(String todoName) throws DukeTodoException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        if (todoName.length() \u003c 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            throw new DukeTodoException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            //main body"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            Todo newTodo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            taskList.add(newTodo);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            printAddSuccess(newTodo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void addDeadline(String deadlineDetail) throws DukeDeadlineException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        if (deadlineDetail.length() \u003c 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            throw new DukeDeadlineException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        } else if (!deadlineDetail.contains(\"/by\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            throw new DukeDeadlineException(\"☹ OOPS!!! The format of deadline is wrong!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            //main body"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            String[] detailSplit \u003d deadlineDetail.split(\" /by \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(detailSplit[0], detailSplit[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            taskList.add(newDeadline);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            printAddSuccess(newDeadline);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void addEvent(String eventDetail) throws DukeEventException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        if (eventDetail.length() \u003c 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            throw new DukeEventException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        } else if (!eventDetail.contains(\"/at\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            throw new DukeEventException(\"☹ OOPS!!! The format of event is wrong!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            //main body"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            String[] detailSplit \u003d eventDetail.split(\" /at \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            Event newEvent \u003d new Event(detailSplit[0], detailSplit[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            taskList.add(newEvent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            printAddSuccess(newEvent);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void doDoneTask(String input) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        int chosenTaskNo \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        Task chosenTask \u003d taskList.get(chosenTaskNo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        chosenTask.setDone(true);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                \" \" + Checkbox.TICK.icon + \" \"  + chosenTask.getTaskName());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void doDeleteTask(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        int chosenTaskNo \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        Task chosenTask \u003d taskList.get(chosenTaskNo);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        taskList.remove(chosenTaskNo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                \"  \"+ chosenTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                \"Now you have \"+ taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "            sb.append(i++ + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(sb.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void printAddSuccess(Task task) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                \"  \" + task.toString() +\"\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "                \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 151,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeDeadlineException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeDeadlineException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 12
    }
  },
  {
    "path": "src/main/java/DukeEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeEventException () {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeEventException (String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 12
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeException () {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 11
    }
  },
  {
    "path": "src/main/java/DukeTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeTodoException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeTodoException () {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 8
    }
  },
  {
    "path": "src/main/java/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public DukeUnknownCommandException () {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        CmdInterface.printHBars(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public Event (String eventName, String eventTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(eventName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return super.getTaskName() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public char getRepLetter() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 20
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * Represents the Task object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * One Task object per task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public char getRepLetter() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return \u0027 \u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        String checkbox \u003d this.isDone() ? Checkbox.TICK.icon : Checkbox.CROSS.icon;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return \"[\" + this.getRepLetter() + \"]\" + checkbox + \" \" + this.getTaskName();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 37
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * Represents the Todo object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " * One Todo object per Todo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public Todo (String todoName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        super(todoName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public char getRepLetter() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 16
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "        System.out.println(\"Duke Test, Zetsubou wo Kurau\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 5
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "      [T][✗] Draw Mona Liza"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "      [D][✗] Do Homework (by: never)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "      [E][✗] DOTA wcg (at: Mon 9pm - 12pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    1.[T][✗] Draw Mona Liza"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    2.[D][✗] Do Homework (by: never)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    3.[E][✗] DOTA wcg (at: Mon 9pm - 12pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "     [✓] Draw Mona Liza"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    1.[T][✓] Draw Mona Liza"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    2.[D][✗] Do Homework (by: never)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    3.[E][✗] DOTA wcg (at: Mon 9pm - 12pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "      [T][✓] Draw Mona Liza"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    1.[D][✗] Do Homework (by: never)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    2.[E][✗] DOTA wcg (at: Mon 9pm - 12pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "todo Draw Mona Liza"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "deadline Do Homework /by never"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "event DOTA wcg /at Mon 9pm - 12pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "krusagiz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "krusagiz"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "krusagiz": 34
    }
  }
]
