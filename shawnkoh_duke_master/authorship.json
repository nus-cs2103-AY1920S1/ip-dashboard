[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 28,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * A task management application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static final String STORAGE_PATHNAME \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private boolean isActive;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns a {@link Duke}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        isActive \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        storage \u003d new Storage(STORAGE_PATHNAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Parses and executes the input given."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param input The input to parse and execute"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return The response from Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            c.setData(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            CommandResult result \u003d c.execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            isActive \u003d !c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return result.feedback;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return isActive;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 55,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            primaryStage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 29
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.lang.System.lineSeparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to add a {@link Task}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String data \u003d toAdd.stringify();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        if (tasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            data \u003d lineSeparator() + data;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        storage.append(data);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new CommandResult(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                + lineSeparator() + ui.INDENT + toAdd"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                + lineSeparator() + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to shut down the {@link duke.Duke} application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new CommandResult(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Executes the {@link Command}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException If the command failed to execute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public abstract CommandResult execute() throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Sets the data to be used by the {@link Command}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param ui UI interface."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void setData(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns true if the command will stop the {@link Duke} application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return True if the command will stop the {@link Duke} application. False otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 47
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a non-null result from executing the {@link Command}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public final String feedback;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult(String feedback) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.feedback \u003d requireNonNull(feedback);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to add a {@link Deadline}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public DeadlineCommand(String description, Date by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(new Deadline(description, by));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.lang.System.lineSeparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to delete a {@link Task}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private final int toDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public DeleteCommand(int id) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.toDelete \u003d id;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        final Task task \u003d tasks.delete(toDelete);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        storage.save(tasks.stringify());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new CommandResult(\"Noted. I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                + lineSeparator() + ui.INDENT + task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                + lineSeparator() + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.lang.System.lineSeparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to mark a {@link Task} as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private int toMarkAsDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.toMarkAsDone \u003d id;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Task task \u003d tasks.get(toMarkAsDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            storage.save(tasks.stringify());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new CommandResult(\"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    + lineSeparator() + ui.INDENT + task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(\"Marking task with ID \" + toMarkAsDone + \" failed: Invalid ID\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to add an {@link Event}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public EventCommand(String description, Date at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(new Event(description, at));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.lang.System.lineSeparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        TaskList result \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        if (result.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new CommandResult(\"There are no matching tasks in your list\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            StringBuilder feedback \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d result.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                Task task \u003d result.get(i - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                feedback.append(lineSeparator() + i + \". \" + task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new CommandResult(feedback.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 32
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to inform the user that he has entered an incorrect command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new CommandResult(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 12
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static java.lang.System.lineSeparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to display a list of {@link Task}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new CommandResult(\"There are no tasks in your list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        StringBuilder feedback \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            feedback.append(lineSeparator() + i + \". \" + task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new CommandResult(feedback.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Command} to add a {@link ToDo}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class ToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(new ToDo(description));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a duke-specific {@link Exception}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.IncorrectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a parser that parses strings and creates commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Parses the command contained in a {@link String} and returns a {@link Command} that represents it."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param fullCommand {@link String} containing the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return {@link Command} representing the command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException if the command has parser errors."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String[] arr \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String commandWord \u003d arr[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareDeadline(arr[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareEvent(arr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case ToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareToDo(arr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareDelete(arr[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareFind(arr[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareDone(arr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            case ByeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                return prepareIncorrect();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return prepareIncorrect();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareToDo(String args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String description \u003d args;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new ToDoCommand(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareDeadline(String args) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            String[] params \u003d args.split(\" /by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            String description \u003d params[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Date by \u003d DateUtil.parse(params[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(\"An error occurred while creating a Deadline: Insufficient parameters\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareEvent(String args) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            String[] params \u003d args.split(\" /at \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            String description \u003d params[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Date at \u003d DateUtil.parse(params[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return new EventCommand(description, at);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(\"An error occurred while creating an Event: Insufficient parameters\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        int id \u003d Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new DeleteCommand(id);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareFind(String args) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new FindCommand(args);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareDone(String args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        int id \u003d Integer.parseInt(args) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new DoneCommand(id);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private static Command prepareIncorrect() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new IncorrectCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 112
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a storage system to add and save data as .txt files."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Storage(String pathname) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Loads the data from the storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException If the loading of the data failed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                String[] params \u003d input.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                String type \u003d params[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                Boolean done \u003d params[1].equals(\"1\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                String description \u003d params[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    Date by \u003d DateUtil.parse(params[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    Date at \u003d DateUtil.parse(params[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    throw new DukeException(\"Invalid parameter specified\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                if (done) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                throw new DukeException(\"Storage file did not exist\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                throw new DukeException(\"An error occurred when setting up the storage file: \" + ex.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Saves the data into the storage."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param data Data to be saved."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException If the data failed to save."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void save(String data) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fw.write(data);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(\"An error occurred when saving data to storage\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Appends the data into the storage."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param data Data to be appended."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException If the data failed to be appended."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void append(String data) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fw.append(data);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(\"An error occurred while appending data to storage\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 115
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Task} that has a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateUtil.format(by) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"D | \" + super.stringify() + \" | \" + DateUtil.format(by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents an event as a {@link Task}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateUtil.format(at) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"E | \" + super.stringify() + \" | \" + DateUtil.format(at);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a task that can be marked as complete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Marks the {@link Task} as complete."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns true if the {@link Task} is complete, otherwise returns false."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return true if the {@link Task} is complete, otherwise returns false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns a tick or X symbol."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return a tick or X symbol."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns a stringified version of the {@link Task} that is meant to be used in the {@link duke.storage.Storage}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return a stringified version of the {@link Task} that is meant to be used in the {@link duke.storage.Storage}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return (isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 53
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a list of {@link Task}s."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Adds a {@link Task} to the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param task the {@link Task} to be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns the number of {@link Task}s in this list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return the number of {@link Task}s in this list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns the {@link Task} at the specified position in this list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param id index of the {@link Task} to return"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return the {@link Task} at the specified position in this list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Deletes the element at the specified position in this list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param id the index of the {@link Task} to be deleted"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return the {@link Task} that was removed from the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Task delete(int id) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return tasks.remove(id);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns a stringified list of every {@link Task} to be used in the {@link duke.storage.Storage}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return a stringified list of every {@link Task} to be used in the {@link duke.storage.Storage}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(tasks.get(0).stringify());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            sb.append(task.stringify());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Returns a new {@link TaskList} with {@link Task}s that contains the keyword."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param keyword the string to search for."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return a new {@link TaskList} with the filtered copy."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new TaskList(tasks.stream()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                .filter(task -\u003e task.description.contains(keyword))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 85
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a {@link Task} to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return \"T | \" + super.stringify();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 20
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 62
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 54
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents the UI of the {@link duke.Duke} programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Prints out a line."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        System.out.println(INDENT + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Prints out an indented message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param message the message to be printed out."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        System.out.println(INDENT + \" \" + message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Prints out an indented error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param error the error message to be printed out."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showMessage(\"☹ OOPS!!! \" + error);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Prints out a welcome message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Advances this {@link Scanner} past the current line and returns the command that was skipped."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return the command that was skipped."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 61
    }
  },
  {
    "path": "src/main/java/duke/util/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " * Represents a list of helper {@link Date} methods."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Parses text from a {@link String} to produce a {@link Date}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param text A {@link String} to be parsed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return A {@link Date} parsed from the {@link String}. In case of error, returns null."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @throws DukeException if text is null."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static Date parse(String text) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            return formatter.parse(text);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * Formats the given {@link Date} into a date-time string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @param date the date-time value to be formatted into a date-time string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     * @return the formatted date-time string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public static String format(Date date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        return formatter.format(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 39
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 19
    }
  },
  {
    "path": "src/test/java/task/TestDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class TestDeadline {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void setUp() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        deadline \u003d new Deadline(\"return a book\", DateUtil.parse(\"1/12/2019 1800\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void toString_normal_noException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(deadline.toString(), \"[D][✘] return a book (by: 01/12/2019 1800)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void stringify_normal_noException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(deadline.stringify(), \"D | 0 | return a book | 01/12/2019 1800\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 29
    }
  },
  {
    "path": "src/test/java/task/TestTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "public class TestTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        task \u003d new Task(\"return a book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertFalse(task.isDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void toString_all() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(task.toString(), \"[✘] return a book\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(task.toString(), \"[✓] return a book\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    public void stringify() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(task.stringify(), \"0 | return a book\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "        assertEquals(task.stringify(), \"1 | return a book\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnkoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnkoh": 40
    }
  }
]
