[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "group \u0027leeyiyuan.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    mainClassName \u003d \"main.java.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "  standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027main.java.Duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 12,
      "Jeffry Lum": 14
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 17,
      "Jeffry Lum": 83
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public DeadlineTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.done ? \"✓\" : \"✗\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.title,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.deadline); "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.DeadlineTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.EventTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            boolean hasAddedTask \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            Task addedTask \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    System.out.println(String.format("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                \"%d.%s\", "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                i + 1, "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                task.toString()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"delete ?\", input)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The item id of a delete command cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"delete [0-9]+\", input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    Task task \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    System.out.println(String.format("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                \"Noted. I\u0027ve removed this task:\\n%s\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                task.toString()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    System.out.println(String.format("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                \"Now you have %d %s in the list.\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                tasks.size(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    throw new DukeException(\"Invalid item selected for deletion.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"done ?\", input)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The item id of a done command cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"done [0-9]+\", input)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                int index \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                if (index \u003e 0 \u0026\u0026 index \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    task.setDone(true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    System.out.println(String.format("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                \"Nice! I\u0027ve marked this task as done:\\n%s\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                                task.toString()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                    throw new DukeException(\"Invalid item selected to mark as done.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"todo ?\", input)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"todo .+\", input)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                TodoTask task \u003d new TodoTask();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                task.setTitle(input.split(\"todo \", 2)[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                hasAddedTask \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                addedTask \u003d task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"deadline ?/by.*\", input)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"deadline .+ /by ?\", input)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The cutoff of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"deadline .+ /by .+\", input)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                String[] data \u003d input.split(\"deadline \", 2)[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                DeadlineTask task \u003d new DeadlineTask();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                task.setTitle(data[0]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                task.setDeadline(data[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                hasAddedTask \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                addedTask \u003d task;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"event ?/at.*\", input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"event .+ /at ?\", input)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else if (Pattern.matches(\"event .+ /at .+\", input)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                String[] data \u003d input.split(\"event \", 2)[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                EventTask task \u003d new EventTask();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                task.setTitle(data[0]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                task.setTime(data[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                hasAddedTask \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                addedTask \u003d task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                throw new DukeException(\"Unknown command.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            if (hasAddedTask) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                System.out.println(String.format(\"  %s\", addedTask.toString()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                System.out.println(String.format("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                            \"Now you have %d %s in the list.\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                            tasks.size(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                            tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 110,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 9
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public EventTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.done ? \"✓\" : \"✗\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.title,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.time); "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public Task() { }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 26
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "import main.java.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public TodoTask() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    public String toString() { "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "        return String.format(\"[T][%s] %s\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.done ? \"✓\" : \"✗\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "                this.title); "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leeyiyuan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leeyiyuan": 34
    }
  }
]
