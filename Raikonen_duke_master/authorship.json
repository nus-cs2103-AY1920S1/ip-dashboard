[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "Duke is a Todo Manager created as part of CS2103\u0027s Individual Project.  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "Built in Java with Gradle."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "![App UI Screencap](docs/Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "1. Download the latest release"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "2. Ensure that Java is installed on your machine (Java 11 recommended)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "3. Run the .jar file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "## Resources"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "* [User Guide](https://raikonen.github.io/duke/)"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "Raikonen": 10
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Change this to your main class (Either DukeCliLauncher or DukeGuiLauncher)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    mainClassName \u003d \u0027DukeGuiLauncher\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "run {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.1\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "Raikonen": 34
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `todo` command can be used to add a Todo to your TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "todo \u003ctodo_task\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `deadline` command can be used to add a Deadline to your TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "deadline \u003cdeadline_task\u003e /by \u003cDD/MM/YYYY\u003e \u003cHHMM\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `event` command can be used to add an Event to your TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "event \u003cevent_name\u003e /at \u003cDD/MM/YYYY\u003e \u003cHHMM\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `list` command can be used show tasks in your active TaskList and also saved archives."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `done` command can be used to mark a Task as complete."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "done \u003ctask_number\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### delete"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `delete` command can be used to delete a task from your active TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "delete \u003ctask_number\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### clear"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `clear` command can be used clear your active TaskList of all tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "clear"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `empty` command can be used to delete all your archived TaskLists."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "empty"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### find"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `find` command can be used to find tasks with description that matches the input pattern partially or completely."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "find \u003cpattern\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### archive"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `archive` command can be used to archive current tasks to be retrieved later.  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "archive \u003carchive_name\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### retrieve"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `retrieve` command can be used to retrieve archived TaskLists and add them to your active TaskList.  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "retrieve \u003carchive_name\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "#### bye"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "The `bye` command can be used to close the application."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "bye"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "Raikonen": 66
    }
  },
  {
    "path": "src/main/java/DukeCliLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.DukeCli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * CS2103T INDIVIDUAL PROJECT - DUKE."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeCliLauncher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start command line application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param args Main arguments"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        new DukeCli().run();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Raikonen": 13
    }
  },
  {
    "path": "src/main/java/DukeGuiLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.DukeGui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeGuiLauncher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Application.launch(DukeGui.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 12
    }
  },
  {
    "path": "src/main/java/duke/DukeCli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.Clui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeCli {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Clui clui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Storage storage \u003d new Storage(new File(\"data\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Main function for Duke CLI application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        clui \u003d new Clui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean taskFileExists \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean storageInitialised \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            storageInitialised \u003d storage.initialise();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (SecurityException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            clui.echoException(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Try to load data */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList.loadData(storage.getCurrentTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskFileExists \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                clui.echoException(e2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            clui.echoException(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        clui.greet(taskFileExists, storageInitialised);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Interaction with User */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean isByeBye \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        while (!isByeBye) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String inputCommand \u003d clui.readCommand(); // Initial Input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Command c \u003d Parser.parseCommand(inputCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                c.execute(storage, taskList, clui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                if (c.isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    isByeBye \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                clui.echoException(new DukeException(\"Index Out of Bounds Exception Caught\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                clui.echoException(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                clui.echoException((new DukeException(e.getMessage())));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 70
    }
  },
  {
    "path": "src/main/java/duke/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.gui.DialogBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.Gui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeGui extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start Application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param primaryStage Primary Stage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Gui gui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TextField userTextField;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Image avatar;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Setup **/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        avatar \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar_placeholder.png\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage \u003d new Storage(new File(\"data\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        gui \u003d new Gui(avatar);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setStyle(\"-fx-background: #303030\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setContent(gui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userTextField \u003d new TextField();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userTextField, sendButton);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Layout **/"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        gui.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userTextField.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setLeftAnchor(userTextField, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(userTextField, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Functionality **/"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            handleUserInput(userTextField.getText());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userTextField.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            handleUserInput(userTextField.getText());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        gui.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Display **/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        initialiseDuke();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Initialise DukeGui."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void initialiseDuke() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean taskFileExists \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean storageInitialised \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            storageInitialised \u003d storage.initialise();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (SecurityException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            gui.echoException(e);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Try to load data */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList.loadData(storage.getCurrentTasks());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskFileExists \u003d false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                gui.echoException(e2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            gui.echoException(e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        gui.greet(taskFileExists, storageInitialised);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Handle user input into text box."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param userInput User input"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void handleUserInput(String userInput) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        gui.echoUserMessage(userInput);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        getResponse(userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userTextField.clear();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Interface with Duke components to get response displayed in GUI."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param input Input command"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void getResponse(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String inputCommand \u003d input; // Initial Input"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            Command c \u003d Parser.parseCommand(inputCommand);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            c.execute(storage, taskList, gui);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (c.isExit) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            gui.echoException(new DukeException(\"Index Out of Bounds Exception Caught\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            gui.echoException(e);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            gui.echoException((new DukeException(e.getMessage())));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 153
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAdd Task to be Added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute add command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.appendTaskToFile(taskToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoAddedTask(taskToAdd, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ArchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ArchiveCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private String archiveName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ArchiveCommand(String archiveName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.archiveName \u003d archiveName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute archive command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (storage.archiveTaskList(tasks, archiveName)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            tasks.clearList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoDukeMessage(\"ARCHIVING COMPLETE\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoException(new DukeException(\"Failed to archive tasks\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute clear command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Clear Tasks **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        tasks.clearList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoDukeMessage(\"TASKS CLEARED\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * Abstract command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isExit Set to true when command is an exit command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public abstract void execute(Storage storage, TaskList tasks, UiInterface ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    int indexToDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param indexToDelete Index of Task to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.indexToDelete \u003d indexToDelete;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute delete command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoDeletedTask(tasks.deleteTask(indexToDelete), tasks.getSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.writeTaskListToFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    int indexToComplete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param indexToComplete Index of Task to be marked as complete"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DoneCommand(int indexToComplete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.indexToComplete \u003d indexToComplete;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoCompletedTask(tasks.completeTask(indexToComplete));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.writeTaskListToFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class EmptyCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public EmptyCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute Empty command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Empty Archives **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (storage.emptyArchives()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoDukeMessage(\"ARCHIVES EMPTIED\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoException(new DukeException(\"Failed to empty archives\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoMatchingTasks(tasks.getMatchingTasks(keyword));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute invalid command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoException(new DukeException());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute list command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoList(tasks, storage.getArchivedTaskLists());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/RetrieveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.ui.UiInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class RetrieveCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private String archiveName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public RetrieveCommand(String archiveName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.archiveName \u003d archiveName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute archive command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UiInterface ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            TaskList retrievedTaskList \u003d new TaskList(storage.retrieveArchivedTaskList(archiveName));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            tasks.loadData(retrievedTaskList.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoDukeMessage(\"RETRIEVED ARCHIVE\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoException(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoException(new DukeException(\"Failed to retrieve archive\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 38
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Parse input String and return corresponding LocalDateTime instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param dateTime String input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException Duke exception"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            LocalDateTime parsedDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                parsedDateTime \u003d LocalDateTime.parse(dateTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"Deadline should be given in \\\"\u003cDD/MM/YYYY\u003e \u003cHHMM\u003e\\\" format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String[] splitDateTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String[] splitDate \u003d splitDateTime[0].split(\"\\\\/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                parsedDateTime \u003d LocalDateTime.of("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[2]),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[1]),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[0]),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDateTime[1]) / 100,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDateTime[1]) % 100);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return parsedDateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Deadline should be given in \\\"\u003cDD/MM/YYYY\u003e \u003cHHMM\u003e\\\" format\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Parse input String and return corresponding command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param command Command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException Duke exception"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"archive\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1 || splitCommand[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: archive \u003carchive_name\u003e\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ArchiveCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"retrieve\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: retrieve \u003carchive_name\u003e\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new RetrieveCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"empty\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new EmptyCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1 || splitCommand[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: find \u003cpattern\u003e\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new FindCommand(splitCommand[1].trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            int doneIndex;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: done \u003ctask_number\u003e\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                doneIndex \u003d Integer.parseInt(splitCommand[1].trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: done \u003ctask_number\u003e\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            int deleteIndex;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: delete \u003ctask_number\u003e\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                deleteIndex \u003d Integer.parseInt(splitCommand[1].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: delete \u003ctask_number\u003e\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1 || splitCommand[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: todo \u003ctodo_task\u003e\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Todo(splitCommand[1].trim()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: deadline \u003cdeadline_task\u003e /by \u003cdeadline\u003e\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedDeadline \u003d splitCommand[1].split(\" \\\\/by \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (parsedDeadline.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: deadline \u003cdeadline_task\u003e /by \u003cdeadline\u003e\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Deadline(parsedDeadline[0], Parser.parseDateTime(parsedDeadline[1].trim())));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: event \u003cevent_name\u003e /at \u003cevent_location\u003e\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedEvent \u003d splitCommand[1].split(\" \\\\/at \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (parsedEvent.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"usage: event \u003cevent_name\u003e /at \u003cevent_location\u003e\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Event(parsedEvent[0], Parser.parseDateTime(parsedEvent[1].trim())));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 122
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private File dataFolder;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private File archivesFolder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param file File instance to be used for storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Storage(File dataFolder) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.dataFolder \u003d dataFolder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskFile \u003d new File(dataFolder, \"tasks.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.archivesFolder \u003d new File(dataFolder, \"archives\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Create Storage File."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFile.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Write input TaskList into local storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param list TaskList to be written to local storage"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void writeTaskListToFile(TaskList list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (Task t : list.getTasks()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                textToAdd +\u003d t.serialize();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Append a Task into storage file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAppend Task to be appended"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void appendTaskToFile(Task taskToAppend) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath(), true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(taskToAppend.serialize());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Archive existing TaskList, .txt file will be created."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param list Existing TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public boolean archiveTaskList(TaskList list, String archiveName) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String archiveFilePath \u003d \"data/archives/\" + archiveName + \".txt\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            new File(archiveFilePath).createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(archiveFilePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (Task t : list.getTasks()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                textToAdd +\u003d t.serialize();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (taskFile.delete()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return a list of existing archive names."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cString\u003e getArchivedTaskLists() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        File[] listOfArchives \u003d archivesFolder.listFiles();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cString\u003e archiveNames \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        for (File archive : listOfArchives) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            archiveNames.add(archive.getName());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return archiveNames;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Initialise storage folders."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public boolean initialise() throws SecurityException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean hasBeenInitialised \u003d true;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (!dataFolder.exists()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            dataFolder.mkdir();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            hasBeenInitialised \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (!archivesFolder.exists()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            archivesFolder.mkdir();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            hasBeenInitialised \u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return hasBeenInitialised;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Empty archives."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public boolean emptyArchives() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean isSuccessful \u003d true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        File[] listOfArchives \u003d archivesFolder.listFiles();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        for (File archive : listOfArchives) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (!archive.delete()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                isSuccessful \u003d false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(isSuccessful);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return isSuccessful;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Retrieve archive."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e retrieveArchivedTaskList(String archiveName) throws DukeException, IOException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String archiveFilePath \u003d \"data/archives/\" + archiveName + \".txt\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e archive \u003d getTaskList(new File(archiveFilePath));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return archive;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Retrieve and return lists of Tasks from storage file."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws FileNotFoundException File not found exception"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException Duke exception"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getTaskList(File file) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            Task t \u003d Task.deserialize(s.nextLine());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Returns current tasks."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws FileNotFoundException File not found exception"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException Duke exception"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getCurrentTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return getTaskList(taskFile);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 168
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overloaded class constructor for existing lists of Tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Load data from input list of Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param loadedTaskList Starting list of Tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void loadData(List\u003cTask\u003e loadedTaskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d loadedTaskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return list of Tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Clear list of Tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return number of Tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return Task at input index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param index Index of Task to be retrieved"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException Index out of bounds exception"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Add Task into TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return matching Tasks from TaskList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param keyword Keyword to be matched"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        for (Task k : taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (k.checkMatch(keyword)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                matchingTasks.add(k);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Mark a specific Task as complete."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param entryNumber Entry number of Task to be marked as complete (Starting from 1 onwards)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException Index out of bounds exception"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task completeTask(int entryNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Task taskToComplete \u003d this.getTask(entryNumber - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskToComplete.setDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskToComplete;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Delete Task from TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param entryNumber Entry number of Task to be deleted (Starting from 1 onwards)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException Index out of bounds exception"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task deleteTask(int entryNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.remove(entryNumber - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 105
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Default duke exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \" OOPS!!!\\n I\u0027m sorry, but I don\u0027t know what that means\\n :-(\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Custom duke exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param errorMessage Custom error message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(String.format(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \" OOPS!!!\\n %s\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"-------------------------------------------\", errorMessage));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 23
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Dialog box for chat component."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param l Label text"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param iv Avatar image"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        displayPicture.setFitWidth(80.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        displayPicture.setFitHeight(80.0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.setStyle(\"-fx-padding: 10;\" + \"-fx-spacing: 10;\" + \"-fx-border-style: solid inside;\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"-fx-border-width: 2;\" + \"-fx-border-radius: 5;\" + \"-fx-border-color: grey;\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"-fx-background-color: #424242\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        VBox.setMargin(this, new Insets(10, 10, 10, 10));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /** Functions **/"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Flip the dialog box horizontally."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Get user dialog box."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static DialogBox getUserDialog(String userMessage, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        var db \u003d new DialogBox(new Label(userMessage), new ImageView(img));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Get duke dialog box."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param dukeMessage Label text"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param img Image avatar"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static DialogBox getDukeDialog(String dukeMessage, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        var db \u003d new DialogBox(new Label(dukeMessage), new ImageView(img));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 69
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedBy;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String formattedBy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM hh:mm a\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedBy LocalDateTime instance for the dateline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, LocalDateTime parsedBy) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parsedBy;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.formattedBy \u003d parsedBy.format(formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedBy LocalDateTime instance for the dateline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime parsedBy) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parsedBy;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.formattedBy \u003d parsedBy.format(formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"D | 0 | read book | 2007-12-03T10:15:30\"."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedBy.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"[D][X] return book (by: 2007-12-03T10:15:30)\"."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + formattedBy + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedAt;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String formattedAt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM hh:mm a\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedAt LocalDateTime instance for when the event will be"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, LocalDateTime parsedAt) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parsedAt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.formattedAt \u003d parsedAt.format(formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedAt LocalDateTime instance for when the event will be"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime parsedAt) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parsedAt;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.formattedAt \u003d parsedAt.format(formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"E | 0 | project meeting | 2007-12-03T10:15:30\"."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"E | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedAt.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"3.[E][✗] project meeting (at: 2007-12-03T10:15:30)\"."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + formattedAt + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param type Type of Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param type Type of Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, boolean isDone, TaskType type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public abstract String serialize();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Deserialize input String and return corresponding Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param input Input string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException Duke exception"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static Task deserialize(String input) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedLine \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            switch (parsedLine[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Todo(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Deadline(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        LocalDateTime.parse(parsedLine[3]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Event(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        LocalDateTime.parse(parsedLine[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Invalid File Format\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     *  Return a tick or cross depending on whether task is completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Set task as complete."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Check whether Task description contains given keyword."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param keyword Keyword to match"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public boolean checkMatch(String keyword) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Override toString method."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 90
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 7
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.TODO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"T | 0 | read book\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"[T][X] read book\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/Clui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Clui implements UiInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Clui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Greet user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void greet(boolean taskFileExists, boolean storageInitialised) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (taskFileExists) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"    *** EXISTING FILE LOADED ***\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"    *** NO EXISTING FILE FOUND ***\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (!storageInitialised) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"    *** ARCHIVES FOLDER CREATED ***\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Read user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo TaskList to user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskList TaskList to be echoed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoList(TaskList taskList, List\u003cString\u003e archives) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     *** List is Empty ***\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(String.format(\"     %d.%s\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, taskList.getTask(i).toString()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (archives.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     *** No existing archives ***\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     Here are the existing archives:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (String archive : archives) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(\"     \" + archive);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo matching Tasks to user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param matchingTasks Matching Tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoMatchingTasks(List\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     *** List is Empty ***\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(String.format(\"     %d.%s\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, matchingTasks.get(i).toString()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo added Task to user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAdd Added Task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize Number of Tasks in list"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoAddedTask(Task taskToAdd, int taskListSize) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + String.format(\"       %s \\n\", taskToAdd.toString())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + String.format(\"     Now you have %d tasks in the list. \\n\", taskListSize)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"    -------------------------------------------\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo completed Task to user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToComplete Completed ask"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoCompletedTask(Task taskToComplete) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    -------------------------------------------\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"     Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"       %s\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"    -------------------------------------------\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskToComplete.toString()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo deleted Task to user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToDelete Deleted Task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize Number of remaining Tasks in TaskList"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoDeletedTask(Task taskToDelete, int taskListSize) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    -------------------------------------------\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"     Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"       %s\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"     Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"    -------------------------------------------\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskToDelete.toString(), taskListSize));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo Exception to user."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param e Exception to be echoed"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoException(Exception e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo message to user."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param msg Message to be echoed"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoDukeMessage(String msg) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"     *** %s ***     \\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"-------------------------------------------\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                msg));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Show exit message to user."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    -------------------------------------------\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"    -------------------------------------------\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 155
    }
  },
  {
    "path": "src/main/java/duke/ui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.gui.DialogBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Gui extends VBox implements UiInterface {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Image avatar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Gui(Image avatar) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.avatar \u003d avatar;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void sendDukeMessage(String dukeMessage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.getChildren().addAll("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                DialogBox.getDukeDialog(dukeMessage, avatar));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void sendUserMessage(String dukeMessage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.getChildren().addAll("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                DialogBox.getUserDialog(dukeMessage, avatar));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Greet user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void greet(boolean taskFileExists, boolean storageInitialised) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (taskFileExists) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"    *** EXISTING FILE LOADED ***\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"    *** NO EXISTING FILE FOUND ***\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (!storageInitialised) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"    *** ARCHIVES FOLDER CREATED ***\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"-------------------------------------------\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo TaskList to user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskList TaskList to be echoed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoList(TaskList taskList, List\u003cString\u003e archives) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     *** No existing tasks ***     \\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                output +\u003d String.format(\"     %d.%s\\n\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (archives.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     *** No existing archives ***     \\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     Here are the existing archives: \\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (String archive : archives) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                output +\u003d \"     \" + archive;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo matching Tasks to user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param matchingTasks Matching Tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoMatchingTasks(List\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     *** List is Empty ***     \\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            output +\u003d \"     Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                output +\u003d String.format(\"     %d.%s\\n\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, matchingTasks.get(i).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo added Task to user."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAdd Added Task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize Numer of Tasks in list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoAddedTask(Task taskToAdd, int taskListSize) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + String.format(\"       %s \\n\", taskToAdd.toString())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + String.format(\"     Now you have %d tasks in the list.\\n\", taskListSize)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        + \"-------------------------------------------\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo completed Task to user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToComplete Completed Task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoCompletedTask(Task taskToComplete) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d String.format(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"     Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"       %s\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"-------------------------------------------\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskToComplete.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo deleted Task to user."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToDelete Deleted Task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize Number of remaining Tasks in TaskList"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoDeletedTask(Task taskToDelete, int taskListSize) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d String.format(\"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"     Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"       %s\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"     Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                                + \"-------------------------------------------\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskToDelete.toString(), taskListSize);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo Exception to user."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param e Exception to be echoed"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoException(Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(e.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo user message."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param msg Message to be echoed"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoUserMessage(String msg) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendUserMessage(msg);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo Duke message to user."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param msg Message to be echoed"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoDukeMessage(String msg) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d String.format(\"     *** %s ***     \\n\", msg);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        output +\u003d \"-------------------------------------------\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Show exit message to user."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String output \u003d \"-------------------------------------------\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                + \"-------------------------------------------\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendDukeMessage(output);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 178
    }
  },
  {
    "path": "src/main/java/duke/ui/UiInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public interface UiInterface {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void greet(boolean taskListExists, boolean storageInitialised);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoList(TaskList taskList, List\u003cString\u003e archives);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoMatchingTasks(List\u003cTask\u003e matchingTasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoAddedTask(Task taskToAdd, int taskListSize);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoCompletedTask(Task taskToComplete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoDeletedTask(Task taskToDelete, int taskListSize);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoException(Exception e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void echoDukeMessage(String msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    void exit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 26
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void testDateTimeParse_success() throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        assertEquals(LocalDateTime.of(1998,12,21,12,50),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Parser.parseDateTime(\"21/12/1998 1250\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void testDateTimeParse_fail() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            assertEquals(LocalDateTime.of(1998,12,21,12,50),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    Parser.parseDateTime(\"INVALID INPUT\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 25
    }
  },
  {
    "path": "src/test/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\main\\java\\DukeCliLauncher.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "java -classpath ..\\bin DukeCliLauncher \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 21
    }
  }
]
