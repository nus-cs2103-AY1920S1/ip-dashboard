[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[T] [-] This is a test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[T] [-] This is a test"
      }
    ],
    "authorContributionMap": {
      "dragontho": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Storage storageHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String savedPath \u003d \"C:\\\\Users\\\\drago\\\\Documents\\\\MEGA\\\\Work\\\\Uni\\\\Year 2\\\\CS2103T\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Duke(String savedPath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        storageHandler \u003d new Storage(savedPath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            taskList \u003d new TaskList(storageHandler.loadFromFile());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            ui.cannotLoad();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                c.execute(taskList, ui, storageHandler);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        new Duke(savedPath).run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 45,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    };"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Deadline deadlineToAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DeadlineCommand(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        deadlineToAdd \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        tasks.addToList(deadlineToAdd);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.operateTask(deadlineToAdd, tasks, true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I cannot read your file! :(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private int entry;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DeleteCommand(int entry) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.entry \u003d entry;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.operateTask(tasks.getTask(entry - 1), tasks, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        tasks.deleteFromList(entry);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I cannot read your file! :(\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private int entry;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DoneCommand(int entry) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.entry \u003d entry;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        tasks.markAsDone(entry);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.showDone(tasks.getTask(entry));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I cannot read your file! :(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Event eventToAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public EventCommand(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        eventToAdd \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        tasks.addToList(eventToAdd);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.operateTask(eventToAdd, tasks, true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I cannot read your file! :(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Todo todoToAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        todoToAdd \u003d new Todo(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        tasks.addToList(todoToAdd);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ui.operateTask(todoToAdd, tasks, true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I cannot read your file! :(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public DukeException() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 11
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String dateInString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected static final String dateFormat \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Deadline(String description, String dateInString) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.dateInString \u003d dateInString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            by \u003d formatter.parse(dateInString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"Not a valid time format!!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[D]\" + \" \" + super.toString() + \" (by: \" + dateInString + \" )\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String dateInString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected static final String dateFormat \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected SimpleDateFormat formatter \u003d new SimpleDateFormat(dateFormat);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Event(String description, String dateInString) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.dateInString \u003d dateInString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            at \u003d formatter.parse(dateInString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"Not a valid time format!!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[E]\" + \" \" + super.toString() + \" (at: \" + dateInString + \" )\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return + for done and nothing for not done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "//Solution below adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return \"[T]\" + \" \" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        String[] keywords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            if (keywords[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                if (keywords.length \u003e 2) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You supplied too many arguments :-(\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(keywords[1]));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String temp \u003d parseTodo(keywords);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return new TodoCommand(temp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String[] temp \u003d parseTaskTime(keywords, \"deadline\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return new DeadlineCommand(temp[0], temp[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String[] temp \u003d parseTaskTime(keywords, \"event\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                return new EventCommand(temp[0], temp[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else if (keywords[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                if (keywords.length \u003e 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You supplied too many arguments :-(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(keywords[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I can\u0027t mark or delete without an entry :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static String parseTodo(String[] keywords) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            keywords[0] \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return String.join(\" \", keywords).strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public static String[] parseTaskTime(String[] keywords, String dateTimeType) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        if (keywords.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + dateTimeType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            boolean flag \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            switch (dateTimeType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        if (flag) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            date \u003d date + \" \" + keywords[i];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else if (keywords[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            flag \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            temp \u003d temp + \" \" + keywords[i];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    for (int i \u003d 1; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        if (flag) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            date \u003d date + \" \" + keywords[i];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else if (keywords[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            flag \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            temp \u003d temp + \" \" + keywords[i];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                switch (dateTimeType) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Your deadline does not have a /by.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Your event does not have an /at.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return new String[] {temp.strip(), date.strip()};"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 100
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "package seedu.duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Scanner fileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private FileWriter writer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Storage(String savedPath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        file \u003d new File(savedPath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromFile() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            while (fileReader.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String line \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                String[] keywords \u003d line.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                switch (keywords[1]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"[+]\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    case \"[-]\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        if (keywords[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            keywords[0] \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            keywords[1] \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            String desc \u003d String.join(\" \", keywords).strip();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            Todo temp \u003d new Todo(desc);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                temp.setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            taskList.add(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else if (keywords[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            keywords[0] \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            String desc \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            String time \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            boolean flag \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            for (int i \u003d 2; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                if (flag) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    if (keywords[i].equals(\")\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                        time \u003d time + \" \" + keywords[i];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                } else if (keywords[i].equals(\"(by:\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    flag \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    desc \u003d desc + \" \" + keywords[i];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            Deadline temp \u003d new Deadline(desc.strip(), time.strip());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            if (isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                temp.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            taskList.add(temp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else if (keywords[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            keywords[0] \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            String desc \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            String time \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            boolean flag \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            for (int i \u003d 2; i \u003c keywords.length; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                if (flag) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    if (keywords[i].equals(\")\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                        time \u003d time + \" \" + keywords[i];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                } else if (keywords[i].equals(\"(at:\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    flag \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                    desc \u003d desc + \" \" + keywords[i];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            Event temp \u003d new Event(desc.strip(), time.strip());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            if (isDone) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                                temp.setDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            taskList.add(temp);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"YOoooUR fILe haS BeEN cORRupTEd.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        ArrayList\u003cTask\u003e tempList \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            String temp \u003d tempList.get(0).toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            for (int i \u003d 1; i \u003c tempList.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                temp \u003d temp + \"\\n\" + tempList.get(0).toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            writer.write(temp);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 115
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void deleteFromList(int entry) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            taskList.remove(entry - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but this task does not exist.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void markAsDone(int entry) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            taskList.get(entry - 1).setDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but this task does not exist.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskList.get(i - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            temp \u003d temp + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/util/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String BORDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String UPPER_BORDER \u003d BORDER + \"\\n\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String LOWER_BORDER \u003d\"\\n\" + BORDER + \"\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello from\\n\" + logo + \"\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + UPPER_BORDER + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\" + LOWER_BORDER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String ERROR_CANNOT_LOAD \u003d UPPER_BORDER"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"☹ OOPS!!! I cannot read your file! :(\" + LOWER_BORDER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String BYE \u003d UPPER_BORDER"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            + \"Bye. Hope to see you again soon!\" + LOWER_BORDER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String TASK_WRAPPER_UPPER \u003d UPPER_BORDER + \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String TASK_WRAPPER_UPPER_DELETE \u003d UPPER_BORDER + \"Got it. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String NOW_YOU_HAVE \u003d \"Now you have \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    private static final String TASK_WRAPPER_LOWER \u003d \" tasks in the list.\\n\" + LOWER_BORDER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void cannotLoad() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(ERROR_CANNOT_LOAD);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(UPPER_BORDER + taskList + LOWER_BORDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(UPPER_BORDER + DONE + task + \"\\n\" + LOWER_BORDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void operateTask(Task task, TaskList taskList, boolean isAdd) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        if (isAdd) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            System.out.println(TASK_WRAPPER_UPPER + task + \"\\n\" + NOW_YOU_HAVE + taskList.getTaskListSize()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    + TASK_WRAPPER_LOWER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "            System.out.println(TASK_WRAPPER_UPPER_DELETE + task + \"\\n\" + NOW_YOU_HAVE + (taskList.getTaskListSize() - 1)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": "                    + TASK_WRAPPER_LOWER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(UPPER_BORDER + e + LOWER_BORDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dragontho"
        },
        "content": "        System.out.println(BYE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dragontho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dragontho": 63
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[T][�??] This is a test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[D][�??] do this project (by: 22/08/2019)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! Your deadline does not have a /by."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[E][�??] cousins meetup (at: when again lol)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! Your event does not have an /at."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! I\u0027m sorry, but this task does not exist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! I\u0027m sorry, but this task does not exist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[E][�??] cousins meetup (at: when again lol)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dragontho"
        },
        "content": "�?? OOPS!!! I\u0027m sorry, but this task does not exist."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dragontho"
        },
        "content": "[E][�??] cousins meetup (at: when again lol)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dragontho"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dragontho"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dragontho": 93
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "todo This is a test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "deadline do this project /by 22/08/2019 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": "deadline do not bother"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "event cousins meetup /at 23/9/2019 1700"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": "event karaoke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dragontho": 14
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dragontho"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dragontho"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dragontho"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dragontho"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dragontho"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dragontho"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dragontho"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dragontho"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dragontho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dragontho"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dragontho"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dragontho": 21
    }
  }
]
