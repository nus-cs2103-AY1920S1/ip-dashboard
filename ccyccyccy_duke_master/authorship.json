[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    // mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 27,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static final String indent \u003d \"    \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static List\u003cTask\u003e history \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * Entry Point of entire Program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        System.out.println(indent(wrapWithHorizontalLines(intro)));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        while (!(input \u003d sc.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                output \u003d handleInput(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                output \u003d e.getMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String endMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        System.out.println(indent(wrapWithHorizontalLines(endMessage)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * Is called for each line of input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @return Formatted output."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @throws DukeException When input argument wrong format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String handleInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String command \u003d splitInput[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d historyToString(history);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            Task taskToMarkAsDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            int selectedIndex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                selectedIndex \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Argument passed to done must be a valid integer\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                taskToMarkAsDone \u003d history.get(selectedIndex);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Selected task number does not exist.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            taskToMarkAsDone.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                    + indent(taskToMarkAsDone.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            Task taskToDelete;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            int deleteIndex;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                deleteIndex \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Argument passed to delete must be a valid integer\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                taskToDelete \u003d history.get(deleteIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Selected task number does not exist.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            history.remove(deleteIndex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d wrapWithDeleteTask(taskToDelete);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            int byIndex \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            if (byIndex \u003c 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Command deadline requires an argument /by, followed by deadline date\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String deadlineDescription \u003d  input.substring(9, byIndex);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String by \u003d input.substring(byIndex + 5);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineDescription, by);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            history.add(deadline);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d wrapWithAddTask(deadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            int atIndex \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            if (atIndex \u003c 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\"Command event requires an argument /at, followed by event date\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String eventDescription \u003d  input.substring(6, atIndex);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String at \u003d input.substring(atIndex + 5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            Event event \u003d new Event(eventDescription, at);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            history.add(event);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d wrapWithAddTask(event);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            String todoDescription;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                todoDescription \u003d input.substring(5);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            Todo todo \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            history.add(todo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d wrapWithAddTask(todo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            output \u003d \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return indent(wrapWithHorizontalLines(output));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * Formats list of history."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @param history List of history."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String historyToString(List\u003cTask\u003e history) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        StringJoiner sj \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        for (int i \u003d 0; i \u003c history.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "            sj.add((i + 1) + \". \" + history.get(i));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return sj.toString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String wrapWithHorizontalLines(String str) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + str"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + \"\\n\" + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String wrapWithAddTask(Task task) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + indent(task.toString())"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", history.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String wrapWithDeleteTask(Task task) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + indent(task.toString())"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", history.size());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private static String indent(String str) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        String[] indentedStrings \u003d Arrays.stream(str.split(\"\\n\")).map(s -\u003e indent + s).toArray(String[]::new);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return String.join(\"\\n\", indentedStrings);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 154,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ccyccyccy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ccyccyccy": 35
    }
  }
]
