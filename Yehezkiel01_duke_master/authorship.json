[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 14,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"  \" + task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        printTotalTask(tasks, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void printTotalTask(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        boolean isPlural \u003d tasks.size() \u003e 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Now you have \" + tasks.size() + \" task\" + (isPlural ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 30
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Prints termination statement."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Returns whether this is the last command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @return true if this is the last command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param tasks List of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param ui User Interface to interact with users."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param storage Storage to write datas to hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if there is an invalid command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.by \u003d parseDate(by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[4];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[3] \u003d dateToStringForHardDisk(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 26
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Deletes the index-th task from list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Task task \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"  \" + task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        printTotalTask(tasks, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void printTotalTask(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        boolean isPlural \u003d tasks.size() \u003e 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Now you have \" + tasks.size() + \" task\" + (isPlural ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 30
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Marks the index-th task to be done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"  \" + tasks.get(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Initiates the main execution of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param filePath The location of storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            ui.showLoadingError(ex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                ui.showErrorMessage(ex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"☹ OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.at \u003d parseDate(at);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[4];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[3] \u003d dateToStringForHardDisk(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 26
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Finds all task which description contains keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        int found \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                found++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                ui.showMessage(found + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 27
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * List down all the task in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ui.showMessage(\"Here are the task in your list:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            ui.showMessage(i + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 17
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Parses user command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param command User plain command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @return Command object which represents the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if the parsing process fails."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.matches(\"^done \\\\d+$\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseDoneCommand(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.matches(\"^delete \\\\d+$\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseDeleteCommand(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseDeadlineTask(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if  (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseTodoTask(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseEventTask(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parseFindCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static DoneCommand parseDoneCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static DeleteCommand parseDeleteCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static FindCommand parseFindCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new FindCommand(command.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Find command needs a keyword\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static AddCommand parseDeadlineTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String suffix \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d suffix.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String by \u003d suffix.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Deadline task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Deadline task formatting error.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static AddCommand parseTodoTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Todo task \u003d new Todo(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private static AddCommand parseEventTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String suffix \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String description \u003d suffix.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String at \u003d suffix.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Event task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Event task formatting error.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 85
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private String storagePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Storage(String storagePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.storagePath \u003d storagePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ensureStorageCreated();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void ensureStorageCreated() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        File file \u003d new File(System.getProperty(\"user.dir\") + storagePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Saves the list of task in hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if there is an issue in writing to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(storagePath)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            writer.write(tasks.printTasksForHardDisk());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"There is an issue in updating duke.txt.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Reads list of task from hard disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @return List of tasks written in hard disk."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if there is an issue in reading from hard disk or in parsing them."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            scanner \u003d new Scanner(new File(storagePath));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            String[] datas \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            switch (datas[0]) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                task \u003d new Event(datas[2], datas[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                task \u003d new Deadline(datas[2], datas[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                task \u003d new Todo(datas[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                throw new DukeException(\"Unrecognized tasks\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            if (datas[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 80
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected static final SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Returns the string presentation of this task in hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public abstract String toStringForHardDisk();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected Date parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            return parser.parse(date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"There is an error in parsing date.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    protected String dateToStringForHardDisk(Date date) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return parser.format(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Appends new task to the back of the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param task New task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Marks the index-th task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param index Task index."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if invalid index is given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Task markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        validateIndex(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Deletes the index-th task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param index Task index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if invalid index is given."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Task deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        validateIndex(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Returns the index-th task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param index Task index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @throws DukeException if invalid index is given."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Task get(int index) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        validateIndex(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Returns the list string presentation for hard disk."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String printTasksForHardDisk() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            builder.append(tasks.get(i).toStringForHardDisk());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            builder.append(\"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private void validateIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        if (!(0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size())) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            throw new DukeException(\"Invalid task index.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 86
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toStringForHardDisk() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        String[] datas \u003d new String[3];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[0] \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[1] \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        datas[2] \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return String.join(\" | \", datas);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Prints separator line."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Prints the error message when loading data from hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param ex The exception."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void showLoadingError(DukeException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        showErrorMessage(ex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param ex The exception."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void showErrorMessage(DukeException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(ex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Prints normal message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @param message The message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * Reads user command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     * @return user command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 63
    }
  },
  {
    "path": "src/test/java/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        assertEquals(new ByeCommand().isExit(), false);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 7
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void parseTest() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            Parser.parse(\"blah\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 11
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        Todo dummy \u003d new Todo(\"Dummy Test\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; ++i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "            tasks.addTask(dummy);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "        assertEquals(tasks.size(), 5);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "deadline CS2103T Project /by 29/08/2019 17:37:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "deadline return book /by 01/09/2019 23:59:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "event project meeting /at 02/09/2019 14:00:00"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yehezkiel01"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Yehezkiel01": 34
    }
  }
]
