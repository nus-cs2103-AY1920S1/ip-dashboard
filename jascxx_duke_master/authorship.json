[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public static final String REGEX \u003d \"/by\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "    Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getAdditionalMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static String BREAKLINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static String GREETING \u003d \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "            \"     What can I do for you?\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static String GOODBYE \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasc"
        },
        "content": "        printBreakLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasc"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasc"
        },
        "content": "        printBreakLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasc"
        },
        "content": "        Logic logic \u003d new Logic(sc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasc"
        },
        "content": "        int response;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasc"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasc"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasc"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasc"
        },
        "content": "            printBreakLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasc"
        },
        "content": "            response \u003d logic.process(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasc"
        },
        "content": "            if (response \u003d\u003d -1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasc"
        },
        "content": "                goodbye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasc"
        },
        "content": "            printBreakLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } while (response !\u003d -1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static void printBreakLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasc"
        },
        "content": "        System.out.println(BREAKLINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static void greeting() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasc"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static void goodbye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasc"
        },
        "content": "        System.out.println(GOODBYE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 37,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public static final String REGEX \u003d \"/at\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "    Event(String desc, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getAdditionalMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 19
    }
  },
  {
    "path": "src/main/java/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String ADDED_MSG \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String TASK_REMOVED_MSG \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String TASK_DONE_MSG \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private static final String LIST_MSG \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasc"
        },
        "content": "    Logic(Scanner sc) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasc"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasc"
        },
        "content": "    int process(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasc"
        },
        "content": "        if (command.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasc"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasc"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case TODO_COMMAND:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    addTodo(sc.nextLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    addDeadline(sc.nextLine());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case EVENT_COMMAND:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    addEvent(sc.nextLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case BYE_COMMAND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    return -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case LIST_COMMAND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    list();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case DONE_COMMAND:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    done(sc.nextLine().trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasc"
        },
        "content": "                case DELETE_COMMAND:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    delete(sc.nextLine().trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasc"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasc"
        },
        "content": "                    throw new UnknownCommandException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print(e.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void done(String s) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasc"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasc"
        },
        "content": "                throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasc"
        },
        "content": "            int i \u003d Integer.parseInt(s) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasc"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasc"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print(TASK_DONE_MSG);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print(\"  \" + task.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new ArgumentNotNumberException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new TaskDoesNotExistException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void delete(String s) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasc"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasc"
        },
        "content": "                throw new TaskNotSpecifiedException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasc"
        },
        "content": "            int i \u003d Integer.parseInt(s) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasc"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasc"
        },
        "content": "            taskList.remove(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print(TASK_REMOVED_MSG);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print(\"  \" + task.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasc"
        },
        "content": "            printListSize();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new ArgumentNotNumberException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new TaskDoesNotExistException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasc"
        },
        "content": "        print(LIST_MSG);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasc"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasc"
        },
        "content": "            print((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void addTodo(String s) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasc"
        },
        "content": "        if (s.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new EmptyTodoDescException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jasc"
        },
        "content": "        Task task \u003d new Todo(s);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasc"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasc"
        },
        "content": "        printAdded(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void addDeadline(String s) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jasc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jasc"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jasc"
        },
        "content": "                throw new EmptyDeadlineDescException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jasc"
        },
        "content": "            String[] strs \u003d s.split(Deadline.REGEX);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jasc"
        },
        "content": "            Task task \u003d new Deadline(strs[0], strs[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jasc"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jasc"
        },
        "content": "            printAdded(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new EmptyDeadlineArgException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void addEvent(String s) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jasc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jasc"
        },
        "content": "            if (s.isEmpty()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jasc"
        },
        "content": "                throw new EmptyEventDescException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jasc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jasc"
        },
        "content": "            String[] strs \u003d s.split(Event.REGEX);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jasc"
        },
        "content": "            Task task \u003d new Event(strs[0], strs[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jasc"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jasc"
        },
        "content": "            printAdded(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jasc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jasc"
        },
        "content": "            throw new EmptyEventArgException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jasc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void printAdded(Task task) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jasc"
        },
        "content": "        print(ADDED_MSG);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jasc"
        },
        "content": "        print(\"  \" + task);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jasc"
        },
        "content": "        printListSize();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jasc"
        },
        "content": "        System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private void printListSize() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jasc"
        },
        "content": "        print(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 157
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": "    abstract String getInitial();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    abstract String getAdditionalMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasc"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"[\" + getInitial() + \"]\" + \"[\" + getStatusIcon() + \"] \" + description + \" \" + getAdditionalMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(desc.trim());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getInitial() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": "    String getAdditionalMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 15
    }
  },
  {
    "path": "src/main/java/exceptions/ArgumentNotNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class ArgumentNotNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public ArgumentNotNumberException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! Argument must be a number.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "    DukeException(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasc"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 14
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyDeadlineArgException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class EmptyDeadlineArgException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public EmptyDeadlineArgException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! The time of an deadline cannot be empty, e.g. deadline do homework /by August 9\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 9
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyDeadlineDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class EmptyDeadlineDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public EmptyDeadlineDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyEventArgException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class EmptyEventArgException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public EmptyEventArgException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! The time of an event cannot be empty, e.g. event play tennis /at Monday\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyEventDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class EmptyEventDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public EmptyEventDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyTodoDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class EmptyTodoDescException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public EmptyTodoDescException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/TaskDoesNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public TaskDoesNotExistException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! Task does not exist.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/TaskNotSpecifiedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class TaskNotSpecifiedException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public TaskNotSpecifiedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! Which task have you done?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasc"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasc"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasc"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasc"
        },
        "content": "        super(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasc": 8
    }
  }
]
