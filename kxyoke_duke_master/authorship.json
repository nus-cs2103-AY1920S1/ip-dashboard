[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "tasks.withType(Test) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    systemProperty \"file.encoding\", \"UTF-8\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 41,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.ImageCursor;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*    private void flip() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 107
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "*/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Acts as a chatbot to remember your tasks at hand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * There will be three kinds of tasks: Todo, Deadline, Event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Valid inputs include:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code list} to list the tasks it remembered so far;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code todo some todo description} to save a new Todo task with description \"some todo description\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code deadline something /by dd/MM/yyyy HHmm} to save a new Deadline task with description \"something\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * and deadline dd/MM/yyyy HHmm;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code event some event /at datetime} to save a new Event task with description \"some event\" held at datetime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code done id} to mark the (id)th task as completed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code delete id} to remove the (id)th task from list of tasks to remember;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code bye} or {@code exit} to exit from duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Duke will save the tasks in a file (\"./data/tasks.txt\") and read from it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Duke { /*extends Application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/walle.png\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/eve.png\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "*/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles file reading and writing. */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles direct changes to list of tasks. */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles system i/o in duke format. */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String dataFilepath \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs Duke object to be called by Application launcher, javafx."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Storage filepath used default ./data/tasks.txt."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.storage \u003d new Storage(dataFilepath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a Duke chatbot that reads from and writes to file located at datafilepath."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param dataFilepath file path to read and write data."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Duke(String dataFilepath) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.storage \u003d new Storage(dataFilepath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Runs Duke chatbot."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.ui.showWelcome();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.ui.showError(e.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //    new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ///*"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            res \u003d c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            res \u003d e.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (res \u003d\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            res \u003d \"cannot work sia\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //*/"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //return \"Duke heard: \" + fullCommand;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*  //EXTRACTING OUT ALL THE GUI STUFF INTO THE FXML STUFF"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //step 1: setting up required components"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //container for content of chat to scroll"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //step 2: formatting the window to look as expected"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.setTitle(\"Grand Duke of GUIs\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //need to import javafx.scene.layout.Region for this"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //step 3: add functionality to handle user input"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //CLICKING SEND BUTTON"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //System.out.println(\"sendbutton clicked!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //userInput.clear();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        });"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //PRESSING ENTER TO SEND MSGS INSTEAD"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //System.out.println(\"userinput clicked?\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //userInput.clear();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        });"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //scroll down to the end (last msg) every time dialogContainer\u0027s height changes"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param text String containing text to add."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "*/"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*    //THIS IS FOR THE OLD DIALOG BOX (LOOK AT PART 3 of tutorial)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Label dukeText \u003d new Label(this.getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //System.out.println(userInput.getText());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 228,
      "-": 4
    }
  },
  {
    "path": "src/main/java/JavafxLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A launcher class to workaround classpath issues?."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This description is copied from the javafx tutorial part 1."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class JavafxLauncher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** To auto close using code to close button? */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Button closeButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/walle.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eve.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (input.contains(\"bye\") || input.equalsIgnoreCase(\"exit\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            closeButtonAction();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Closes GUI. This is a onClick callback function, but can be used"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * for this purpose."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void closeButtonAction() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //get a handle to the stage?"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Stage stage \u003d (Stage) closeButton.getScene().getWindow();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //ahhh then what i have to do when this fn is called aka close"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 70
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an add task command. Command has 2 main attributes: task type and full description of task to add."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task to add. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task to add. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String fullDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an add command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskType task type of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public AddCommand(TaskType taskType, String descr) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.fullDescription \u003d descr;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task newTask \u003d TaskList.createTask(this.taskType, this.fullDescription); //create task will throw errors"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks.addData(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + newTask.toString(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list\", tasks.getSize()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 49
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents all valid commands Duke will encounter."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Indicates whether command is an exit command. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of reading/writing to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return any outputs/exceptions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns whether command is an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return true if is exit command, else false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.NoIdGivenException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of task in list of tasks to remove. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs delete command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param idString position of task in list to remove."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DeleteCommand(String idString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskId \u003d idString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Deletes task from list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.taskId.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIdGivenException(\"delete\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d Parser.parseStrToInt(this.taskId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d tasks.deleteTask(id);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 48
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.NoIdGivenException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of the task in list of tasks to mark as done. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs done command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param idString position of task in list to mark as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DoneCommand(String idString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskId \u003d idString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.taskId.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIdGivenException(\"done\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d Parser.parseStrToInt(this.taskId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d tasks.markDone(id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 48
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //ui.closeScanner();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 29
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String wordToFind;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.wordToFind \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d taskList.findTasks(this.wordToFind);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return ui.dukeRespond(\"Sorry! I can\u0027t find any matching tasks in your list. Try another phrase?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return ui.dukeRespond(getStringArray(foundTasks));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String[] getStringArray(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] strings \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        strings[0] \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            strings[listIndex] \u003d String.format(\"%d.%s\", listIndex, task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 39
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a list command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Lists tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storage Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return tasks.listTasks(ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 28
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents all exceptions that will be encountered in the Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This can be thrown when input formats and keywords are incorrect, correct format but invalid arguments,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * or when the file cannot be opened properly."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a DukeException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Parent class IllegalArgumentException is initialized."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 17
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where no description is given after keywords todo, deadline or event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Keyword that caused this exception. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs EmptyDescriptionException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg keyword of task command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.type \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 OOPS!!! The description of %s cannot be empty.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.type);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 24
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/IncorrectTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where deadline or event command does not have the correct format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class IncorrectTaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** The keyword that indicates next argument is date/time. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String keyword2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs IncorrectTaskFormatException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg by or at (for deadline and event respectively)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public IncorrectTaskFormatException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.keyword2 \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 Aish try again with the correct format: \u003cdescr\u003e /%s \u003cdateinfo\u003e\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.keyword2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 24
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/InvalidIdException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where done or delete command is given an invalid id."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidIdException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of task in list. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an InvalidIDException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg position of task in list (1-based)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidIdException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.id \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 AIGOO!! %s is an invalid ID!\", this.id);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 23
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/InvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where an invalid keyword (of command) is given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidKeywordException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an InvalidKeywordException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidKeywordException(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 19
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/NoIdGivenException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where no id is given with the done or delete command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class NoIdGivenException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Command (done or delete). */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a NoIdGivenException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg command keyword that caused this exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public NoIdGivenException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.cmd \u003d msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"Please give a ID with your %s command\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.cmd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 25
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/file/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Encapsulates logic and format to write files to and read files from."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * File should contain the following format for each line:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code [T/D/E] | [✗/✓] | [description [| date as per required input]]}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * For example, {@code D | ✗ | this is a deadline description | 31/8/2019 2359}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * or {@code T | ✓ | this is a todo description}."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Path to file to read/write. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param filepath path to file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Writes to file the contents of taskList, without appending to original file contents."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList list of tasks to write to file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if cannot write to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void updateFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FileWriter fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedWriter br \u003d new BufferedWriter(fr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //for each task, br.write(\"data\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //descr, id, iscompleted"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String details \u003d String.format(\"%s | %d | %s\\r\\n\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                        t.getTaskType(), boolToInt(t.isCompleted()), t.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                br.write(details);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot write to file\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Reads and loads tasks stored in file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns an empty List if file is empty."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if cannot read from file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedReader br \u003d new BufferedReader("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    new FileReader(file));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //handle line"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String[] sections \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                TaskType taskType \u003d TaskType.convertToTaskType(sections[0]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                boolean completed \u003d intStrToBool(sections[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String description \u003d sections[2];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String datetime \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String term \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                if (taskType \u003d\u003d TaskType.E) {       //actually can just store as you read in one... but ok"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    term \u003d \" /at \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                } else if (taskType \u003d\u003d TaskType.D) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    term \u003d \" /by \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                if (sections.length \u003e 3) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    datetime \u003d term + sections[3];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Task task \u003d TaskList.createTask(taskType, description + datetime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                if (completed) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    task.setCompleted();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot read file\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static int boolToInt(boolean b) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return b ? 1 : 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static boolean intStrToBool(String intStr) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return intStr.equals(\"1\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 122
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/parse/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidKeywordException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents parsing logic for commands. A full command will have the first word as one of the valid keywords (matching"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * a TaskType, and subsequent words should match the required format (@see Duke), or an Exception may be thrown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Full command. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constucts a parser on input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input full command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the TaskType of the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the task type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if keyword is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getInputTaskType() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String keyword \u003d this.input.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType taskType \u003d TaskType.convertToTaskType(keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskType \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(keyword);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the String of command after the keyword."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns an empty string if full command contains \u003c2 words."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getInputEntireDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner sc \u003d new Scanner(this.input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.next(); //scan past taskType"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Parses fullCommand String input into a Command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Command corresponding to user input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if no valid input is given."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (fullCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"Please give me a command master! (You didn\u0027t input any command, but entered...\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType taskType \u003d parser.getInputTaskType();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String descr \u003d parser.getInputEntireDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Command cmd;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new ListCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new DeleteCommand(descr);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new DoneCommand(descr);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new ExitCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new FindCommand(descr);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default: //add or wrong"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new AddCommand(taskType, descr);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts string to Date."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input string containing date."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Date object representing the date."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if input is not in \"dd/MM/yyyy HHmm\" format."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Date convertToDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(input);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"Date is wrong format, try again\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         finally {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts string to int."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input string containing only the id."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return id."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if string is not in parsable format."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static int parseStrToInt(String input) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            id \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 140
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.IncorrectTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a task with deadline. Deadline tasks have 4 main attributes: their type, description, by when, and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of deadline task without the date time. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date time information in the following format: (by: date time). */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** String containing only date and time. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date object representing date and time. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline(String descr, boolean completed) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.D;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d input.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d tmp[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d \"by\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String date \u003d tmp[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s: %s\", term, date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s (%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.datetime \u003d date;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.date \u003d Parser.convertToDate(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates a deadline task with the description of task (including date time information)."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr Description of task including date and time."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Deadline object representing task with the description."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws IncorrectTaskFormatException if task format is incorrect."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Deadline create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Deadline newTask \u003d new Deadline(descr.trim(), false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"%s | %s\", this.description, this.datetime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 77
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.IncorrectTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an event task. Event tasks have 4 main attributes: their type, description, at when, and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of event task without the date time. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date time information in the following format: (at: date time). */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** String containing only date and time. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event(String descr, boolean completed) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.E;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d input.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d tmp[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d \"at\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String datetime \u003d tmp[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (datetime.equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s: %s\", term, datetime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s (%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates an event task with the description of task (including date time information)."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr Description of task including date and time."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Event object representing task with the description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws IncorrectTaskFormatException if task format is incorrect."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Event create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"an event\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Event newTask \u003d new Event(descr.trim(), false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"%s | %s\", this.description, this.datetime);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 70
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents tasks, each with 3 main attributes: task type, description, whether it is completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Tick symbol. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Cross symbol. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static final String CROSS \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Whether task is completed. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //getter mtds"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return description (notes, if any)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets whether task is completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return true if completed, false otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets task type of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return TaskType of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //setter mtds"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets task to completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String checked;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d TICK;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d CROSS;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.taskType, checked, this.description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 63
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidKeywordException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an agent that handles the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This includes adding and deleting tasks from the list,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * marking tasks as done, and directing the creation of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** List of tasks to keep track of. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a TaskList with an empty list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a TaskList with given taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList list of tasks to start with."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets number of tasks in list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return number of tasks in list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Prints out the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui ui in charge of printing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String listTasks(Ui ui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] taskStrings \u003d new String[this.getSize() + 1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskStrings[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task t : this.taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //int id \u003d t.getId();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //ASSUMPTION: ok fine need to at least print new id, if i dont wanna change the init id"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskStrings[listIndex] \u003d String.format(\"%d.%s\", listIndex, t.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(taskStrings);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Adds given task into current list of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addData(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Marks task at position id as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id the position at which the corresponding task in list is to be marked as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the completed task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if id is invalid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Task markDone(int id) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e getSize() || id \u003c 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d this.taskList.get(id - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        task.setCompleted();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Deletes task at position id from list of tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Pre-condition: id is always valid."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id the position at which the corresponding task in list is to be deleted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if id is invalid."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Task deleteTask(int id) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e getSize() || id \u003c 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d this.taskList.remove(id - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates the corresponding task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskType the task type of task to create."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return new task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command keyword is invalid."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Task createTask(TaskType taskType, String description) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskType \u003d\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(\"wrong keyword\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Todo.create(description);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Deadline.create(description);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Event.create(description);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(\"wrong keyword\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Finds tasks that have words matching keyword."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param wordToFind keyword to find in task descriptions."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks that contain that keyword."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e findTasks(String wordToFind) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //find in task.toString()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (task.toString().contains(wordToFind)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 153
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents the potential task type for Duke to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This includes creating tasks and other commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * T represents todo task,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * D represents deadline task,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * E represents event task,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * LIST represents list tasks,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * DELETE represents delete tasks,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * DONE represents mark tasks as done,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * EXIT represents exit duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    T, D, E, LIST, DELETE, DONE, EXIT, FIND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts command keyword to task type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param typeString command keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return TaskType of command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static TaskType convertToTaskType(String typeString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (typeString.toUpperCase()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"TODO\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d T;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DEADLINE\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d D;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"EVENT\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d E;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"LIST\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d LIST;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DELETE\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d DELETE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DONE\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d DONE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"EXIT\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"BYE\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d EXIT;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"FIND\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d FIND;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 63
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents todo task. Todos have 3 main attributes: their type, description, and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo(String descr, boolean completed) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d descr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.T;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates new todo task with the description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr description of todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return new todo task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Todo create(String descr) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Todo newTask \u003d new Todo(descr.trim(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 34
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents the System I/O interface and layout of Duke chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This handles user input and Duke output."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Divides responses as part of layout. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static final String DIVIDER \u003d \"    \" + \"-\".repeat(61);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Reads user inputs from console. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //private Scanner scannerIn;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a Ui."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //this.scannerIn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Shows welcome response when Duke starts up."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Prints to console the inputs in Duke layout."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param inputs lines of String that Duke is supposed to respond."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String dukeRespond(String... inputs) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*    showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        PrintStream out;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            out \u003d new PrintStream(System.out, false, \"UTF-8\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            for (String str : inputs) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                out.println(\"     \" + str);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace(); //shouldnt happen?"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (String s : inputs) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            sb.append(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Shows loading error when file cannot be read."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Cannot read from file! Check if it exists?\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Shows error when an Exception is caught."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg message of the exception caught."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(msg);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Waits for and reads next line of user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*public String readCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //start listening for user input"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.scannerIn.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Closes scanner before terminating Duke."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*public void closeScanner() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.scannerIn.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 98
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cButton fx:id\u003d\"closeButton\" onAction\u003d\"#closeButtonAction\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectDeadline() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[D][\\u2717] a deadline task (by: 29/8/2019 1817)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Deadline.create(\"a deadline task /by 29/8/2019 1817\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createDeadline_throwsException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Deadline.create(\"\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"a deadline\", e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getDeadlineDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some deadline | 29/8/2019 1817\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Deadline.create(\"some deadline /by 29/8/2019 1817\").getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectEvent() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[E][\\u2717] an event task (at: 3-5pm)\", Event.create(\"an event task /at 3-5pm\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createEvent_throwsException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Event.create(\"\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"an event\", e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getEventDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some event | today 3-5pm\", Event.create(\"some event /at today 3-5pm\").getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 27
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void checkFullCommandParsing_validCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser ps \u003d new Parser(\"todo something\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            TaskType t \u003d ps.getInputTaskType();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(TaskType.T, t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"something\", ps.getInputEntireDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void checkFullCommandParsing_invalidCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser ps \u003d new Parser(\"blahahs\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            ps.getInputTaskType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"blahahs\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 33
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    String divider \u003d \"    -------------------------------------------------------------\\r\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Initialises arguments for function calls."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks.add(new TaskStub());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void listTaskTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //i dont think Ui need to test cus its so simple"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            System.setOut(new PrintStream(outContent, false, \"UTF-8\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //after this all Sop will go out here?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            String expectedOut \u003d divider"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + \"     Here are the tasks in your list:\\r\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + \"     1.[T][✗] some description\\r\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + divider;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.listTasks(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(expectedOut, outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace(); //shouldnt happen"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addDataTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskList.addData(new TaskStub());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[T][\\u2717] some description\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                taskList.getTaskList().get(taskList.getSize() - 1).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void markDoneTest_validId() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task doneTask \u003d taskList.markDone(1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"[T][\\u2713] some description\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    doneTask.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void markDoneTest_invalidId_throwsException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.markDone(5);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"5\", e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void deleteTaskTest_validId() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task deletedTask \u003d taskList.deleteTask(1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"[T][\\u2717] some description\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    deletedTask.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void deleteTaskTest_InvalidId() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.deleteTask(2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"2\", e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createTask_invalidType_throwException() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            TaskList.createTask(null, \"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"wrong keyword\", e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 109
    }
  },
  {
    "path": "src/test/java/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskStub extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a stub for task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskStub() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d getTaskType();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return \"some description\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return TaskType.T;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //setter mtds"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/test/java/TaskTypeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskTypeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void convertToTaskType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.T, TaskType.convertToTaskType(\"T\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.T, TaskType.convertToTaskType(\"Todo\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.D, TaskType.convertToTaskType(\"D\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.D, TaskType.convertToTaskType(\"Deadline\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.E, TaskType.convertToTaskType(\"E\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.E, TaskType.convertToTaskType(\"Event\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.LIST, TaskType.convertToTaskType(\"list\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.DONE, TaskType.convertToTaskType(\"done\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.DELETE, TaskType.convertToTaskType(\"delete\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.EXIT, TaskType.convertToTaskType(\"exit\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.EXIT, TaskType.convertToTaskType(\"bye\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(null, TaskType.convertToTaskType(\"blah\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(null, TaskType.convertToTaskType(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 25
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[T][\\u2717] a todo task\", Todo.create(\"a todo task\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createTodo_throwsException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Todo.create(\"\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"a todo\", e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some todo\", Todo.create(\"some todo\").getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 27
    }
  }
]
