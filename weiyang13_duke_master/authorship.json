[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::1::adscnkcnas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::csadjhkncjkascn"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[D]::0::casdnckja::cdajsnlkdj"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[E]::1::sadcjndis::cdnaskdnci"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::hi hi hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::bye bye bye"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "[T]::0::hi yellow"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates chatbot \u0027Duke\u0027. Contains main method for chatbot"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Unit that manages saved data of task list. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** List of tasks tracked by Duke. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Unit that manages user interface of Duke. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param filePath Pathname of the file used for storing data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Runs the chatbot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates the chatbot and runs it."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param args Command line arguments (unused)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 62
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates an exception that occurs within the chatbot from unexpected or undefined behavior."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param message Message detailing exception encountered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 15
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit that parses user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses a user input command as a Command object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param fullCommand String containing a command that is input by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If fullCommand is not properly formatted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String[] commandTokens \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            switch (commandTokens[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDone(commandTokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDelete(commandTokens);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseFind(commandTokens);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseToDo(commandTokens);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseDeadline(commandTokens);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return parseEvent(commandTokens);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"Unrecognised command.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"find\" into a command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseFind(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 command must be followed by a single keyword.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new FindCommand(commandTokens[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"done\" into a command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDone(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 command must be followed by an integer.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            int itemNo \u003d Integer.parseInt(commandTokens[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new DoneCommand(itemNo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027done\u0027 must be followed by an integer.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"delete\" into a command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDelete(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027delete\u0027 command must be followed by an integer.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            int itemNo \u003d Integer.parseInt(commandTokens[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return new DeleteCommand(itemNo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"\u0027delete\u0027 must be followed by an integer.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"deadline\" into a command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseDeadline(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1 || commandTokens[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for deadline must not be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (commandTokens[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (i \u003d\u003d commandTokens.length) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Indicate date/time for deadline with \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (commandTokens.length !\u003d i + 3) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String by \u003d commandTokens[i + 1] + \" \" + commandTokens[i + 2];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddDeadlineCommand(description, by);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"event\" into a command."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseEvent(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1 || commandTokens[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for deadline must not be empty.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (commandTokens[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (i \u003d\u003d commandTokens.length) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Indicate date/time for event with \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else if (commandTokens.length !\u003d i + 3) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String at \u003d commandTokens[i + 1] + \" \" + commandTokens[i + 2];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddEventCommand(description, at);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Parses whitespace delimited tokens of a user input command beginning with \"todo\" into a command."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param commandTokens Array of whitespace delimited String tokens from user input command."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return A Command object that corresponds to fullCommand."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If format of commandTokens does not match expected format."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public static Command parseToDo(String[] commandTokens) throws DukeException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (commandTokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Description for todo must not be empty.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c commandTokens.length; i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            description +\u003d commandTokens[i] + \" \";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new AddToDoCommand(description);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 187
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit that manages storage of data of the task list managed by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** File to which data of the list of tasks is saved and loaded from. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a storage object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param filePath Pathname of the file used for storing data."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Loads data from file into an ArrayList containing tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return An ArrayList of tasks represented by data in the file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If error in loading occurs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Scanner fileReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                String taskLine \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                String[] taskTokens \u003d taskLine.split(\"::\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                switch (taskTokens[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    task \u003d new ToDo(taskTokens[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    if (taskTokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                        task.setIsDone(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    task \u003d new Deadline(taskTokens[2], taskTokens[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    if (taskTokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                        task.setIsDone(true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    task \u003d new Event(taskTokens[2], taskTokens[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    if (taskTokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                        task.setIsDone(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves data managed by taskList into the file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskList TaskList object managing list of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If there is an error in saving."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.getNumTasks(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                fileWriter.write(task.getTaskType().toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                fileWriter.write(\"::\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                if (task.getIsDone()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    fileWriter.write(\"1::\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    fileWriter.write(\"0::\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                fileWriter.write(task.getDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                if (task.getHasDate()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    fileWriter.write(\"::\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    fileWriter.write(task.getDate());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                fileWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 116
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates unit that manages list of tasks tracked by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** List of tasks tracked by Duke. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes TaskList object from a loaded list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * To be used only when loading from saved data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks loaded from memory"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Deletes a task (based on index) from list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Retrieves a task (based on index) from list of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be retrieved."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Task retrieved with corresponding index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 67
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the unit managing user interface for Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Scanner object that receives user input. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Ui object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints an error message for when a loading error occurs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        System.out.println(\"LOADING ERROR. Creating new storage file.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a welcome message. To be called when Duke starts to run."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printLine(\"Hello! I\u0027m Duke!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printLine(\"What can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a line to separate user input and chatbot responses."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        System.out.println(\"    ______________________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message indicating an error due to user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param message String containing details of error."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        printLine(\"OOPS!!! \" + message + \" :( :(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints an indented line with chatbot responses."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param string String containing response of chatbot."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void printLine(String string) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        System.out.println(\"     \" + string);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Reads next line of user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return String containing user input, ending with newline character."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 74
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a Deadline Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** String containing date and time of Event to be created. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddDeadlineCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the Deadline to be created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date String containing date and time of Deadline to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddDeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.dateString \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new Deadline(description, dateString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds an Event Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** String containing date and time of Event to be created. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddEventCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the Event to be created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date String containing date and time of Event to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddEventCommand(String description, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        dateString \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new Event(description, dateString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a task to the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Description of the task to be added. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddTaskCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddTaskCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command to add a task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Creates a task and adds it to the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful addition."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If error occurs in creating the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d createTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.getNumTasks() + \" in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the task to be created by the command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Task created by the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date associated with command is of wrong format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public abstract Task createTask() throws DukeException;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 55
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that adds a ToDo Task to the tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class AddToDoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an AddToDoCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the ToDo to be created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public AddToDoCommand(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return new ToDo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If unexpected behavior or input is encountered during execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether a command is an ExitCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return False for non-exit commands, true for exit commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that deletes a task from the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Index of task to be deleted. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a DeleteCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is non-positive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DeleteCommand(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task number must be positive.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to delete a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful task deletion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through Storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is larger than number of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003e tasks.getNumTasks()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"You have less than \" + taskNumber + \" tasks.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Now you have \" + tasks.getNumTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 55
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that sets a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Index of task to be set as done. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Intializes a DoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param taskNumber Index of task to be set as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is non-positive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DoneCommand(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task number must be positive.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to set a task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets a task from the list of tasks as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Saves the updated list through Storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If taskNumber is larger than number of tasks or task is already done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskNumber \u003e tasks.getNumTasks()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"You have less than \" + taskNumber + \" tasks.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Task task \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Task \" + taskNumber + \" is already done.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            task.setIsDone(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(\"  \" + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that exits the chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints an exit message to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        ui.printLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that finds tasks containing a keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Keyword to be searched for. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a FindCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param keyword Keyword to be searched for."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a command to find commands with a keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Searches list of tasks to find commands with keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints a message to the user indicating successful search, and list of tasks found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int numTasks \u003d tasks.getNumTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (numTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"There are no tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (task.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                if (taskCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                    ui.printLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                ui.printLine(taskCount +  \".\" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"No task with keyword \u0027\" + keyword + \"\u0027 found.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a command that lists all tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes the command to list all tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Prints all tasks in storage order to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param tasks List of tasks kept tracked of by Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param ui Unit that manages user interface of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param storage Unit that manages saved data of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If list of tasks is empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        int numTasks \u003d tasks.getNumTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            ui.printLine(i + \".\" + task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (numTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"No tasks added.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 34
    }
  },
  {
    "path": "src/main/java/duke/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task that is associated with a date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Date associated with the task */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Format of date and time for input and output (dd/MM/yyyy HHmm). */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected static SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Intializes a DatedTask object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param date Date associated with task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date does not follow format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public DatedTask(String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        hasDate \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            this.date \u003d dateFormat.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            throw new DukeException(\"Date must be of format dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task with a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param by Due date and time of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date and time format of by is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Deadline (String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return super.toString() + \" (by: \" + dateFormat.format(date) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates an event Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes an Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param at Date and time the event occurs at."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @throws DukeException If date and time format of at is wrong."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Event (String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * (@inheritDoc)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return super.toString() + \" (at: \" + dateFormat.format(date) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a task that is kept tracked of by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Whether a task is complete or not.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Whether a task is associated with a date. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected boolean hasDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** The type of the task. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a Task object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        hasDate \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether the task is associated with a date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if task is associated with a date, false otherwise."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean getHasDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return hasDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns whether the task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if task is done, false otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Sets whether the task is done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param isDone Boolean variable for whether a task is done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns date associated with task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return String representing date associated with task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns status icon representing whether the task is done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return Status icon representing whether the task is done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"+\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            return \"-\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return TaskType object representing type of the task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Returns true if description of task contains a keyword."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param keyword Keyword to be searched."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @return True if description of task contains keyword, false otherwise."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        String[] tokens \u003d description.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        for (String token : tokens) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            if (token.equals(keyword)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return taskType + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 117
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the concrete type of a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for ToDo Tasks. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    TO_DO(\u0027T\u0027),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for Deadline Tasks. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    DEADLINE(\u0027D\u0027),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** TaskType for Event Tasks. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    EVENT(\u0027E\u0027);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /** Symbol associated with a particular TaskType */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    private char typeSymbol;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Constructor for TaskType objects"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param typeSymbol Symbol associated with the TaskType."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    TaskType(char typeSymbol) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.typeSymbol \u003d typeSymbol;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        return \"[\" + typeSymbol + \"]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 30
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates a Task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Initializes a ToDo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        this.taskType \u003d TaskType.TO_DO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 16
    }
  },
  {
    "path": "src/test/java/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the tests for the ListCommand class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a test for the execute method for when the list is empty."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Asserts if the correct exception is thrown."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void execute_emptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        Storage storage \u003d new Storage(\"data.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            new ListCommand().execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            assertEquals(\"No tasks added.\", e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 33
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " * Encapsulates the tests for the Parser class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Executes a test for the parse method for when the command is unrecognised."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     * Asserts if the correct exception is thrown."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    public void parse_unrecognisedCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            Parser.parse(\"UwU\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "            assertEquals(\"Unrecognised command.\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 1 in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [D][-] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 2 in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [T][-] live a good life"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Now you have 3 in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][-] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     DukeException: OOPS! Task 2 is already done :("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][-] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][-] live a good life"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [E][+] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "       [T][+] live a good life"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     1.[E][+] gym (at: 01/01/1996 2359)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     2.[D][+] cs2103t project (by: 27/08/2019 2359)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     3.[T][+] live a good life"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    ______________________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 64
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "event gym /at 01/01/1996 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "deadline cs2103t project /by 27/08/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "todo live a good life"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiyang13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiyang13"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "weiyang13": 21
    }
  }
]
