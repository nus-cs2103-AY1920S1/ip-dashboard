[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "version \u00270.1.5\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    for (module in [\u0027base\u0027, \u0027controls\u0027, \u0027fxml\u0027, \u0027graphics\u0027])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        for (os in [\u0027win\u0027, \u0027mac\u0027, \u0027linux\u0027])"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "            implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-\u0027 + module, version: \u002711.0.2\u0027, classifier: os"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    sourceCompatibility \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    targetCompatibility \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveBaseName.set \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveVersion.set \"0.1.5\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveClassifier.set null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    archiveAppendix.set null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 33,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "### Add ToDos"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "Adds a todo which consists of a description to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "### Add events"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "Adds a event which consists of a description and a time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "### Add deadlines"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "Adds a ToDo which consists of a description and a deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "### Find commands"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "Look through the task list for tasks containing a specified word or phrase."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "### `list` - List tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "Lists all tasks in the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "1. ..."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "2. ..."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "etlow": 22,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/CmdDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class CmdDuke extends Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new copy of the Duke application for the command line."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param filePath File path of the save file to store tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private CmdDuke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(filePath, new CmdUi());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Runs this Duke application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        CmdUi cmdUi \u003d (CmdUi) ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        while (!isExit \u0026\u0026 cmdUi.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "            isExit \u003d runInput(cmdUi.readCommand());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        new CmdDuke(Duke.DEFAULT_FILE_PATH).run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 27
    }
  },
  {
    "path": "src/main/java/duke/CmdUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class CmdUi implements Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether there is another line of input to read."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Whether there is another line of input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    boolean hasNextLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return input.hasNextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Reads a line from the input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Next line of input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Outputs a list of lines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param message List of lines."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void showMessage(List\u003cString\u003e message) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        message.stream()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .map(line -\u003e INDENT + line)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .forEach(System.out::println);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 43
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "public abstract class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    protected static final String DEFAULT_FILE_PATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new copy of the Duke application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param filePath File path of the save file to store tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    protected Duke(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (!(e instanceof NoSuchFileException)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "                if (e instanceof DukeException) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ui.showError(\"Could not load tasks. Proceeding may overwrite old tasks.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser \u003d Parser.getForDefaultCommands(tasks, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    protected boolean runInput(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Command command \u003d parser.parse(words);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assert command !\u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            ui.showMessage(command.run(words));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return command.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 55
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 7
    }
  },
  {
    "path": "src/main/java/duke/DukeRuntimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DukeRuntimeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DukeRuntimeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 7
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.gui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Runs the appropriate Duke based on the command line arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (List.of(args).contains(\"cmdline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "            CmdDuke.main(args);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 24
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Registers a command to be returned later."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param name Name that will trigger the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param command Command to return later."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void register(String name, Command command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        commands.put(name, command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the appropriate command given the line that the user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Line of input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Command to use on the input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws DukeException If there is no such command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Command parse(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d commands.get(words[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a parser with the default commands for Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks Task list to use."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to store tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Parser to parse commands."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static Parser getForDefaultCommands(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"todo\", ToDo.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"deadline\", Deadline.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"event\", Event.getCommand(tasks, storage));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"list\", new ListCommand(tasks));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"find\", new FindCommand(tasks));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"view\", new ViewCommand(tasks));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"done\", new DoneCommand(tasks, storage));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"delete\", new DeleteCommand(tasks, storage));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"help\", new HelpCommand());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"bye\", new ByeCommand());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return parser;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 61
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Storage(String location) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        path \u003d Paths.get(location);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Saves the given list of lines."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param lines List of lines to save."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the tasks cannot be saved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void store(List\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Files.write(path, lines);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Loads and returns the list of lines."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return List of lines loaded."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the lines cannot be loaded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return Files.readAllLines(path);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 35
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Outputs a list of lines."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param message List of lines."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void showMessage(List\u003cString\u003e message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Outputs a list of lines."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param message List of lines."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default void showMessage(String... message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        showMessage(List.of(message));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Shows an error message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default void showError(String message) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default void showWelcome() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        showMessage(\"Hello! I\u0027m Duke\", \"What can I do for you?\", \"Enter help for a list of commands.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the message to show the user when they leave."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether the program should exit after this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return true since this command should cause the program to exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the message to show the user after the command is run."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e run(String[] words) throws DukeException, IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether the program should exit after this command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return false by default, most commands should not exit the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DeleteCommand extends DoneCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DeleteCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(tasks, storage, index -\u003e List.of(\"Noted. I\u0027ve removed this task:\", \"  \" + tasks.remove(index),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.function.IntFunction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private IntFunction\u003cList\u003cString\u003e\u003e action \u003d index -\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Nice! I\u0027ve marked this task as done:\", \"  \" + task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    };"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public DoneCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    DoneCommand(TaskList tasks, Storage storage, IntFunction\u003cList\u003cString\u003e\u003e action) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this(tasks, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Marks a task as done and returns a message about the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws IOException If the tasks cannot be saved."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        int index \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"There are no tasks in the list.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } else if (tasks.size() \u003d\u003d 1 \u0026\u0026 index !\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Invalid task number. Please use 1 to choose the only task.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } else if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(\"Invalid task number. Please use a number from 1 to \" + tasks.size() + \".\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e message \u003d action.apply(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 51
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class FindCommand extends ListCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Generates a new find command with a header and criteria of whether the task contains the given words."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public FindCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(tasks,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "            words -\u003e \"Here are the matching tasks in your list:\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            words -\u003e task -\u003e task.toString().contains(extractArgument(words)));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 18
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Here are the commands you can use:\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Task adding:\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"deadline \u003cdescription\u003e /by \u003ctime\u003e\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"event \u003cdescription\u003e /at \u003ctime\u003e\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"todo \u003cdescription\u003e\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Task editing: (index is obtained from the list command)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"list\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"done \u003cindex\u003e\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"delete \u003cindex\u003e\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Task searching:\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"find \u003cquery\u003e\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"view \u003cdate\u003e\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Miscellaneous:\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"help\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"bye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeRuntimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Function\u003cString[], String\u003e getHeader \u003d words -\u003e \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Function\u003cString[], Predicate\u003cTask\u003e\u003e getCriteria \u003d words -\u003e task -\u003e true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public ListCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    ListCommand(TaskList tasks,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Function\u003cString[], String\u003e headerCreator,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Function\u003cString[], Predicate\u003cTask\u003e\u003e criteriaCreator) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getHeader \u003d headerCreator;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCriteria \u003d criteriaCreator;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a message with the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param words Array of words from the input line."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Message to show the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e run(String[] words) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Predicate\u003cTask\u003e shouldInclude;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "            shouldInclude \u003d getCriteria.apply(words);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeRuntimeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return List.of(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cTask\u003e includedTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .filter(shouldInclude)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return Stream.concat("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Stream.of(getHeader.apply(words)),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "                IntStream.range(0, includedTasks.size())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "                        .mapToObj(i -\u003e i + 1 + \".\" + includedTasks.get(i))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ).collect(Collectors.toList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static String extractArgument(String[] words) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return String.join(\" \", Arrays.copyOfRange(words, 1, words.length));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ViewCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeRuntimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TimeTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ViewCommand extends ListCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Generates a new view schedule command with a header and criteria of whether the task is on the given date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public ViewCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(tasks,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "            words -\u003e \"Here is your schedule for \" + extractArgument(words) + \":\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "            words -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(extractArgument(words), DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    return task -\u003e task instanceof TimeTask \u0026\u0026 ((TimeTask) task).isOn(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                    throw new DukeRuntimeException(\"Please enter the date in the format d/M/yyyy e.g. 19/9/2019\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 29
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/GuiDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "class GuiDuke extends Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private boolean exit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private List\u003cString\u003e messages;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new copy of the Duke application for GUI with the default path."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    GuiDuke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this(Duke.DEFAULT_FILE_PATH);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new copy of the Duke application for GUI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param filePath File path of the save file to store tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private GuiDuke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this(filePath, new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private GuiDuke(String filePath, List\u003cString\u003e messages) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(filePath, message -\u003e messages.add(String.join(\"\\n\", message)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.messages \u003d messages;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        exit \u003d runInput(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e messageList \u003d getAndClearMessages();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assert messageList.size() \u003d\u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return messageList.get(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    List\u003cString\u003e getAndClearMessages() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e messageList \u003d List.copyOf(messages);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        messages.clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return messageList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "    boolean shouldExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 49
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private GuiDuke duke \u003d new GuiDuke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 31
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private GuiDuke guiDuke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void setDuke(GuiDuke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        guiDuke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private void showWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        guiDuke.getAndClearMessages().stream()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .map(message -\u003e DialogBox.getDukeDialog(message, dukeImage))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .forEach(dialogContainer.getChildren()::add);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String response \u003d guiDuke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (guiDuke.shouldExit()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Deadline extends TimeTask {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Deadline(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates a Deadline given the input line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates deadlines."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return getCommand(tasks, storage, \"by\", \"a deadline\", Deadline::new);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the type of this task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Type of this task as a string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return super.toString() + \" (by: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class Event extends TimeTask {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    Event(String description, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates an Event given the input line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates events."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return getCommand(tasks, storage, \"at\", \"an event\", Event::new);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the type of this task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Type of this task as a string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return super.toString() + \" (at: \" + getTimeString() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static List\u003cString\u003e addTask(Task task, TaskList tasks, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storage.store(tasks.getAsLines());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(\"Got it. I\u0027ve added this task:\", \"  \" + task,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the status icon of this task for display to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(getTaskType(), isDone ? \"1\" : \"0\", description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the type of this task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Type of this task as a string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    abstract String getTaskType();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns this task as a string to display to the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return This task as a string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"[\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 65
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeRuntimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a new empty task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Constructs a task list with the tasks parsed from the list of lines."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param lines List of lines to parse tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public TaskList(List\u003cString\u003e lines) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            lines.stream().map(this::parseTask).forEach(tasks::add);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeRuntimeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Removes a task from the task list at the given index."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param index Position of the task in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return The removed task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the task at the given index in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param index Position of the task in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return The requested task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a stream containing the tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Stream of tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.stream();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Converts this task list into a list of lines to save."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return List of converted tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getAsLines() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return tasks.stream().map(this::getSaveString).collect(Collectors.toList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Converts the given task into a string for saving."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param task Task to convert into a string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return String for saving."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String getSaveString(Task task) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return task.getSaveList().stream().map(this::toSaveString).collect(Collectors.joining(\"|\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Parses the given string as a task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param line Line to parse."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Parsed task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Task parseTask(String line) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String[] data \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "etlow"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ensureLength(data, 3, line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new ToDo(toOriginalString(data[2]));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ensureLength(data, 4, line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new Deadline(toOriginalString(data[2]), toOriginalString(data[3]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "etlow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "etlow"
        },
        "content": "                ensureLength(data, 4, line);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "etlow"
        },
        "content": "                task \u003d new Event(toOriginalString(data[2]), toOriginalString(data[3]));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "etlow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "etlow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeRuntimeException(\"Error loading tasks: Unknown line in save file: \" + line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeRuntimeException(\"Error loading tasks: Could not understand date in: \" + line);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "etlow"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Throws a DukeRuntimeException if the length of the data array is not equal to the provided expected length."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param data Data array to check length."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param length Expected length of data array."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param line Original line to include in exception message."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @throws DukeRuntimeException If the length of the data array is different from the expected length."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private void ensureLength(String[] data, int length, String line) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "etlow"
        },
        "content": "        if (data.length !\u003d length) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "etlow"
        },
        "content": "            throw new DukeRuntimeException(\"Error loading tasks: Could not understand line in save file: \" + line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Escapes a string to use for saving a task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param str String to escape."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Escaped string."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String toSaveString(String str) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return str.replace(\"\\\\\", \"\\\\\\\\\").replace(\"|\", \"\\\\p\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Converts an escaped string back to the original string for reconstructing a task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param str String to unescape."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Original string."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private String toOriginalString(String str) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "etlow"
        },
        "content": "        // Split the escaped string at double backslashes, keeping trailing empty strings"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return Arrays.stream(str.split(\"\\\\\\\\\\\\\\\\\", -1))"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "etlow"
        },
        "content": "                // Join with single backslash after unescaping"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .map(part -\u003e part.replace(\"\\\\p\", \"|\"))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .collect(Collectors.joining(\"\\\\\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 173
    }
  },
  {
    "path": "src/main/java/duke/task/TimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.function.BiFunction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "public abstract class TimeTask extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private DateTimeFormatter saveFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy MMMM dd HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    TimeTask(String description, String timeString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        DateTimeFormatter parseFormatter \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .appendOptional(saveFormatter)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .appendOptional(displayFormatter)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        time \u003d LocalDateTime.parse(timeString, parseFormatter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates a Deadline given the input line."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding the deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param timePreposition Preposition describing the time contained by this task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param nameWithArticle Name of the task with \"a\" or \"an\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param constructor Constructor of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates tasks with times using the given constructor."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "    static Command getCommand(TaskList tasks, Storage storage, String timePreposition, String nameWithArticle,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "                              BiFunction\u003cString, String, TimeTask\u003e constructor) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            List\u003cString\u003e wordList \u003d List.of(words);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            int separator \u003d wordList.indexOf(\"/\" + timePreposition);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(String.format("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "                        \"To create %s, enter the command \\\"%s \u003cdescription\u003e /%s \u003ctime\u003e\\\".\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "                        nameWithArticle, words[0], timePreposition));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The description of \" + nameWithArticle + \" cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } else if (separator \u003d\u003d words.length - 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"The time of \" + nameWithArticle + \" cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assert separator \u003e 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String description \u003d String.join(\" \", wordList.subList(1, separator));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String time \u003d String.join(\" \", wordList.subList(separator + 1, words.length));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "                return addTask(constructor.apply(description, time), tasks, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "                return List.of(\"Please enter the date in the format d/M/yyyy HHmm e.g. 19/9/2019 1430\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "                        \"Could not interpret as date: \" + time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the time attached to this task as a string for saving."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Time as a string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getSaveTimeString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return saveFormatter.format(time);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the time attached to this task as a string to display to the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Time as a string."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTimeString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return displayFormatter.format(time);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a list of strings representing this task so that it can be saved."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A representation of this task as a list for saving."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getSaveList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e(super.getSaveList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "etlow"
        },
        "content": "        list.add(getSaveTimeString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns whether this task is on the given date."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param date Date which this task is checked to be on."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Whether the task is on the date."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public boolean isOn(LocalDate date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return time.toLocalDate().isEqual(date);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 105
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns a Command which generates objects of this task given the input line."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param tasks The shared list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @param storage Storage to save the tasks after adding this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return A Command which generates tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public static Command getCommand(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return words -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                throw new DukeException(\"To create a todo, enter the command \\\"todo \u003cdescription\u003e\\\".\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String[] nameArr \u003d Arrays.copyOfRange(words, 1, words.length);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            return addTask(new ToDo(String.join(\" \", nameArr)), tasks, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * Returns the type of this task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "     * @return Type of this task as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTaskType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 40
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cTextFlow snapToPixel\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" fontSmoothingType\u003d\"LCD\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "          \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "etlow": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "etlow": 20
    }
  },
  {
    "path": "src/test/java/duke/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DukeExceptionTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void testExceptionConstruction() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        DukeException exception \u003d new DukeException(\"Test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"☹ OOPS!!! Test\", exception.getMessage());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"aaa\", words -\u003e List.of(words[0]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        parser.register(\"bbb\", words -\u003e List.of(words[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_validCommandA_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d parser.parse(new String[]{\"aaa\"});"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"aaa\", command.run(new String[]{\"aaa\", \"input\"}).get(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_validCommandB_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Command command \u003d parser.parse(new String[]{\"bbb\"});"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"input\", command.run(new String[]{\"bbb\", \"input\"}).get(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "            parser.parse(new String[]{\"ccc\"});"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String message \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(message).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 46
    }
  },
  {
    "path": "src/test/java/duke/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e stored;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public StorageStub() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(\"StorageStubTemp.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void store(List\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        stored \u003d lines;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 16
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final String location \u003d \"StorageTest.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final List\u003cString\u003e data \u003d List"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "            .of(\"This is a test file to test Storage.\", \"You can safely delete it.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void testStoreAndLoad() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        new Storage(location).store(data);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e loadedData \u003d new Storage(location).load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(data, loadedData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertTrue(Files.deleteIfExists(Paths.get(location)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 25
    }
  },
  {
    "path": "src/test/java/duke/command/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_normalInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e message \u003d new ByeCommand().run(new String[]{\"bye\"});"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Bye. Hope to see you again soon!\"), message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void isExit_none_trueReturned() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertTrue(new ByeCommand().isExit());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 21
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskImpl;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String deleteString \u003d new TaskImpl(\"remove 3\").toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Noted. I\u0027ve removed this task:\", \"  \" + deleteString,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new DeleteCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"delete\", \"4\"});"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deleteString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deleteString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 28
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskImpl;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DoneCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task doneTask \u003d new TaskImpl(\"get 3\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Nice! I\u0027ve marked this task as done:\", \"  \" + doneTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new DoneCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"done\", \"4\"});"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(doneTask.toString(), taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(doneTask.toString(), storageStub.stored.get(0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 30
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskImpl;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d List.of(\"Here are the matching tasks in your list:\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"1.\" + new TaskImpl(\"stream 1\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"2.\" + new TaskImpl(\"stream 10\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new FindCommand(taskListStub).run(new String[]{\"find\", \"m 1\"});"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 22
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskImpl;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.task.TaskListStub;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void run_validIndex_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e expected \u003d Stream.concat("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "                Stream.of(\"Here are the tasks in your list:\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                IntStream.range(0, taskListStub.size())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "                        .mapToObj(i -\u003e i + 1 + \".\" + new TaskImpl(\"stream \" + i))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ).collect(Collectors.toList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e actual \u003d new ListCommand(taskListStub).run(new String[]{\"list\"});"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 29
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\"},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"To create a deadline, enter the command \\\"deadline \u003cdescription\u003e /by \u003ctime\u003e\\\".\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutDesc_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\", \"/by\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutTime_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"deadline\", \"desc\", \"/by\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommandExceptionThrownHelper(String[] words, String expected) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Deadline.getCommand(taskListStub, storageStub).run(words);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String deadlineString \u003d new Deadline(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d Deadline.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"deadline\", \"desc\", \"/by\", \"28/8/2019 1234\"});"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + deadlineString,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadlineString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadlineString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalDeadline_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new Deadline(\"desc\", \"28/8/2019 1234\").getSaveList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"D\", \"0\", \"desc\", \"28/8/2019 1234\"), saveList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalDeadline_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new Deadline(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[D][\" + crossSymbol + \"] desc (by: 2019 August 28 1234)\", output);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 78
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\"},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"To create an event, enter the command \\\"event \u003cdescription\u003e /at \u003ctime\u003e\\\".\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutDesc_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\", \"/at\"},"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutTime_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        getCommandExceptionThrownHelper(new String[]{\"event\", \"desc\", \"/at\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommandExceptionThrownHelper(String[] words, String expected) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "            Event.getCommand(taskListStub, storageStub).run(words);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String eventString \u003d new Event(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d Event.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"event\", \"desc\", \"/at\", \"28/8/2019 1234\"});"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + eventString,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(eventString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(eventString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalEvent_success() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new Event(\"desc\", \"28/8/2019 1234\").getSaveList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"E\", \"0\", \"desc\", \"28/8/2019 1234\"), saveList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalEvent_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new Event(\"desc\", \"28/8/2019 1234\").toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[E][\" + crossSymbol + \"] desc (at: 2019 August 28 1234)\", output);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 78
    }
  },
  {
    "path": "src/test/java/duke/task/TaskImpl.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class TaskImpl extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public TaskImpl(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    String getTaskType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return \"type\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 12
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "public class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task lastAction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        lastAction \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return lastAction \u003d new TaskImpl(\"remove \" + index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return lastAction \u003d new TaskImpl(\"get \" + index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return 11;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return IntStream.range(0, size()).mapToObj(i -\u003e new TaskImpl(\"stream \" + i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    public List\u003cString\u003e getAsLines() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return List.of(lastAction.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 39
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void addAndGet_validIndex_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new TaskImpl(\"desc\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task, taskList.get(0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void size_withTasks_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(new TaskImpl(\"task1\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(new TaskImpl(\"task2\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(2, taskList.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void delete_validIndex_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task1 \u003d new TaskImpl(\"task1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task2 \u003d new TaskImpl(\"task2\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task1, taskList.remove(0));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(task2, taskList.get(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getAsLines_normalTasks_success() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", \"27/7/2019 1111\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Event event \u003d new Event(\"event\", \"28/8/2019 1234\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "        TaskList loadList \u003d new TaskList(taskList.getAsLines());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todo.toString(), loadList.get(0).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(deadline.toString(), loadList.get(1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(event.toString(), loadList.get(2).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 50
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_incompleteTask_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new TaskImpl(\"desc\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"type\", \"0\", \"desc\"), task.getSaveList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_doneTask_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new TaskImpl(\"desc\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"type\", \"1\", \"desc\"), task.getSaveList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_incompleteTask_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new TaskImpl(\"desc\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[type][\" + crossSymbol + \"] desc\", task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_doneTask_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": "        Task task \u003d new TaskImpl(\"desc\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String tickSymbol \u003d \"\\u2713\"; // tick symbol"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[type][\" + tickSymbol + \"] desc\", task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 37
    }
  },
  {
    "path": "src/test/java/duke/task/TimeTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "class TimeTaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private TimeTask getTimeTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "        return new TimeTask(\"desc\", \"28/8/2019 1234\") {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String getTaskType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "                return \"type\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveTimeString_normalTime_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"28/8/2019 1234\", getTimeTask().getSaveTimeString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getTimeString_normalTime_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"2019 August 28 1234\", getTimeTask().getTimeString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 26
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "etlow"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "etlow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "etlow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "etlow"
        },
        "content": "import duke.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "etlow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "etlow"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final TaskListStub taskListStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "etlow"
        },
        "content": "    private static final StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_runWithoutParams_exceptionThrown() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "etlow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "etlow"
        },
        "content": "            ToDo.getCommand(taskListStub, storageStub).run(new String[]{\"todo\"});"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "etlow"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "etlow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "etlow"
        },
        "content": "            String expected \u003d \"To create a todo, enter the command \\\"todo \u003cdescription\u003e\\\".\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertEquals(new DukeException(expected).getMessage(), e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(taskListStub.lastAction);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "etlow"
        },
        "content": "            assertNull(storageStub.stored);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "etlow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getCommand_run_success() throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String todoString \u003d new ToDo(\"desc\").toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e lines \u003d ToDo.getCommand(taskListStub, storageStub)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "etlow"
        },
        "content": "                .run(new String[]{\"todo\", \"desc\"});"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"Got it. I\u0027ve added this task:\", \"  \" + todoString,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "etlow"
        },
        "content": "                \"Now you have \" + taskListStub.size() + \" tasks in the list.\"), lines);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todoString, taskListStub.lastAction.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(todoString, storageStub.stored.get(0));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void getSaveList_normalToDo_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "etlow"
        },
        "content": "        List\u003cString\u003e saveList \u003d new ToDo(\"desc\").getSaveList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(List.of(\"T\", \"0\", \"desc\"), saveList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void toString_normalToDo_success() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String output \u003d new ToDo(\"desc\").toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "etlow"
        },
        "content": "        String crossSymbol \u003d \"\\u2718\"; // X symbol"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "etlow"
        },
        "content": "        assertEquals(\"[T][\" + crossSymbol + \"] desc\", output);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "etlow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "etlow"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "etlow"
        },
        "content": "    void clearTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "etlow"
        },
        "content": "        taskListStub.lastAction \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "etlow"
        },
        "content": "        storageStub.stored \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "etlow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "etlow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "etlow": 62
    }
  }
]
