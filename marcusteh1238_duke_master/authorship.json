[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 6,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public DeadlineTask(String details, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"[D]\" + super.toString() + \"( by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    static PrintStream ps \u003d new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    static String[] validTaskTypes \u003d new String[] {\"deadline\", \"event\", \"todo\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Main program loop of the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param args Unused args."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ps.println(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ps.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                processCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ps.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ps.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Processes the user input and outputs a response."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param command The user\u0027s input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static void processCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            ps.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            taskList.printList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (commandArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (commandArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"Please specify a task ID to set as done!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (!commandArray[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"The ID of the task must be an integer!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            int id \u003d Integer.parseInt(commandArray[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            taskList.markAsDone(id);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (isValidTaskType(commandArray[0])) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            taskList.addTask(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Displays the welcome message when the user starts the program."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Check against the list of valid Task types to see if the command is valid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param taskType the first argument of the command input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return True if the first argument of the command input is valid."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static boolean isValidTaskType(String taskType) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String s : validTaskTypes) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (taskType.equals(s)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 82,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(\"\\t  \" + ((char) 0x2639) + \" OOPS!!! \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventTask(String details, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 14
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected Task(String details) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Creates the type of task to be added to the list based on user\u0027s command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param command The entire line of command input by the user into the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A Task object that follows the specifications of the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws DukeException Exception thrown if the format is invalid."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected static Task create(String command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] commandArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String taskType \u003d commandArray[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        command \u003d command.replaceFirst(taskType + \" \", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            commandArray \u003d command.split(\" /at \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String details \u003d commandArray[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (commandArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"Invalid command format! Proper usage: \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        + \"\u0027event \u003cdetails\u003e /at \u003ctiming\u003e\u0027\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (details.equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                return new EventTask(commandArray[0], commandArray[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            commandArray \u003d command.split(\" /by \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String details \u003d commandArray[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (commandArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"Invalid command format! Proper usage: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        + \"\u0027deadline \u003cdetails\u003e /by \u003ctiming\u003e\u0027\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (details.equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                return new DeadlineTask(commandArray[0], commandArray[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new ToDoTask(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Indicate that the task is done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * String representing the Task object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return String representation of the Task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        char statusIcon \u003d isDone ? (char) 0x2713 : (char) 0x2718;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"[\" + statusIcon + \"] \" + details;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private ArrayList\u003cTask\u003e listItems;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private PrintStream ps \u003d new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.listItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Prints the list of items in the order as stored by the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected void printList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (listItems.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            ps.println(\"\\tYou currently have no tasks!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d listItems.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            ps.println(\"\\t  \" + i + \". \" + listItems.get(i - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Adds a task to the list based on the given command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param command The command given by the user to be processed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws DukeException Exception thrown during the creation of"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     *     the Task object if the command is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected void addTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Task newTask \u003d Task.create(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        listItems.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String taskSingular \u003d listItems.size() \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\t\" + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"\\t  \" + newTask + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"\\t\" + \"Now you have \" + listItems.size() + \" \" + taskSingular + \" in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Mark a task in the list as done based on its ID."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param id the ID of the task that is done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws DukeException Exception thrown if the ID input is invalid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected void markAsDone(int id) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (id \u003e listItems.size() || id \u003c\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new DukeException(\"The ID that you have entered is not a valid task ID\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Task task \u003d listItems.get(id - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ps.println(\"\\tNice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"\\t  \" + task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 56
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public ToDoTask(String details) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 21
    }
  }
]
