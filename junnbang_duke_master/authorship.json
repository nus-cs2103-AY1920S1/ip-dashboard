[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public AddCommand(String command, String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public AddCommand(String command, String desc, String dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String cmd \u003d this.getCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        if (cmd.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            newTask \u003d new Deadline(this.getDesc(), this.getDateTime());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } else if (cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            newTask \u003d new Event(this.getDesc(), this.getDateTime());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            newTask \u003d new ToDo(this.getDesc());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showAddMessage(newTask, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 42
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public LocalDateTime getLocalDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String dateStr \u003d this.getDate();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateStr, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDateTimePrint() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        LocalDateTime dateTime \u003d this.getLocalDateTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String formattedDateTime \u003d dateTime.format(formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return formattedDateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateTimePrint() + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 37
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public DeleteCommand(String command, int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.index - 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        Task deletedTask \u003d tasks.getTask(this.getIndex());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        tasks.deleteTask(this.getIndex());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showDeleteMessage(deletedTask, tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 23
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public DoneCommand(String command, int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.index - 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        Task doneTask \u003d tasks.getTask(this.getIndex());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        tasks.markTaskDone(this.getIndex());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showDoneMessage(doneTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        //load previous task list. If not found, create a new one"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            ui.showLoadingSuccessful();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String inputStr \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                Command c \u003d Parser.parse(inputStr);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String errMessage \u003d \"\\t \" + this.getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return errMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public LocalDateTime getLocalDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String dateStr \u003d this.getDate();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(dateStr, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDateTimePrint() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        LocalDateTime dateTime \u003d this.getLocalDateTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String formattedDateTime \u003d dateTime.format(formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return formattedDateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getDateTimePrint() + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 37
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 15
    }
  },
  {
    "path": "src/main/java/LoadFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class LoadFile {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public LoadFile(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTaskFromFile() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            File savedFile \u003d new File(this.getFilePath());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            Scanner sc \u003d new Scanner(new FileReader(savedFile));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            taskArr \u003d changeTextToTask(taskArr, sc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            return taskArr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            throw new DukeException(\"Unable to load file.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private ArrayList\u003cTask\u003e changeTextToTask(ArrayList\u003cTask\u003e taskArr, Scanner sc) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String[] lineArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String typeOfTask \u003d lineArr[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String isDone \u003d lineArr[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String desc \u003d lineArr[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            if (typeOfTask.equals(\"E\") || typeOfTask.equals(\"D\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                date \u003d lineArr[3];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            //create each task base on txt, and add into list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            Task newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            switch (typeOfTask) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                newTask \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                taskArr.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                newTask \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                taskArr.add(newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                newTask \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                taskArr.add(newTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            //check if Task is done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return taskArr;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 71
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        //Check what type of command is it"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String cmd \u003d inputArr[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        Command nextCommand \u003d new ExitCommand(cmd);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                nextCommand \u003d new ShowCommand(cmd);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (cmd.equals(\"todo\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String desc \u003d getDesc(inputArr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                nextCommand \u003d new AddCommand(cmd, desc);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (cmd.equals(\"deadline\") | cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String desc \u003d getDesc(inputArr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String dateTime \u003d getDateTime(inputArr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                nextCommand \u003d new AddCommand(cmd, desc, dateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (cmd.equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String index \u003d inputArr[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                nextCommand \u003d new DoneCommand(cmd, Integer.parseInt(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (cmd.equals(\"delete\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String index \u003d inputArr[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                nextCommand \u003d new DeleteCommand(cmd, Integer.parseInt(index));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                //go with default command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                //if command can\u0027t be recognised"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            //catch anything wrong with input fields"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            throw new DukeException(\"☹ Something wrong with input fields! Please try again.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        //return exit command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return nextCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private static String getDesc(String[] inputArr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        for (int i \u003d 1; i \u003c inputArr.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            if (i \u003d\u003d inputArr.length - 1 || inputArr[i + 1].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                desc +\u003d inputArr[i];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                desc +\u003d inputArr[i] + \" \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private static String getDateTime(String[] inputArr) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String dateTime \u003d inputArr[inputArr.length - 2] + \" \" + inputArr[inputArr.length - 1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 58
    }
  },
  {
    "path": "src/main/java/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ShowCommand(String cmd) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(cmd);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 14
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        LoadFile lf \u003d new LoadFile(this.getFilePath());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        ArrayList\u003cTask\u003e taskArr \u003d lf.loadTaskFromFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return taskArr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        WriteFile wf \u003d new WriteFile(this.getFilePath());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        wf.writeTaskToFile(tasks.getTaskArr());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    //get methods"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    //set methods"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String printTask \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return printTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 29
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArr;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.taskArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.taskArr \u003d new ArrayList\u003cTask\u003e(taskArr);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArr() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.taskArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.getTaskArr().size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void markTaskDone(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.getTaskArr().get(index).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.getTaskArr().get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.getTaskArr().add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.getTaskArr().remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 39
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 11
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public static final String divider \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public static final String messageFrontInden \u003d \"\\t  \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String inputStr \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return inputStr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        String logo \u003d \"\\t   ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                + \"\\t  |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                + \"\\t  | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                + \"\\t  | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                + \"\\t  |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        System.out.println(\"Unable to load previous data! A new task list is created.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showLoadingSuccessful() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        System.out.println(\"Previous task list loaded successfully.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void printWithInden(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        System.out.println(messageFrontInden + message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            printWithInden((i + 1) + \". \" + tasks.getTask(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"  \" + doneTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showDeleteMessage(Task deletedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"  \" + deletedTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Now you have \" + tasks.getTaskCount() +\" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void showAddMessage(Task addedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"  \" + addedTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        printWithInden(\"Now you have \" + tasks.getTaskCount() +\" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 81
    }
  },
  {
    "path": "src/main/java/WriteFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "public class WriteFile {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public WriteFile(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    //get methods"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        return this.filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    //set methods"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    public void writeTaskToFile(ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            //create a new file or overwrite existing file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            File newFile \u003d new File(this.getPath());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(newFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            this.appendTaskToPrintWriter(pw, taskArr);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            System.err.println(err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    private void appendTaskToPrintWriter(PrintWriter pw, ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        //loop through the array and append each String to each line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        for (int x \u003d 0; x \u003c taskArr.size(); x++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            Task task \u003d taskArr.get(x);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String typeOfTask \u003d String.valueOf(task.toString().charAt(1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String status \u003d task.getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            String desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            pw.printf(typeOfTask + \" | \" + status + \" | \" + desc);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            //check if there is date exist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                Deadline deadlineTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String taskDate \u003d deadlineTask.getDate();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                pw.printf(\" | \" + taskDate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                Event eventTask \u003d (Event) task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                String taskDate \u003d eventTask.getDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junnbang"
        },
        "content": "                pw.printf(\" | \" + taskDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junnbang"
        },
        "content": "            pw.printf(\"%n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junnbang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junnbang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junnbang": 57
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      }
    ],
    "authorContributionMap": {
      "junnbang": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "abc"
      }
    ],
    "authorContributionMap": {
      "junnbang": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junnbang"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junnbang"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junnbang"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junnbang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junnbang"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junnbang"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junnbang"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junnbang"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junnbang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junnbang"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junnbang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "junnbang": 21
    }
  }
]
