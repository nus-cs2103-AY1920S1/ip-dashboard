[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "run {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 31,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to add a task to the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after finding"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert taskToAdd !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.print(\"Got it. I\u0027ve added this task: \\n\" + taskToAdd + \"\\nNow you have \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 28
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 14
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DeleteCommand(int taskNumToDelete) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToDelete \u003d taskNumToDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete one item from the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * after user request."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after deletion"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert Math.abs(taskNumToDelete) \u003e\u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d tasks.deleteTask(taskNumToDelete);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task: \\n\" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    + tasks.getList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 36
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    int taskNumToMark;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public DoneCommand(int taskNumToMark) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToMark \u003d taskNumToMark;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task in the list as completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after marking the task as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert Math.abs(taskNumToMark) \u003e\u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (!tasks.getTask(taskNumToMark).isDone()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                tasks.doneTask(taskNumToMark);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return ui.print(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + tasks.getList().get(taskNumToMark - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return ui.print(\"Error, task already completed!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 37
    }
  },
  {
    "path": "src/main/java/commands/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ErrorCommand(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert msg !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after error"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert msg !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 25
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to exit from application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after exit"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        //tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 25
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    boolean foundAny \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to find all related tasks given"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * a keyword from user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after finding"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert keyword !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                output +\u003d (\"\\n\" + ui.print(t.toString()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                foundAny \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (!foundAny) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Sorry, keyword not found!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 39
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after error"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return new Storage(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\help.txt\").accessHelp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 21
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to call for listing of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * in the current list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke lists the tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return ui.printList(tasks.getList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 21
    }
  },
  {
    "path": "src/main/java/commands/NoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class NoteCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String notes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public NoteCommand(int taskNum, String notes) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete one item from the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * after user request."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke response after deletion"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            t.addNotes(notes);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return (\"Noted. I\u0027ve added notes for this task: \" + t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid input\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 38
    }
  },
  {
    "path": "src/main/java/commands/PostponeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer taskNumToPostpone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer daysToPostpone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer hoursToPostpone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Integer minutesToPostpone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public PostponeCommand(String taskNumToPostpone, String daysToPostpone,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                           String hoursToPostpone, String minutesToPostpone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.taskNumToPostpone \u003d Integer.parseInt(taskNumToPostpone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.daysToPostpone \u003d Integer.parseInt(daysToPostpone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.hoursToPostpone \u003d Integer.parseInt(hoursToPostpone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.minutesToPostpone \u003d Integer.parseInt(minutesToPostpone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task in the list as completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return duke\u0027s response after postponing a task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert tasks.getList()!\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t \u003d tasks.getTask(taskNumToPostpone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (t.getSymbol().equals(\"E\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Event event \u003d (Event) t;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                event.postpone(daysToPostpone, hoursToPostpone, minutesToPostpone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return \"Changes were made: \\n \" + event.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (t.getSymbol().equals(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Deadline deadline \u003d (Deadline) t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                deadline.postpone(daysToPostpone, hoursToPostpone, minutesToPostpone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                storage.updateList(tasks.getList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return \"Changes were made: \\n \" + deadline;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert t.getSymbol().equals(\"T\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return ui.print(\"Todo task cannot be postponed!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Invalid task number :(\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return e.toString() + \"\\nInput format should be: postpone taskNumber days hrs mins :) \\n \" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    \"Example: postpone 1 0 4 0 will postpone task 1 by 4 hours.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 56
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T // 0 // reabk #harry potter #chapter #page555 #maybeasdasodnadn asdnas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "T // 0 // aaaa"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "E // 0 // party // 09/09/2019 1100 2200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "D // 0 // submit hw // 12/12/2019 1800"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 4
    }
  },
  {
    "path": "src/main/java/data/help.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "List of commands with format:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "1. add"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    todo [task name]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    event [task name] [date and time with format dd/mm/yyyy] [start time: hhmm] [end time: hhmm]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    deadline [task name] [dd/mm/yyyy] [hhmm]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Example: event party 01/01/2011 0800 1900"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "2. delete [task number]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Example: delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "3. done [task number]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "4. find [keyword]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "5. list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "6. postpone [task number]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "7. note [task number] [command]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    note [task number] [notes]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    note [task number] clear"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    note [task number] show"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "8. bye"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    Exits the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 26
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param img the image for user and duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param text textbox for user and duke"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method returns a DialogBox for duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 68
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * The Duke program implements an application that"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * acts like a digital notebook for the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @author Calvin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * @since 2019-08-20"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This constructor takes in the filePath and initiates the necessary"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * classes required."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param filePath the local directory of the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if(input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Duke duke \u003d new Duke(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return Parser.parse(input).execute(duke.tasks, duke.ui, duke.storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 55
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        //new Duke(\"C:\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 53
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to parse the user command the task list from disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param fullCommand command which is read as a string by the UI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return commands.Command command which can be executed by application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String[] input \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            //assert input.length \u003c 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (input[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new DoneCommand(num);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                int num \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new DeleteCommand(num);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new FindCommand(input[1].trim());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"help\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"postpone\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                String[] arr \u003d input[1].trim().split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new PostponeCommand(arr[0], arr[1], arr[2], arr[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].equals(\"note\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                String[] arr \u003d input[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new NoteCommand(Integer.parseInt(arr[0]), arr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else if (input[0].length() \u003c 4) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                throw new DukeException(\"Input length too short\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        t \u003d new Todo(input[1].trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        String[] str \u003d input[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        t \u003d new Deadline(str[0], str[1].substring(3).trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        String[] str \u003d input[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        t \u003d new Event(str[0], str[1].substring(3).trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                        throw new DukeException(\"Unable to add unknown task: \" + input[0]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert !t.isDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                assert t.getDescription() !\u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                return new AddCommand(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(\"Wrong input format!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return new ErrorCommand(\"Me no understand!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 78
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String accessHelp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert sc !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "             output +\u003d (sc.nextLine() + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to load the task list from disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Scanner sc1 \u003d  new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        while (sc1.hasNextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String[] oldList \u003d sc1.nextLine().split(\" // \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (oldList.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (oldList[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                t \u003d new Todo(oldList[2].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                if (oldList[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Deadline(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    t \u003d new Event(oldList[2].trim(), oldList[3].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            if (oldList[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to update current items in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current task list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void updateList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(file)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                if (t.getSymbol().equals(\"T\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    out.println(t.getSymbol() + \" // \" + (t.isDone() ? 1 : 0) + \" // \" + t.getDescription()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    + t.getNotes());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    assert (t.getSymbol().equals(\"D\") || t.getSymbol().equals(\"E\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                    out.println(t.getSymbol() + \" // \" + (t.isDone() ? 1 : 0) + \" // \" + t.getDescription()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                            + \" // \" + t.getExtraInfo() + t.getNotes());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 89
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for duke.TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to add a task to the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskToAdd the task to add"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert taskToAdd !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        list.add(taskToAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to delete a task to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToDelete the task number to delete"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task deleteTask(int taskNumToDelete) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return list.remove(taskNumToDelete - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param taskNumToMark the task number to mark"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void doneTask(int taskNumToMark) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d list.get(taskNumToMark - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task getTask(int taskNumToGet) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        Task t \u003d list.get(taskNumToGet - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 63
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String print(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to print current items in the list to user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param list the current TaskList object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return lists of tasks in list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert list !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"Empty task list!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert list.size() \u003e 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                Task t \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                output +\u003d (\"\\n\" + i + \".\" + t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 32
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param by          due date of deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert by !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] dateArray \u003d by.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(dateArray[0],formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d d1.atTime(Integer.parseInt(dateArray[1]) / 100, Integer.parseInt(dateArray[1]) % 100);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone, int hoursToPostpone, int minutesToPostpone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d date1.plus(Duration.ofDays(daysToPostpone))."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  date1 + \")\" + super.getNotes();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 50
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    LocalDateTime date2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This is a constructor for tasks.Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @param at start and end time of event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert at !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        getDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to generate the date of start and end"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * of the event as a LocalDateTime object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String[] dateArray \u003d at.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(dateArray[0],formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        LocalDate d2 \u003d LocalDate.parse(dateArray[0],formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d d1.atTime(Integer.parseInt(dateArray[1]) / 100, Integer.parseInt(dateArray[1]) % 100);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2 \u003d d2.atTime(Integer.parseInt(dateArray[2]) / 100, Integer.parseInt(dateArray[2]) % 100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                         int hoursToPostpone, int minutesToPostpone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date1 \u003d date1.plus(Duration.ofDays(daysToPostpone))."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        date2 \u003d date2.plus(Duration.ofDays(daysToPostpone))."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                plus(Duration.ofHours(hoursToPostpone)).plus(Duration.ofMinutes(minutesToPostpone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert date1 !\u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert date2 !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + date1 + \" to \"+ date2 + \")\" + super.getNotes();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 58
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    String symbol;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    private boolean hasNotes \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    ArrayList\u003cString\u003e noteList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        noteList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return symbol;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return status icon of a task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String status icon"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used return description of a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to return extra information such as"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * the time of a task (if any)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * @return String extra information"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getExtraInfo() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (symbol.equals(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else if (symbol.equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Event t \u003d (Event) this;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return t.at;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            assert symbol.equals(\"D\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            Deadline t \u003d (Deadline) this;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return t.by;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert !isDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void addNotes(String notes) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        noteList.add(notes);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        hasNotes \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void postpone(int daysToPostpone, int hoursToPostpone, int minutesToPostpone) {};"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String getNotes() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        if (!hasNotes) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        for (String note: noteList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            output +\u003d (\" #\" + note);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 96
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        super.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assert super.toString() !\u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        return \"[T]\" + super.toString() + super.getNotes();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #ffe4b5;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label asdasdas\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cFont name\u003d\"Century Gothic\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                \u003cCircle centerX\u003d\"40.0\" centerY\u003d\"40.0\" radius\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 31
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testGetList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList list \u003d new TaskList(test);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, list.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testAddList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        test.add(new Task(\"x\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        TaskList list \u003d new TaskList(test);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(test, list.getList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "calvincxz": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "        assertEquals(\"[T][\\u2718] todo\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "                new Todo(\"todo\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "calvincxz"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "calvincxz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "calvincxz": 15
    }
  }
]
