[
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.InputReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.InvalidInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.io.OutputWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private InputReader inputReader \u003d new InputReader();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private OutputWriter outputWriter \u003d new OutputWriter();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Duke(String filePath) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.taskManager \u003d new TaskManager(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        outputWriter.printHeader();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        while (inputReader.hasNextCommand()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String command \u003d inputReader.nextCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            handleCommand(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        outputWriter.printFooter();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            System.out.println(\"Failed to run the main program, error: \" + e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private void handleCommand(String command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String[] commandParts \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            switch (commandParts[0]) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                outputWriter.printTasks(taskManager.getTasks());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.EMPTY_DONE_DESCRIPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(commandParts[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    taskManager.markAsDone(taskNumber);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    outputWriter.notifyTaskDone(taskManager.getTask(taskNumber));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.EMPTY_DELETE_DESCRIPTION);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(commandParts[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    Task removedTask \u003d taskManager.removeTask(taskNumber);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    outputWriter.notifyRemoveTask(removedTask, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.EMPTY_TODO_DESCRIPTION);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                ToDo todo \u003d new ToDo(commandParts[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                taskManager.addTask(todo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                outputWriter.notifyAddTask(todo, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.EMPTY_EVENT_DESCRIPTION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                String[] eventParams \u003d commandParts[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (eventParams.length \u003c 2) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.MISSING_EVENT_PARAMETER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                Event event \u003d new Event(eventParams[0], eventParams[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                taskManager.addTask(event);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                outputWriter.notifyAddTask(event, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (commandParts.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.EMPTY_DEADLINE_DESCRIPTION);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                String[] deadlineParams \u003d commandParts[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                if (deadlineParams.length \u003c 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    throw new InvalidInputException(InvalidInputException.Code.MISSING_DEADLINE_PARAMETER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadlineParams[0], deadlineParams[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                taskManager.addTask(deadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                outputWriter.notifyAddTask(deadline, taskManager.getNumberOfTasks());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidInputException(InvalidInputException.Code.UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            outputWriter.print(e.getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 108,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/io/InputReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class InputReader {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private static String byeCommand \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private Optional\u003cString\u003e buffer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public InputReader() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.buffer \u003d Optional.empty();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private void refreshBuffer() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (!buffer.isPresent() \u0026\u0026 scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (!command.equals(byeCommand)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                buffer \u003d Optional.of(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        refreshBuffer();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return buffer.isPresent();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String nextCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        refreshBuffer();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Optional\u003cString\u003e maybeCommand \u003d buffer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        buffer \u003d Optional.empty();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return maybeCommand.get();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/io/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public final class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public enum Code {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        EMPTY_DONE_DESCRIPTION(\"You must provide a task number for \u0027done\u0027 command!\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        EMPTY_DELETE_DESCRIPTION( \"You must provide a task number for \u0027delete\u0027 command!\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        INVALID_TASK_NUMBER(\"You entered an invalid task number!\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        EMPTY_DEADLINE_DESCRIPTION(\"The description of a deadline cannot be empty.\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        MISSING_DEADLINE_PARAMETER( \"The description of a deadline must contain \u0027 /by \u0027.\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        EMPTY_EVENT_DESCRIPTION(\"The description of an event cannot be empty.\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        MISSING_EVENT_PARAMETER(\"The description of an event must contain \u0027 /at \u0027.\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        EMPTY_TODO_DESCRIPTION(\"The description of a todo cannot be empty.\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        UNKNOWN_COMMAND(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        private String message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Code(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            this.message \u003d message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return \"☹ OOPS!!! \" + this.message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private Code code;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public InvalidInputException(Code code) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(code.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/io/OutputWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class OutputWriter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private static String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private static String tab \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void printHeader() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void printFooter() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void print(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyTaskDone(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyAddTask(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.printf(\"%sNow you have %d tasks in the list.\\n\", tab, numberOfTasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void notifyRemoveTask(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"  \" + task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.printf(\"%sNow you have %d tasks in the list.\\n\", tab, numberOfTasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void printTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(tab + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            System.out.printf(\"%s%d.%s\\n\", tab, number, task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            number +\u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String timeDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Deadline(String description, String timeDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.DEADLINE, description, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        DateTimeFormatter targetFormatter \u003d DateTimeFormatter"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                .ofLocalizedDateTime(FormatStyle.LONG, FormatStyle.SHORT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (timeDescription.matches(\"[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                this.timeDescription \u003d LocalDateTime.parse(timeDescription, formatter).format(targetFormatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Deadline(String description, String timeDescription, boolean done) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.DEADLINE, description, done);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                getDescription() + \" (by: \" + timeDescription + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + timeDescription;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String timeDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Event(String description, String timeDescription) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.EVENT, description, false);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Event(String description, String timeDescription, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.EVENT, description, done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                getDescription() + \" (at: \" + timeDescription + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + timeDescription;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    Task(TaskType type, String description, boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    static Task parseTask(String s) throws InvalidTaskException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String[] components \u003d s.split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (components.length \u003c 3) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported format of task representation in String, \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                    \"number of components: \" + components.length);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        boolean taskIsDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (components[1]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"0\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskIsDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            taskIsDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported task completion status: \" + components[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (components[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new ToDo(components[2], taskIsDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] deadlineInfo \u003d components[2].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (deadlineInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidTaskException(\"Invalid Deadline task format, doesn\u0027t contain time description\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new Deadline(deadlineInfo[0], deadlineInfo[1], taskIsDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            String[] eventInfo \u003d components[2].split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            if (eventInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "                throw new InvalidTaskException(\"Invalid Event task format, doesn\u0027t contain time description\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return new Event(eventInfo[0], eventInfo[1], taskIsDone);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            throw new InvalidTaskException(\"Unsupported task type: \" + components[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    abstract String getDataRepresentation();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getTaskIcon() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return type.getTaskIcon();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 76
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private TaskStorage taskStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public TaskManager(String filePath) throws Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage \u003d new TaskStorage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks \u003d taskStorage.loadTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void addTask(Task task) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public Task removeTask(int taskNumber) throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public void markAsDone(int taskNumber) throws Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        taskStorage.saveTasks(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "class TaskStorage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    TaskStorage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        File directory \u003d new File(String.valueOf(Path.of(filePath).getParent()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            directory.mkdirs();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        if (!file.isFile()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    List\u003cTask\u003e loadTasks() throws IOException, InvalidTaskException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            Task task \u003d Task.parseTask(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    void saveTasks(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(bufferedWriter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            printWriter.println(task.getDataRepresentation());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getTaskIcon() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        switch (this) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.TODO, description, false);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public ToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        super(TaskType.TODO, description, done);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return \"[\" + getTaskIcon() + \"][\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    String getDataRepresentation() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "        return getTaskIcon() + \" | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 21
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if ! javac -sourcepath ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stevenwjy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "stevenwjy": 34
    }
  }
]
