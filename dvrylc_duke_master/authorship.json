[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 21,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        final String welcome \u003d \"Hello! I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        final String farewell \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        print(welcome);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        prompt();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                process(input, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                print(String.format(\"☹ OOPS!!! %s\", e.getMessage()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                print(\"☹ OOPS!!! An unknown error occurred.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            prompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        print(farewell);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private static void process(String input, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"list\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                ArrayList\u003cTask\u003e items \u003d storage.getTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                output.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    output.append(String.format(\"%d.%s%n\", i + 1, items.get(i).toString()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                print(output.toString().trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    throw new DukeException(\"Missing task ID.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                int taskId;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    taskId \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        task \u003d storage.getTasks().get(taskId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        task \u003d storage.getTasks().remove(taskId);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    throw new DukeException(\"Invalid task ID.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    print(String.format(\"Nice! I\u0027ve marked this task as done:%n%s\", task.toString()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    print(String.format("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        \"Noted. I\u0027ve removed this task:%n%s%nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        task.toString(), storage.getTaskCount()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    throw new DukeException(\"The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                String description \u003d tokens[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    if (!description.contains(\" /by \")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        throw new DukeException(\"A deadline must have a date.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    String[] deadlineTokens \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    newTask \u003d new Deadline(deadlineTokens[0], deadlineTokens[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    if (!description.contains(\" /at \")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        throw new DukeException(\"An event must have a date.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    String[] eventTokens \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    newTask \u003d new Event(eventTokens[0], eventTokens[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                if (storage.addTask(newTask)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    print(String.format("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        \"Got it. I\u0027ve added this task:%n%s%nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                        newTask.toString(), storage.getTaskCount()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                    throw new DukeException(\"Task could not be saved.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private static void prompt() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private static void print(String message) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 137,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 13
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected int getTaskCount() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected boolean addTask(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return this.tasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\"; // return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    protected Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 10
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 2
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "Hello! I\u0027m Duke. What can I do for you?"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Daryl Chan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Daryl Chan": 34
    }
  }
]
