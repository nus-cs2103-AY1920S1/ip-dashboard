[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Command Enum Class. Contains the valid commands for Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    EVENT(\"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Reversed lookup table mapping strings to their valid Command. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final Map\u003cString, Command\u003e lookupTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Initializes the lookupTable when enum class is loaded. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        for (Command command : Command.values()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            lookupTable.put(command.cmd, command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** String representation of command. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param cmd String representation of command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    Command(String cmd) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the Command from the given string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param cmd Command in string form."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Command that has this string form. Null if cmd not found or if cmd \u003d\u003d null."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Command lookup(String cmd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return lookupTable.get(cmd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 54
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Deadline class. SubClass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Deadline date for the deadline. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param by deadline for the deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of deadlines."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of deadlines."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 26
    }
  },
  {
    "path": "src/main/java/DeadlineTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Deadline Task Exception. Thrown when invalid deadline command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DeadlineTaskException extends TaskException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of the error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Duke Class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** TaskList to store user input. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Line for responses. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String line \u003d String.format(\"%4s\", \"\") + String.format(\"%60s\", \"\").replace(\" \", \"_\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Indentation for response. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Main Method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param args Arguments."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            run(br);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"IOException:\\n\" + e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out greetings, then responds to the users input, then exits when user responds \"bye\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param br BufferedReader to read user commands."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void run(BufferedReader br) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String input \u003d br.readLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Command cmd \u003d Command.lookup(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        while (input !\u003d null \u0026\u0026 cmd !\u003d Command.BYE) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (cmd \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String[] tokens \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                cmd \u003d Command.lookup(tokens[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                if (cmd !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    switch (cmd) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            doTask(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            addTask(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            deleteTask(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            addTask(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                        addTask(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    addTask(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            input \u003d br.readLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            cmd \u003d Command.lookup(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds Task to the TaskList from the given text and prints response."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String text to be added."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void addTask(String description) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task task \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d task.message();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (ToDoTaskException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (DeadlineTaskException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (EventTaskException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(response);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does the task at the given 1-based index. Does the item and prints out the message."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index 1-based index of task to do."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void doTask(int index) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.doTask(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Nice! I\u0027ve marked this task as done:\\n\" + indent + \"  \" + taskList.getTask(index);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes the task from the tasklist at the given 1-based index."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index 1-based index of the task to delete."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void deleteTask(int index) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"Index out of range, no task found.\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d new StringBuilder()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"Noted. I\u0027ve removed this task:\\n\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"  \" + task + \"\\n\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .append(indent + \"Now you have \" + taskList.getTotalTasks() + \" tasks in the list.\")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the task list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void printList() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, taskList, line);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the greeting."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void greeting() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Hello! I\u0027m Duke\\n\" + indent + \"What can I do for you?\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Exit string response by printing the standard bye response."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 150,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Exception Class for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 29
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Event class. SubClass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Time of event. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param at Time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of the Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 26
    }
  },
  {
    "path": "src/main/java/EventTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Event Task Exception. Thrown when invalid event command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class EventTaskException extends TaskException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 28
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Task class. Holds the string of the task, and whether it is done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Total tasks created. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Whether task is done. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** String of the task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ++totalTasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return The total tasks created."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static int getTotalTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Changes isDone to true, setting the task to be done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string message of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String message() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%4s\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new StringBuilder()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \" Got it. I\u0027ve added this task:\\n\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \"   \" + this + \"\\n\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .append(indent + \" Now you have \" + totalTasks + \" tasks in the list.\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string symbol of whether the task is done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String symbol of whether the task is done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 65
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Task Exception. Thrown when command does not start with \"todo\" / \"deadline\" / \"event\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 29
    }
  },
  {
    "path": "src/main/java/TaskFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Factory Class for Tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskFactory {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Task object. Determines which subClass constructor to call."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description of the task to be created."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Task create(String description) throws TaskException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Command cmd \u003d Command.lookup(tokens[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (cmd \u003d\u003d null) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (Command.lookup(tokens[0])) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createToDo(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createDeadline(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createEvent(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a ToDo Task Object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createToDo(String description) throws ToDoTaskException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.trim().split(\"todo\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new ToDoTaskException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d tokens[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new ToDo(message.trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Deadline Task Object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createDeadline(String description) throws DeadlineTaskException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.trim().split(\"deadline\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DeadlineTaskException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d tokens[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] divide \u003d message.split(\"/by\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new Deadline(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates Event Task Object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createEvent(String description) throws EventTaskException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.trim().split(\"event\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new EventTaskException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d tokens[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] divide \u003d message.split(\"/at\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new Event(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates Task Object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createTask(String description) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new Task(description.trim());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 81
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * TaskList class. Instances represents lists of texts stored by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** ArrayList to store Tasks. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks in this list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Total number of tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds Task to list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does Task at the given 1-based index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of task to check (1-based)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task doTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes a task at given 1-based index to delete."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of the task to delete (1-based)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was deleted. Null if index is out of range."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.remove(index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets a Task from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index index of task to get (1-based)."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of list (indented)."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        StringBuilder strb \u003d new StringBuilder(indent + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); ++i) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            strb.append(indent).append(i + 1).append(\".\").append(list.get(i));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (i \u003c list.size() - 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                strb.append(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return strb.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 85
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * To Do Class. SubClass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * String representation of a todo task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of a todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 21
    }
  },
  {
    "path": "src/main/java/ToDoTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * ToDo Task Exception. Thrown when invalid ToDo command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDoTaskException extends TaskException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 28
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][✗] read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][✗] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][✓] borrow book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[T][✗] read book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     3.[E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     4.[T][✗] join sports club"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     5.[T][✓] borrow book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][✗] read book"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[T][✗] join sports club"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     3.[T][✓] borrow book"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     4.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     5.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcfyk": 109
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "blah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 21
    }
  }
]
