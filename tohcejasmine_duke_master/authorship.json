[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "tohcejasmine": 23
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Contains information on a user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Represents a command. A \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * corresponds to a main command word (e.g. \u003ccode\u003elist\u003c/code\u003e, \u003ccode\u003edeadline\u003c/code\u003e etc.)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * and details required for it to be execute (e.g. description of event, index of task to be"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * deleted from list, details of subcommands like \u003ccode\u003e/by\u003c/code\u003e)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String command; // list, done, bye, todo, deadline, event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected boolean isFinished; // Whether command terminates program or not"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Command(String commandWord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.command \u003d commandWord;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.isFinished \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * All commands return true except for \u003ccode\u003eexit\u003c/code\u003e which terminates program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return Whether program should still continue after command executed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean toContinueProgram() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return !isFinished;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Command: \" + command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Program continues after execution: \" + isFinished);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Not even the same class"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (!(o instanceof Command)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command c \u003d (Command) o;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return c.command \u003d\u003d command"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \u0026\u0026 c.isFinished \u003d\u003d isFinished;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Whether command has meta info (like /by, /at)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected boolean hasSubCommand;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public AddCommand(String commandWord, String description, boolean hasSubCommand) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.hasSubCommand \u003d hasSubCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Executes commands \u003ccode\u003etodo\u003c/code\u003e."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Adds ToDo task to list, saves new list to txt file, shows user message"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param taskList AL of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param ui Deals with console input and outputs"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param storage Deals with data in hard disk"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @throws DukeException If no description of ToDo task provided"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        storage.save(taskList.getTaskArr());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showAddTaskMessage(newTask, taskList.getTaskArr());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super.print();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Command description: \" + description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Has subcommand: \" + hasSubCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (o \u003d\u003d this) { return true; }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Not even the same class"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (!(o instanceof AddCommand)) { return false; }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        AddCommand c \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return c.description \u003d\u003d description \u0026\u0026"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                c.hasSubCommand \u003d\u003d hasSubCommand;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class SubCommand extends AddCommand {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String subCommand, subDescription;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public SubCommand(String commandWord, String description,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                      String subCommandWord, String subDescription) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(commandWord, description, true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.subCommand \u003d subCommandWord;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.subDescription \u003d subDescription;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task newTask \u003d this.command.equals(\"deadline\") ?"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                new Deadline(this.description, this.subDescription) :"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                new Event(this.description, this.subDescription);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        storage.save(taskList.getTaskArr());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showAddTaskMessage(newTask, taskList.getTaskArr());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super.print();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Subcommand: \" + subCommand);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Subcommand description: \" + subDescription);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (o \u003d\u003d this) { return true; }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Not even the same class"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (!(o instanceof SubCommand)) { return false; }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        SubCommand c \u003d (SubCommand) o;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return c.subCommand \u003d\u003d subCommand \u0026\u0026"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                c.subDescription \u003d\u003d subDescription;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public FindCommand(String findDescription) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"find\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.keyword \u003d findDescription;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasksArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        for (Task currTask : taskList.getTaskArr()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (currTask.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                matchingTasksArr.add(currTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (matchingTasksArr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ui.showMessage(\"No matching tasks!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ui.showMatchingKeywordTasks(matchingTasksArr);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"list\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (taskList.getNumTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ui.showMessage(\"You have no tasks yet!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ui.showAllTasks(taskList);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected int deleteIdx;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DeleteCommand(int deleteTaskIdx) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"delete\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.deleteIdx \u003d deleteTaskIdx;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task deletedTask \u003d taskList.deleteTask(deleteIdx);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        storage.save(taskList.getTaskArr());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showDeleteTaskMessage(deletedTask, taskList.getTaskArr());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super.print();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Index of task to delete: \" + deleteIdx);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (o \u003d\u003d this) { return true; }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Not even the same class"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (!(o instanceof DeleteCommand)) { return false; }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        DeleteCommand c \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return c.deleteIdx \u003d\u003d deleteIdx;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected int doneIdx;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DoneCommand(int doneTaskIdx) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"done\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.doneIdx \u003d doneTaskIdx;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task doneTask \u003d taskList.markTaskDone(doneIdx);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        storage.save(taskList.getTaskArr());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showMarkTaskDoneMessage(doneTask);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super.print();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Index of task to mark done: \" + doneIdx);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (o \u003d\u003d this) { return true; }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Not even the same class"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (!(o instanceof DoneCommand)) { return false; }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        DoneCommand c \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return c.doneIdx \u003d\u003d doneIdx;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"bye\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.isFinished \u003d true;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 236
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * A program named Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Something like a Personal Assistant Chatbot that helps"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * a person keep track of various things, except it can only"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * understand archaic text commands of a specific structure."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Initialise taskList with AL of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // If file does not exist, just create new taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ui.showMessage(\"File in given path does not exist yet. Creating new list of tasks...\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ui.showGreetings();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        boolean inProgram \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        while (inProgram) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String userFullInput \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Command c \u003d parser.parse(userFullInput, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                inProgram \u003d c.toContinueProgram();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public TaskList getTaskList() { return taskList; }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "tohcejasmine": 48
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"OOPS! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getMessage() { return this.message; }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//Empty description after command (todo, event, deadline, list, done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Thrown if Empty description after command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * (e.g. todo, event, deadline, list, done)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public EmptyDescriptionException (String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"The description of \" + command +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \" cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Thrown when user input (first word) is unrecognised/not in program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Thrown when incorrect usage of commands with subcommands"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * e.g. deadline with /by, event with /at"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * These commands require additional info of subcommands"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * These info can either be absent or more than one subcommand was entered"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class IncorrectInfoInputException extends DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public IncorrectInfoInputException(String subCommand) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"Please have one \\\"\" + subCommand + \"\\\" provided.\" );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Thrown when no such txt file (data) found in hard disk"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class DukeDataException extends DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public DukeDataException() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(\"Whoops! No data in hard disk yet.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "// Deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Parser() { }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Command parse(String userInput, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cString\u003e userInputArr \u003d splitStrIntoArr(userInput, \" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command currCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Identify command by first word"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        switch (userInputArr.get(0)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            currCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            currCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Empty description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (userInputArr.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splice back the description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(1, userInputArr.size()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                currCommand \u003d new AddCommand(\"todo\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        taskDescription, false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Empty description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (userInputArr.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new EmptyDescriptionException(\"find\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splice back the description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String findDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(1, userInputArr.size()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                currCommand \u003d new FindCommand(findDescription);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            currCommand \u003d parseSubCommand(\"deadline\", \"/by\", userInputArr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            currCommand \u003d parseSubCommand(\"event\", \"/at\", userInputArr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Empty/no list index of task provided"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (userInputArr.size() \u003d\u003d 1 || userInputArr.size() \u003e 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new DukeException(\"Please put the list index of the \" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        \"completed task after \\\"done\\\" and nothing else.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Check if integer is provided"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    int doneIdx \u003d Integer.parseInt(userInputArr.get(1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Check if integer is within range of number of tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    if (doneIdx \u003e taskList.getNumTasks() || doneIdx \u003c 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        throw new DukeException(\"Integer is not within range of tasks.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currCommand \u003d new DoneCommand(doneIdx);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    throw new DukeException(\"Please enter a valid integer after \\\"Done\\\".\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Empty/no list index of task provided"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (userInputArr.size() \u003d\u003d 1 || userInputArr.size() \u003e 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new DukeException(\"Please put the list index of the \" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        \"completed task after \\\"delete\\\" and nothing else.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Check if integer is provided"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    int deleteIdx \u003d Integer.parseInt(userInputArr.get(1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Check if integer is within range of number of tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    if (deleteIdx \u003e taskList.getNumTasks() || deleteIdx \u003c 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        throw new DukeException(\"Integer is not within range of tasks.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currCommand \u003d new DeleteCommand(deleteIdx);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    throw new DukeException(\"Please enter a valid integer after \\\"delete\\\".\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    return currCommand;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Handles user input of commands with subcommands"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private Command parseSubCommand(String command, String subCommand, ArrayList\u003cString\u003e userInputArr) throws DukeException{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Empty Description"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // E.g. (only \"deadline\" or \"deadline /by\") or (only \"event\" or \"deadline /at\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (userInputArr.size() \u003d\u003d 1 || userInputArr.get(1).equalsIgnoreCase(subCommand)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            throw new EmptyDescriptionException(command);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            int firstByIdx \u003d userInputArr.indexOf(subCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            int lastByIdx \u003d userInputArr.lastIndexOf(subCommand);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // No \"/by\" or multiple \"/by\"s provided"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            if (firstByIdx \u003d\u003d -1 || firstByIdx !\u003d lastByIdx) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new IncorrectInfoInputException(subCommand);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // No description of \"/by\" or \"/at\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else if (firstByIdx \u003d\u003d userInputArr.size()-1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new EmptyDescriptionException(subCommand);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splice words after first-word command and before \"/by\" or \"/at\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String taskDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(1, firstByIdx));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Description for \u0027/by\u0027, \u0027/at\u0027"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                String subCommandDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        userInputArr.subList(firstByIdx+1, userInputArr.size()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Command newCommand \u003d new SubCommand(command, taskDescription, subCommand, subCommandDescription);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                return newCommand;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Splits a string by given regex pattern to AL"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // E.g. \"A B C\" to [A, B, C] with pattern \" \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ArrayList\u003cString\u003e splitStrIntoArr(String input, String pattern) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003cString\u003e("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Split string by pattern"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Arrays.asList(input.split(pattern))"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        );"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 132
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Object responsible for loading and saving tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * from a text file saved in the hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Format of file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // T | 1 | read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // T | 1 | join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String fp; // Filepath"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private boolean isExists;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Storage (String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        fp \u003d filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        f \u003d new File(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        isExists \u003d f.exists();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Reads in data from text file, converts contents"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * to tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * If no such file, returns an empty AL"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return ArrayList of Task objects/List of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @throws DukeException If text file is not found at given filepath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Represents one line of file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            ArrayList\u003cString\u003e taskData;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            Task currTask \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            String taskType; // T (todo), D (deadline), E (event)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            boolean isTaskDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            Scanner input \u003d new Scanner(f);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Splits data from A | B | C to [A, B, C]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskData \u003d new ArrayList\u003cString\u003e("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        Arrays.asList(input.nextLine().split(\" \\\\| \"))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskType \u003d taskData.get(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                isTaskDone \u003d taskData.get(1).equals(\"1\"); // 1 is done, 0 is not done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new ToDo(taskData.get(2));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new Deadline(taskData.get(2), taskData.get(3));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask \u003d new Event(taskData.get(2), taskData.get(3));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                if (isTaskDone) { currTask.markDone(); }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                taskArr.add(currTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            throw new DukeDataException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return taskArr;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Saves given updated list of tasks to text file in hard disk"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Note: Overwrites file if currently exists"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fp);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        String separatorStr \u003d \" | \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        for (Task currTask : taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            fw.write("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    // Format: D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    currTask.getTaskType() + separatorStr +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            (currTask.isDone()? 1 : 0) + separatorStr +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            currTask.getDescription() +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                            (currTask.getTaskType().equals(\"T\") ?"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                                    \"\" : separatorStr + currTask.getSubDescription())"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            fw.write(\"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Getter method for class attribute"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return Whether file in given filepath exists"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean doesFileExist() { return isExists; }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 105
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Represents a task (something that needs to be done)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Parent class of different types of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected String subDescription; // For /by, /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Task(String description, String subDescription) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.subDescription \u003d subDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return (isDone? \"v\" : \"x\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getSubDescription() {return subDescription; }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //Display \"[status-icon] task-description\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Mainly for use in saving data to hard disk"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"?\"; }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Returns true if description or subdescription contains keyword"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // NOTE: case-sensitive!!!"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"T\"; }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // If deadline /by is of correct format"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        if (isValidDateTimeFormat(by)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                SimpleDateFormat displayFormat \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                Date date \u003d inputFormat.parse(by);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                // Output: 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                by \u003d displayFormat.format(date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                this.subDescription \u003d by;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                throw new DukeException(\"Unable to recognise date-time provided.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + subDescription + \")\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"D\"; }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return description.contains(keyword) || subDescription.contains(keyword);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Returns whether description for /by is of"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * recognised date-time format"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Format: 2/12/2019 1800"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Which can then be converted to format: 2 December 2019 6:00 pm"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return Whether description for /by can be converted"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */    private boolean isValidDateTimeFormat(String str) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/MM/yyy hhmm\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            /*str.matches(\"([1-9]|[1-2][0-9]|3[0-1])/\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"([1-9]|1[0-2])/\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"([0-9]{4})\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    \"\\\\s[0-2][0-9]([0-5]{2})\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "             */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            inputFormat.parse(str);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + subDescription + \")\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String getTaskType() { return \"E\"; }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return description.contains(keyword) || subDescription.contains(keyword);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 130
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Mainly contains the ArrayList of tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Supports operations to modify this AL"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr \u003d listOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /////////////////"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // OPERATIONS //"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ///////////////"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Adds new task to list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Number of tasks in list increases by one."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param newTask"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return Task that was added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Task addTask(Task newTask) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Marks task at given list index as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param doneIdx"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return Task that was marked done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Task markTaskDone(int doneIdx) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task doneTask \u003d taskArr.get(doneIdx-1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        doneTask.markDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Removes task at given list index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Number of tasks in list decreases by one."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param deleteIdx"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Task deleteTask(int deleteIdx) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Task deletedTask \u003d taskArr.get(deleteIdx-1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr.remove(deletedTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ////////////////////"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // HELPER METHODS //"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ///////////////////"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArr() { return taskArr; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public int getNumTasks() { return taskArr.size(); }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 67
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Deals with interaction with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Mainly printing to console appropriate messages and information (program status)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * of specified format and indentation, according to situation."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " * Also responsible for reading in user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ///////////////"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // MESSAGES //"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /////////////"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String INDENT_STR \u003d \"    \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String BORDER_STR \u003d \"-----\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //////////////////"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // USER INPUTS //"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ////////////////"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Returns text that user has entered in console"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @return User input as string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    //////////////////////"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // CONSOLE OUTPUTS //"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ////////////////////"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showGreetings() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        showMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Prints out information of tasks currently in list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Includes their order, done or not, description etc."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Presents each task in a new line."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cTask\u003e taskArr \u003d taskList.getTaskArr();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(INDENT_STR + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        showTasksInList(taskArr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showTasksInList(ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        for (Task task : taskArr) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            // Format: 1. [T/D/E][v/x] task-description (by/at: ...)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            System.out.println(INDENT_STR +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    (taskArr.indexOf(task)+1) + \".\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    task.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showAddTaskMessage(Task addedTask, ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        modifiedTaskListMessage(\"Noted. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                addedTask, taskArr);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showDeleteTaskMessage(Task deletedTask, ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        modifiedTaskListMessage(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                deletedTask, taskArr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showMatchingKeywordTasks(ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(INDENT_STR + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        showTasksInList(taskArr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showMarkTaskDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage(\"Nice! I\u0027ve marked this task as done:\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage(\"  \" + doneTask.toString()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private void modifiedTaskListMessage(String message, Task task, ArrayList\u003cTask\u003e taskArr) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage(message));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage(\"  \" + task.toString()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Show current number of tasks in list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \"Now you have \" + taskArr.size() +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        (taskArr.size() \u003d\u003d 1? \" task\":\" tasks\") +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                        \" in the list.\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /////////////////////"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // HELPER METHODS //"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    ///////////////////"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    private String indentMessage(String message) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        return INDENT_STR + message;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * Sandwiches text between -----s"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(indentMessage(message));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(BORDER_STR);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 125
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void parse_listCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        TaskList taskList \u003d new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").getTaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command expectedOutput \u003d new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command actualOutput \u003d new Parser().parse(\"list\", taskList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void parse_doneCommand_sucess() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        TaskList taskList \u003d new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").getTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command expectedOutput \u003d new DoneCommand(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command actualOutput \u003d new Parser().parse(\"done 1\", taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    /*@Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // Although attributes are the same, may have something to do with how"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // overriden equals() method is defined in Parser class"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void parse_todoInput_success() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command expectedOutput \u003d new SubCommand(\"deadline\", \"cs2103 iP\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \"/by\", \"28/8/2019 2359\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        TaskList taskList \u003d new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(expectedOutput,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                new Parser().parse(\"deadline cs2103 iP /by 28/8/2019 2359\", taskList));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        TaskList taskList \u003d new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").getTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command expectedOutput \u003d new AddCommand(\"todo\", \"finish cs2103 iP tasks\", false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command actualOutput \u003d new Parser().parse(\"todo finish cs2103 iP tasks\", taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // Debug"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"***Expected***\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        expectedOutput.print();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        System.out.println(\"***Actual***\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        actualOutput.print();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(expectedOutput, actualOutput);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void parse_missingBy_exceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        Command expectedOutput \u003d new SubCommand(\"deadline\", \"cs2103 iP\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                \"/by\", \"28/8/2019 2359\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        TaskList taskList \u003d new Duke(\"F:\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").getTaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            assertEquals(expectedOutput,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                    new Parser().parse(\"deadline cs2103 iP 28/8/2019 2359\", taskList));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "            assertEquals(\"Please have one \\\"/by\\\" provided.\", e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void splitStrIntoArr_stringInputPattern_success() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        expectedOutput.add(\"Kiwis\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        expectedOutput.add(\"are\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        expectedOutput.add(\"cute\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(expectedOutput,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "                new Parser().splitStrIntoArr(\"Kiwis are cute\", \" \"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 74
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void load() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void save() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void doesFileExist() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 22
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void addTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void markTaskDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void deleteTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // NOTE: Seems like its more productive to test other methods"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        // which are more complicated?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    void getNumTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr.add(new ToDo(\"finish cs2103 iP\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr.add(new ToDo(\"read AP3 for cs2103 tP\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        taskArr.add(new ToDo(\"eat chocolate\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "        assertEquals(3, new TaskList(taskArr).getNumTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 36
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    // NOTE: Seems like you can\u0027t really test methods which return void?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showGoodbye() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//        assertEquals(\"    Bye. Hope to see you again soon!\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//                new Ui().showGoodbye());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showAddTaskMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showDeleteTaskMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showMarkTaskDoneMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    void showMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 39
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][v] return book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 4 task in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][v] join sports club"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [T][x] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 5 task in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    1.[T][v] read book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    2.[D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    3.[E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    4.[T][v] join sports club"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    5.[T][x] borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "      [E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "-----"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 54
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohcejasmine"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tohcejasmine": 21
    }
  }
]
