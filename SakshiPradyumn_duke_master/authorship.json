[
  {
    "path": "src/main/java/ChatLike.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class ChatLike {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void getResponseDirect() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void readFromFile(String str) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String arr[] \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        int taskInfo \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskDescr \u003d arr[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"D\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \" /by \" + arr[3];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"E\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksType \u003d \"event\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \" /at \" + arr[3];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.add(tasksType + \" \" + taskDescr + tasksTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException exc) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(exc.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (taskInfo \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.done(taskList.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String genInfoForFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Convert details of Task object into a String which will be stored in the file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String currTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (task.getTimeLabel().equals(\"\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                currTask \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                currTask \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription() + \" | \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        + task.getTimeLabel();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d currTask + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d currTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return taskData;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private static String getTimeFormat(int n) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"st of\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"nd of\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"rd of\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th of\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void add(String s) throws DukeException{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String[] arrWords \u003d s.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arrWords[0]; //Type of Task: ToDo, Event, Deadline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksDescr \u003d \"\"; //Description of the task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\"; //Time the task is associated with (not for ToDo)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for(int i \u003d 1; i \u003c arrWords.length; i++){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if(arrWords[i].length() \u003e\u003d 1 \u0026\u0026 arrWords[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                for(int k \u003d i + 1; k \u003c arrWords.length; k++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    tasksTime +\u003d \" \" + arrWords[k]; //Stores time of the task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksDescr +\u003d \" \" + arrWords[i];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksDescr \u003d tasksDescr.trim(); //Remove extra spaces"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!(tasksType.equals(\"todo\") || tasksType.equals(\"deadline\") || tasksType.equals(\"event\"))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksDescr.equals(\"\")) throw new DukeException("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\u2639\" +\" OOPS!!! The description of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if ((tasksType.equals(\"deadline\") || tasksType.equals(\"event\")) \u0026\u0026 tasksTime.equals(\"\"))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\u2639\" + \" OOPS!!! The time of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\").parse(tasksTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            SimpleDateFormat fmtr \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d fmtr.format(date);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String arr[] \u003d tasksTime.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            arr[0] \u003d getTimeFormat(Integer.valueOf(arr[0]));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            arr[arr.length - 1] \u003d arr[arr.length - 1].toLowerCase();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for(int i \u003d 0; i \u003c arr.length; i++){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task; //To be added in the taskList"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Got it. I\u0027ve added this task:\\n       \" + task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void byeUser() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void greet() { //Default starting for Duke"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"     What can I do for you?\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void list() { //Shows the list of events"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskListed \u003d \"Here are the tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskListed +\u003d (i + 1) + \".\" + taskList.get(i) ;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d this.taskList.size() - 1)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskListed +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d taskListed;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void done(int n) throws DukeException{ //Marks a task to be completed by calling method of Task object"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if(n \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but you do not have so many tasks :-(\" +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList.get(n - 1).mark();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Nice! I\u0027ve marked this task as done:\\n       \" + this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void delete(int n) throws DukeException{ //Deletes a task by calling method of Task object"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if(n \u003e this.taskList.size()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but you do not have a task at that position to delete :-(\" +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task taskToBeDel \u003d this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList.remove(taskToBeDel); //Deletes the task from taskList"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Noted. I\u0027ve removed this task:\\n       \" + taskToBeDel +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\"; //Shows truncated list"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"    ____________________________________________________________\\n     \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + this.response"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 205
    }
  },
  {
    "path": "src/main/java/Check.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Check {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Scanner S \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String listOfAct[] \u003d new String[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            while(!(inp.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if(inp.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    for (int j \u003d 0; j \u003c i; j++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(\"     \" + (j + 1) + \". \" + listOfAct[j]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"     added: \" + inp + \"\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfAct[i++] \u003d inp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                inp \u003d S.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 41
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents a task of the type Deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String timeOfDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Deadline task denoted as \u0027D\u0027."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param time time of the task by which it needs to be completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Deadline(String s, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(s); //Call to Parent Class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.timeOfDeadline \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a String containing details of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[D]\" + this.getStatusIcon() + this.description + \" (by: \" + this.timeOfDeadline + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Acts as the main interface"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of Duke with a path of the task list file to run."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Instance of Storage loads data from the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Exception is reported if file not found."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param filePath Stores file of the path in which list of tasks are stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ui \u003d new Ui(); //Creating user interface object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates new instance of Parser and runs parse method of Parser for user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Default greeting message is printed using Ui object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Parser parser \u003d new Parser(storage, tasks, ui);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        parser.parse();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Duke with a path to task list file and runs."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        new Duke(\"../data/duke.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Works as the exception thrown in wrong inputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Generates an exception with custom message to be shown from the method it is being called."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param message Stores message to be printed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents a task of the type Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    //private String timeOfEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s stores the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param time stores the time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Event(String s, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(s, time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //this.timeOfEvent \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    //private String timeOfEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //this.timeOfEvent \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with details of the Event task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return a String with details of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[E]\" + this.getStatusIcon() + this.getDescription() + \" (at: \" + this.getTimeLabel() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 34
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Deals with extracting out from the commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new parser instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param storage Storage instance to be used."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList TaskList containing task list of the tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param ui Ui instance to be used for User interface."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Parser(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Reads user commands and responds."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Instructs Ui to print different messages and interact with user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void parse() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String comm \u003d sc.nextLine();//Reads user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (comm.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (comm.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                ui.list(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (comm.length() \u003e 4 \u0026\u0026 comm.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (comm.charAt(4) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        Task task \u003d taskList.add(comm);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.add(task, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        Task task \u003d taskList.done(Integer.valueOf(comm.substring(5)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.done(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            storage.writeOnFile(taskList.genInfo());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (comm.length() \u003e 6 \u0026\u0026 comm.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (comm.charAt(6) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        Task task \u003d taskList.add(comm);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.add(task, taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        Task task \u003d taskList.delete(Integer.valueOf(comm.substring(7)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.delete(task, taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            storage.writeOnFile(taskList.genInfo());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (comm.length() \u003e 5 \u0026\u0026 comm.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (comm.charAt(4) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        Task task \u003d taskList.add(comm);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.add(task, taskList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        ui.find(taskList, comm.substring(5));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            storage.writeOnFile(taskList.genInfo());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                                \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    Task task \u003d taskList.add(comm);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    ui.add(task, taskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    storage.writeOnFile(taskList.genInfo());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 125
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file after change."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String fPath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new Storage instance with a file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param fPath Stores the path of the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Storage(String fPath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.fPath \u003d fPath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new FileWriter object for the file path to write on."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param ftext Stores the text to be written on the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws IOException Exception produced if some failure."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void writeOnFile(String ftext) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        FileWriter fwrit \u003d new FileWriter(fPath); //Creates a FileWriter object for the given file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        fwrit.write(ftext);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        fwrit.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Loads file from the file path and translates the lines into \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws FileNotFoundException Exception produced by failure of finding file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException When empty file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        File file \u003d new File(fPath); // create a File for the given file path"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Scanner sc \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!sc.hasNext())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"Your task list is currently empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String arr[] \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int tasksInfo \u003d Integer.valueOf(arr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksDescr \u003d arr[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (tasksType.equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    task.mark();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (tasksType.equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime \u003d arr[3];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    task.mark();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else if (tasksType.equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime \u003d arr[3];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (tasksInfo \u003d\u003d 1)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    task.mark();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 83
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents the Task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String timeLabel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String wordLabel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates a new instance of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates the new instance of Task with timeLabel parameter as well."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param timeLabel Stores the time value for specific types of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task(String description, String timeLabel) { //Requires both type of parameterised constructors"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.timeLabel \u003d timeLabel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the label of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the letter of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return wordLabel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the time of the task, when applicable."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the time of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getTimeLabel() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (this.timeLabel !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return timeLabel;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the status if the task is done or not."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return 0, 1 status of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public int getInfo() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Updates the status of the task by marking if the task is done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!isDone)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    } //update status of task if completed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a string representing tick or X symbols for done/not done task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String of tick or X."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 88
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Contains the task list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of TaskList and initialises."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns size of the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return size of the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the element at ith position."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param i stores the position from where the task is to be extracted."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return the element at ith position."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task getElement(int position) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return this.taskList.get(position);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns the information of time with a particular time format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n Stores the information of time in a String forma."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return proper date format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private static String getTimeFormat(int n) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"st of\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"nd of\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"rd of\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return n + \"th of\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Converts command of users into Task objects with details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param s String used by user for creating a new task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return Task object with extracted input details"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException Exception thrown when input is in invalid format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task add(String s) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String arr[] \u003d s.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksType \u003d arr[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksDescr \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 1; i \u003c arr.length; i++) { //Gets task description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (arr[i].length() \u003e\u003d 1 \u0026\u0026 arr[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                for (int j \u003d i + 1; j \u003c arr.length; j++) { //get task time"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    tasksTime +\u003d \" \" + arr[j];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksDescr +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksDescr \u003d tasksDescr.trim(); //Remove extra spaces"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Handles exceptions"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (!(tasksType.equals(\"todo\") || tasksType.equals(\"deadline\") || tasksType.equals(\"event\"))) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksDescr.equals(\"\")) throw new DukeException("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\u2639\" + \" OOPS!!! The description of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if ((tasksType.equals(\"deadline\") || tasksType.equals(\"event\")) \u0026\u0026 tasksTime.equals(\"\"))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\u2639\" + \" OOPS!!! The time of a \" + tasksType + \" cannot be empty.\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                            \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\").parse(tasksTime);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d formatter.format(date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String array[] \u003d tasksTime.split(\" \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            array[0] \u003d getTimeFormat(Integer.valueOf(array[0]));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            array[array.length - 1] \u003d array[array.length - 1].toLowerCase();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for (int i \u003d 0; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                tasksTime +\u003d \" \" + array[i];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            tasksTime \u003d tasksTime.trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (tasksType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new ToDo(tasksDescr);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Deadline(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else if (tasksType.equals(\"event\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            task \u003d new Event(tasksDescr, tasksTime);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Marks the nth task in the task list as done by changing status."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n the position of task in the list of tasks."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return task marked as done."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task done(int n) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task \u003d this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        task.mark(); //Marks the corresponding task as done"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Deletes nth task from the list of tasks."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param n the position of task in the list of tasks."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return task deleted from the list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public Task delete(int n) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        Task task \u003d this.taskList.get(n - 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.taskList.remove(task); //Deletes task from list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * COnverts task into a required String to store in the data file."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String with details of the task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String genInfo() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Convert Task object into a String which will be stored in the data file"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String curr;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (task.getTimeLabel().equals(\"\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                curr \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                curr \u003d task.getLabel() + \" | \" + task.getInfo() + \" | \" + task.getDescription() + \" | \""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        + task.getTimeLabel();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d curr + System.lineSeparator();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                taskData +\u003d curr;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return taskData;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 199
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Represents of the task-type ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Creates an instance of ToDo with label \u0027T\u0027."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param description Stores the description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.wordLabel \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns a line with the details of the ToDo task in a String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @return String representation of the task ToDo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        return \"[T]\" + this.getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " * Majorly deals with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when called from other command methods."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    private void getResponseDirect() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n     \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + this.response"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when user adds a new task to the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task Stores the task added by user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList Adds the task to the list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void add(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Updates response"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Got it. I\u0027ve added this task:\\n       \" + task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response showing a list of tasks in the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void list(TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Gets the list of tasks in the arraylist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String listOfTasks \u003d \"Here are the tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            listOfTasks +\u003d (i + 1) + \".\" + taskList.getElement(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (i !\u003d taskList.getSize() - 1) listOfTasks +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d listOfTasks; //update response"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when user types \"bye\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Updates response"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Returns default greeting with every call."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        //Updates response"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                \"     What can I do for you?\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when the user marks a task as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task task done by user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void done(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Nice! I\u0027ve marked this task as done:\\n       \" + task; //Updates response"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Prints out the response when the user deletes a task from the list, called from different method."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param task task to be deleted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList the list of tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void delete(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        this.response \u003d \"Noted. I\u0027ve removed this task: \\n       \" + task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                + \"\\n     Now you have \" + taskList.getSize() + \" tasks in the list.\"; //Updates response"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * Finds a task in the list of tasks which contains a keyword."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param taskList a \u003ccode\u003eTaskList\u003c/code\u003e instance containing a list of tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @param keyword keyword input for search."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     * @throws DukeException Exceptions thrown if 0 keyword or more than 1 keywords are specified."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    public void find(TaskList taskList, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (keyword.split(\" \").length \u003e 1 || keyword.equals(\" \")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! Please include at most/ at least one keyword.\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Get the list of tasks in the tasks list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        String listOfMatchingTasks \u003d \"Here are the matching tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            String words[] \u003d taskList.getElement(i).getDescription().split(\" \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            boolean containsKeyword \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            for (int j \u003d 0; j \u003c words.length; j++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                if (keyword.equalsIgnoreCase(words[j])) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    containsKeyword \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (containsKeyword) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfMatchingTasks +\u003d (i + 1) + \".\" + taskList.getElement(i);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfMatchingTasks +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        // Updates response"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            int index \u003d listOfMatchingTasks.lastIndexOf(\"\\n     \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            if (index \u003e 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                listOfMatchingTasks \u003d listOfMatchingTasks.substring(0, index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.response \u003d listOfMatchingTasks;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            this.response \u003d \"\\u2639 \" + \"OOPS!!! There is no matching tasks in your list.\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        getResponseDirect();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 134
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void add_userTaskInput_success() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2718] check1\", new TaskList().add(\"todo check1\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[D][\\u2718] check2 (by: 25th of September 2019, 09:00 am)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList().add(\"deadline check2 /by 25/9/2019 0900\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2718] check3 (at: today)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList().add(\"event check3 /at today\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void add_userTaskInput_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"task check1 /by 25/9/2019 0900\").toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"event\").toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! The description of a event cannot be empty.\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        try {assertEquals(\"\", new TaskList().add(\"deadline check2\").toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n     \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\u2639\" + \" OOPS!!! The time of a deadline cannot be empty.\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                    \"\\n    ____________________________________________________________\\n\", e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void done_integerInput_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2713] check1 (at: today)\", new TaskList(List.of(new Event(\"check1\", \"today\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new Deadline(\"check2\", \"tomorrow\"), new ToDo(\"check3\"))).done(1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2713] check3\", new TaskList(List.of(new Event(\"check1\", \"today\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new Deadline(\"check2\", \"tomorrow\"), new ToDo(\"check3\"))).done(3).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void delete_integerInput_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Event(\"check1\", \"tomorrow\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Deadline(\"check2\", \"tomorrow\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new ToDo(\"check3\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[E][\\u2718] check1 (at: tomorrow)\", new TaskList(ls).delete(1).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"[T][\\u2718] check3\", new TaskList(ls).delete(2).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    void genInfo() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        List\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Event(\"testing\", \"tomorrow\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new Deadline(\"testing2\", \"tomorrow\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        ls.add(new ToDo(\"testing3\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        assertEquals(\"E | 0 | testing | tomorrow\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"D | 0 | testing2 | tomorrow\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                        \"T | 0 | testing3\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "                new TaskList(ls).genInfo());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 75
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetLabel() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"T\", new ToDo(\"check\").getLabel());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"D\", new Deadline(\"check\", \"today\").getLabel());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"E\", new Event(\"check\", \"today\").getLabel());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetTimeLabel() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"\", new ToDo(\"check\").getTimeLabel());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"today\", new Deadline(\"check\", \"today\").getTimeLabel());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"day after\", new Event(\"check\", \"day after\").getTimeLabel());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "         */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetInfo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(0, new Deadline(\"check\", \"today\").getInfo());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(1, newDead.getInfo());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new ToDo(\"check\").getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new Deadline(\"check\", \"day after\").getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"check\", new Event(\"check\", \"tomorrow\").getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingMark() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(0, newDead.getInfo());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(1, newDead.getInfo());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingGetStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            Deadline newDead \u003d new Deadline(\"check\", \"today\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            newDead.mark();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[\\u2718] \", new Deadline(\"check\", \"today\").getStatusIcon());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[\\u2713] \", newDead.getStatusIcon());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        void testingToString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[T][\\u2718] check\", new ToDo(\"check\").toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[D][\\u2718] check (by: today)\", new Deadline(\"check\", \"today\").toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "            assertEquals(\"[E][\\u2718] check (at: today)\", new Event(\"check\", \"today\").toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SakshiPradyumn"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "SakshiPradyumn": 59
    }
  }
]
