[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            //List tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                int numCommands \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                for (Task tasks : taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    numCommands +\u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(numCommands + \".\" + tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //Mark tasks as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Error if user inputs spaces"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        if (command.substring(5).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Task number cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(command.substring(5).split(\" \")[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Check if task number is valid"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(taskList.get(taskNumber - 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Task number is invalid.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //If user input for task number is empty"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Task number cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //If non-numeric input given for task number"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Task number is invalid.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    //Catch error so that program does not terminate"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //For Todo tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Check if description is empty (does not check when user input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //multiple spaces as the description."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        if (!command.substring(5).equals((\"\"))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            Todo newTodo \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            taskList.add(newTodo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(newTodo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //For deadline tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else if (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Check if description is empty (does not check when user input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //multiple spaces as the description."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        String[] commandLine \u003d command.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else if (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        String[] commandLine \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        Event newEvent \u003d new Event(commandLine[0], commandLine[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        taskList.add(newEvent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(newEvent);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //For delete"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //Similar method and check to \"done\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Error if user inputs spaces"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        if (command.substring(7).split(\" \")[0].equals(\"\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Task number cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(command.substring(7).split(\" \")[0]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //Check if task number is valid"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(taskList.get(taskNumber - 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! Task number is invalid.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //If user input for task number is empty"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (IndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Task number cannot be empty.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        //If non-numeric input given for task number"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Task number is invalid.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    //Catch error so that program does not terminate"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                //For other commands"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "choongyx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "choongyx"
        },
        "content": "            command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 144,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "choongyx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "choongyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "choongyx"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "choongyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "choongyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "choongyx": 11
    }
  }
]
