[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public AddCommand(String[] fullCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (fullCommand[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            task \u003d new Todo(fullCommand[1]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (fullCommand[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] detailsArray \u003d fullCommand[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            task \u003d new Deadline(detailsArray[0], detailsArray[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] detailsArray \u003d fullCommand[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            task \u003d new Event(detailsArray[0], detailsArray[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.addTask(task, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n     OOPS!!! \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + e.getMessage()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"\\n    ____________________________________________________________\\n\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 29
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static boolean isExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 13
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Enables Duke to understand date and times."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * How Duke understands date and times."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param year 4-digit integer."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param month Integer value of the month."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param day Integer value of the day of the month."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param time 4-digit integer number (time in 24 hour format)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DateTime(int year, int month, int day, int time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a DateTime object by splitting up the date and time given in a string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString Date and time given in the format DD/MM/YYYY HHMM."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return DateTime object created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static DateTime create(String dateTimeString) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d dateTimeString.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String dateString \u003d currArray[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String timeString \u003d currArray[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] dateArray \u003d dateString.split(\"/\", 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return new DateTime(Integer.parseInt(dateArray[2]), Integer.parseInt(dateArray[1]),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                Integer.parseInt(dateArray[0]), Integer.parseInt(timeString));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the date with suffix based on the number of the day."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Date with suffix -st, -nd, -rd and -th when appropriate."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"st\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"nd\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"rd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"th\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the month based on the number of the month."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Month name in string format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getMonth() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String monthString \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"January\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"February\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"March\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"April\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"May\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"June\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"July\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"August\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"September\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"October\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"November\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"December\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return monthString;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the 24-hour time into 12-hour time format."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return 12-hour time in string format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getTime() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        int minute;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String timeSuffix;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (time \u003c\u003d 59) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"am\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (time \u003c\u003d 1159) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d (time - minute) / 100;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"am\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (time \u003c\u003d 1259) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"pm\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d (time - minute) / 100 - 12;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"pm\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return hour + \":\" + String.format(\"%02d\", minute) + timeSuffix;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return getDate() + \" of \" + getMonth() + \" \" +  year + \", \" + getTime();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 139
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deadlines are tasks that need to be done before a specific date/time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected DateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String timeInFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Assigns description, date and time to the deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Activity that the user should complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString String input to create a DateTime object for the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Deadline(String description, String dateTimeString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.dateTime \u003d dateTime.create(dateTimeString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.timeInFile \u003d dateTimeString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the deadline to be stored in the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline details in the format D | 1 or 0 | description | time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"D | \" + super.getBinaryStatus() + \" | \" + super.description + \" | \" + timeInFile;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the deadline to be displayed to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline details in the format [D][v or x] description (at: date and time)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 40
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.deleteTask(taskNumber, ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n     OOPS!!! \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + e.getMessage() + \"\\n    ____________________________________________________________\\n\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 21
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.taskNumber \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.completeTask(taskNumber, ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n     OOPS!!! \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + e.getMessage() + \"\\n    ____________________________________________________________\\n\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Initialises a session for Duke and loads tasks, if any, from a previous session."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param filePath Location of the task list from the previous session."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Begins a session of Duke by initialising a Duke object with the filepath to load and store the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        new Duke(\"../../../data/duke.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 50,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DukeException extends InputMismatchException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Events are tasks that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected DateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String timeInFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Assigns description, date and time to the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Activity that the user should attend."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString String input to create a DateTime object for the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Event(String description, String dateTimeString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.dateTime \u003d dateTime.create(dateTimeString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.timeInFile \u003d dateTimeString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the event to be stored in the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event details in the format E | 1 or 0 | description | time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"E | \" + super.getBinaryStatus() + \" | \" + super.description + \" | \" + timeInFile;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the event to be displayed to the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event details in the format [E][v or x] description (at: date and time)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 40
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 12
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.findTasks(searchTerm, ui);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 13
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.printTasks(ui);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        switch (currArray[0]) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new DoneCommand(currArray[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new DeleteCommand(currArray[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new FindCommand(currArray[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new AddCommand(currArray);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"     OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + \"    \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 29
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Allows Duke to load and store tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param filePath Location of task list to load from and store to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Loads the task list from the previous session form the hard disk, if any."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return ArrayList of task that has been loaded from previous session."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws FileNotFoundException If there was no previous session."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String currTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            if (currTask.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                String[] currArray \u003d currTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                Todo currTodo \u003d new Todo(currArray[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                if (currArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    currTodo.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(currTodo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } else if (currTask.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                String[] currArray \u003d currTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                Deadline currDeadline \u003d new Deadline(currArray[2], currArray[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                if (currArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    currDeadline.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(currDeadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                String[] currArray \u003d currTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                Event currEvent \u003d new Event(currArray[2], currArray[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                if (currArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    currEvent.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(currEvent);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return loadedTaskList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Stores the task list in the hard disk."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws IOException If hard disk cannot be found in the given file path."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void store(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        fw.write(getSavedListString(tasks));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the task list to be stored."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return All tasks in the list in a simplified format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static String getSavedListString(TaskList tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size() ; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            allTasks +\u003d tasks.getTasks().get(i).toSave() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Tasks include events, deadlines and todo actions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Tasks have a description and are initialised as undone."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description An activity that the user should attend/complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the task to be stored in the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Formatted task with its details."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Gets the status of the task as done or undone."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return 1 or 0 if done or undone respectively."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String getBinaryStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Gets the status of the task as done or undone."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return v or x if done or undone respectively."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return (isDone ? \"v\" : \"x\"); //return tick or X symbols"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Empty task list is created if there is no previous session of Duke, or no tasks in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * New task list is filled with tasks from previous session of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param savedTasks Task list from the previous session of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e savedTasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.addAll(savedTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints out the task list for the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void printTasks(Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            ui.show((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void completeTask(int taskNumber, Ui ui) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(tasks.get(taskNumber - 1).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void deleteTask(int taskNumber, Ui ui) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(tasks.get(taskNumber).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(getListSize());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void findTasks(String searchTerm, Ui ui) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            if (task.description.contains(searchTerm)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (int i \u003d 0; i \u003c searchResults.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            ui.show((i + 1) + \".\" + searchResults.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints out a message informing user of the current list size."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String getListSize() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void addTask(Task task, Ui ui) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(task.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(getListSize());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ui.show(Ui.DIVIDER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 95
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Todos are tasks without any date/time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Todos can be initialised from the parent class Task constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Activity that the user should complete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the todo to be stored in the hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo details in the format T | 1 or 0 | description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"T | \" + super.getBinaryStatus() + \" | \" + super.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the todo to be displayed to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo details in the format [T][v or x] description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static final String TAB \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Assigns a scanner for the Ui to get user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints a welcome message to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(DIVIDER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(\"What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(DIVIDER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints a goodbye message to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(DIVIDER);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        show(DIVIDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void show(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        System.out.println(TAB + message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves error message if file cannot be loaded."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param e When file duke.txt cannot be found."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void showLoadingError(FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Reads user input from the scanner."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return User input trimmed for leading and trailing whitespace."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 58
    }
  },
  {
    "path": "src/test/java/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void TestDateTime_validInput_success() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"31st of April 2019, 4:32pm\", (DateTime.create(\"31/4/2019 1632\")).toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"22nd of September 2030, 12:00am\", (DateTime.create(\"22/9/2030 0000\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"3rd of March 1930, 8:20am\", (DateTime.create(\"3/3/1930 0820\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"16th of February 1966, 7:12pm\", (DateTime.create(\"16/2/1966 1912\")).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 14
    }
  },
  {
    "path": "src/test/java/SaveTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class SaveTaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void saveTask_validTask_success() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"E | 0 | have project meeting | 12/3/2020 1430\", (new Event(\"have project meeting\", \"12/3/2020 1430\")).toSave());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"T | 0 | do homework\", (new Todo(\"do homework\")).toSave());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"D | 0 | complete level 6 | 20/8/2019 2359\", (new Deadline(\"complete level 6\", \"20/8/2019 2359\")).toSave());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hellodommy": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 34
    }
  }
]
