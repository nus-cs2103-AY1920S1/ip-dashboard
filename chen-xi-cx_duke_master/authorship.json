[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private ArrayList\u003cTask\u003e myList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        myList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        boolean canEnd;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        canEnd \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        while (!canEnd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            String input, response \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            input \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (isDone(input)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    canEnd \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    for (int i \u003d 0; i \u003c myList.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                        int number \u003d i + 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                        System.out.println(number + \".[\" + myList.get(i).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                                + myList.get(i).getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    myList.add(new Task(input));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "     * Returns true if input of the form \"done \u003cint\u003e\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private boolean isDone(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        String[] keywords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        if (keywords[0].equals(\"done\") \u0026\u0026 keywords.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Scanner s \u003d new Scanner(keywords[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (s.hasNextInt()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                int index \u003d s.nextInt() - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                if (index \u003e\u003d0 \u0026\u0026 index \u003c myList.size()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    myList.get(index).setStatus(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"[\" + myList.get(index).getStatusIcon()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                            + \"] \" + myList.get(index).getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(\"Please enter a valid number\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1,
      "-": 4,
      "chen-xi-cx": 68
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void setStatus(boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 21
    }
  }
]
