[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 27,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param by          Deadline of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the task\u0027s text representation in display format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Text representation of the task in display format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), Duke.DATE_FORMATTER.format(this.by));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 28
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new dialog box."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new user dialog box."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return User dialog box."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Duke dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param l  Text label."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param iv Image of the sender."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Duke dialog box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 66
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    // Configuration"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static final SimpleDateFormat DATE_FORMATTER \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Duke instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param filePath Relative path of the save file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            this.loadData(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Duke instance, no-argument version."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this(\"data/duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Starts Duke\u0027s execution, used for command-line execution."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        System.out.println(this.ui.showWelcome());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String input \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        while (input !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String output \u003d process(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            input \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        System.out.println(this.ui.showGoodbye());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Obtains output from Duke given an input string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Input string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Duke output"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String process(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            String command \u003d Parser.extractCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"bye\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                output.append(this.ui.showGoodbye());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"list\": {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                output.append(this.ui.showTasks(this.tasks.toString()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                // fallthrough"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                int taskId \u003d Integer.parseInt(Parser.extractId(input));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    Task deletedTask \u003d this.tasks.deleteTask(taskId);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    output.append(this.ui.showTaskDeletion(deletedTask));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    Task doneTask \u003d this.tasks.markDone(taskId);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    output.append(this.ui.showTaskDone(doneTask));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"find\": {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                String query \u003d Parser.extractQuery(input);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                output.append(this.ui.showQuery(this.tasks.query(query)));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"savefile\": {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                String filePath \u003d Parser.extractQuery(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    this.loadData(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    output.append(this.ui.showSaveFileChange(filePath));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    output.append(this.ui.showNewSaveFile(filePath));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                // fallthrough"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                // fallthrough"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                Task newTask \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                this.tasks.addTask(newTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                output.append(this.ui.showTaskAdded(newTask));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                output.append(this.ui.showException(new DukeException(\"Sorry I do not understand. Please try again.\")));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            this.storage.persist(this.tasks);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            output.append(this.ui.showException(e));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Attempts to load data from a save file. If the save file is not found, a new task list is created."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param filePath Save file location."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If loading data from the save file fails due to I/O or data errors."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void loadData(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            this.tasks \u003d storage.load();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Instantiates and runs the a new Duke instance."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param args Command-line arguments."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 159,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Duke exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param message Description of the error."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 12
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param at          Date/time of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Event(String description, Date at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the task\u0027s text representation in display format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Textual Text of the task in display format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[E]%s (by: %s)\", super.toString(), Duke.DATE_FORMATTER.format(this.at));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 28
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Label dukeText \u003d new Label(duke.process(userInput.getText()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Extracts the command from an input string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static String extractCommand(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Extracts the item\u0027s id from an input string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return id."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static String extractId(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Extracts the query from an input string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Query."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static String extractQuery(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return Parser.extractId(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Parses an input string into a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If date is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static Task parseTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assert tokens.length \u003e\u003d 2;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String data \u003d tokens[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            task \u003d new Todo(data);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            tokens \u003d data.split(\" /by \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            tokens \u003d data.split(\" /at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String description \u003d tokens[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String dateStr \u003d tokens[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Date date \u003d Parser.parseDate(dateStr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Parses a date string into a Date object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param dateStr Date string."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Date object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If date string is invalid."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    static Date parseDate(String dateStr) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return Duke.DATE_FORMATTER.parse(dateStr);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to parse date.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 90
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new Storage instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param filePath Relative path of the save file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.filePath \u003d String.format(\"%s/%s\", System.getProperty(\"user.dir\"), filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Loads tasks from a save file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return TaskList with all saved tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If file I/O fails or if save file data is invalid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FileInputStream fin \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fin);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to read from save file.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Writes tasks to save file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param tasks TaskList with current tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If file I/O fails."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void persist(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            FileOutputStream fout \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fout.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to write to save file.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 55
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Getter for isDone."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return isDone."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    boolean getIsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Getter for description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Returns a cross or tick icon based on whether the task is done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Cross or tick icon."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\"; // return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the task\u0027s text representation in display format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Text representation of the task in display format"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 61
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class TaskList implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Delete a task from the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param taskId Task ID."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Task that was deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If ID is not found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Task deleteTask(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return this.tasks.remove(taskId - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to find task.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param taskId Task ID."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Task that was marked done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @throws DukeException If ID is not found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Task markDone(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Task task \u003d this.tasks.get(taskId - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            throw new DukeException(\"Failed to find task.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Add a task to the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Flag whether task was successfully added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    boolean addTask(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return this.tasks.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates a numbered list of tasks matching a query."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param query Query string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Numbered list of matching tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String query(String query) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        TaskList match \u003d new TaskList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            if (t.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                match.addTask(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return match.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates numbered list of all tasks in the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Numbered list of all tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            output.append(String.format(\"%d.%s%n\", i + 1, tasks.get(i).toString()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return output.toString().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 89
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Creates a new todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * Generates the task\u0027s text representation in display format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     * @return Text representation of the task in display format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String getInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Hello! I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showGoodbye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showTasks(String tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Here are your tasks:%n%s\", tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showQuery(String tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Here are the matching tasks in your list:%n%s\", tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showSaveFileChange(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Done! I have loaded tasks from the save file located at:%n%s\", filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showNewSaveFile(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"No existing save file found at %s.%nI have created a new one!\", filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showTaskDeletion(Task deletedTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Done! I have deleted the following task:%n%s\", deletedTask.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showTaskDone(Task doneTask) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Done! I have marked the following task as done:%n%s\", doneTask.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showTaskAdded(Task newTask) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Done! I have added the following task:%n%s\", newTask.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    String showException(DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        return String.format(\"Error:%n%s\", e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 24
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void extractCommand_validInput_pass() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String input \u003d \"todo buy eggs\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(\"todo\", Parser.extractCommand(input));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void parseDate_validInput_pass() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String dateStr \u003d \"24/12/2018 1530\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Date date \u003d Parser.parseDate(dateStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(Duke.DATE_FORMATTER.format(date), dateStr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 23
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void constructor_validInput_pass() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        String description \u003d \"Sample todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Todo notDone \u003d new Todo(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertFalse(notDone.getIsDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    void markAsDone_validInput_pass() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        Todo testTodo \u003d new Todo(\"Sample todo\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        testTodo.markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertTrue(testTodo.getIsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Hello! I\u0027m Duke. What can I do for you?"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Here are the tasks in your list:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "java -classpath ../src/main/java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 34
    }
  }
]
