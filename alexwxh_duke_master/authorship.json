[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    File saveList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    FileWriter editor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        this.todoList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void initialize(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        saveList\u003dnew File(\"src/main/data/list.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        boolean isNew;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            isNew \u003d saveList.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if(!isNew){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Scanner sc \u003d new Scanner(saveList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.transferSavedFile(sc);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                editor \u003d new FileWriter(saveList, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                print(\"Save file loaded\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            print(\"Directory search error. No save file loaded. Initialized with blank list. No commands will be saved to hard disk\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void transferSavedFile(Scanner sc){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        while(sc.hasNext()){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String saveEntry \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String instruction[] \u003d saveEntry.split(\" \\\\| \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if(instruction[0].equals(\"T\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Todo task \u003d new Todo(instruction[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                todoList.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }else if(instruction[0].equals(\"E\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Event task \u003d new Event(instruction[2], instruction[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                todoList.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }else if(instruction[0].equals(\"D\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Deadline task \u003d new Deadline(instruction[2], instruction[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                todoList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if(instruction[1].equals(\"1\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                todoList.get(index).silentSetDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private static void print(String message) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        System.out.println(\"\u003e\u003e\" + message);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        StringBuilder outputMessageMessage \u003d new StringBuilder(\"List:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        int i \u003d todoList.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        for (int x \u003d 1; x \u003c\u003d i; x++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            outputMessageMessage.append(\"\\n  \" + x + \".\" + todoList.get(x - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        String outputMessage \u003d outputMessageMessage.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        print(outputMessage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void run(String userInput) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        int spacePosition \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        if (spacePosition \u003d\u003d -1) {  //raise exception: only 1 word given"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.raiseSingleWordInput(userInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String command \u003d userInput.substring(0, spacePosition);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String taskContent \u003d userInput.substring(spacePosition + 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.done(taskContent);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.delete(taskContent);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.addTodo(taskContent);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.addEvent(taskContent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.addDeadline(taskContent);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(\"Error: input not recognized\");  //"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void done(String doneIndex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            int doneInt \u003d Integer.parseInt(doneIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.todoList.get(doneInt - 1).setDone();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.fileSetDone(doneInt - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: bad task index\"); // for wrong index provided"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: no such task index\");  //for index\u003earray length"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void fileSetDone(int doneIndex){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        StringBuilder finalInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(saveList.toPath(), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            StringBuilder editString \u003d new StringBuilder(fileContent.get(doneIndex));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            editString.setCharAt(4, \u00271\u0027);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            fileContent.set(doneIndex, editString.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            for(String s: fileContent){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                finalInput.append(s + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            FileWriter overwriteEditor \u003d new FileWriter(saveList, false);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            overwriteEditor.write(finalInput.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            overwriteEditor.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            print(\"File write error\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void delete(String deleteIndex) {  //exception same as done method"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            int deleteInt \u003d Integer.parseInt(deleteIndex);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            StringBuilder outputMessageMessage \u003d new StringBuilder(\"Following task removed:\\n    \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                    + this.todoList.get(deleteInt - 1));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            outputMessageMessage.append(\"\\n  \" + (this.todoList.size() - 1) + \" tasks left in the list\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.todoList.remove(deleteInt - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(outputMessageMessage.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.fileDelete(deleteInt - 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: bad task index\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: no such task index\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void fileDelete(int deleteIndex){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        StringBuilder finalInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(saveList.toPath(), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            fileContent.remove(deleteIndex);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            for(String s: fileContent){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                finalInput.append(s + \"\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            FileWriter overwriteEditor \u003d new FileWriter(saveList, false);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            overwriteEditor.write(finalInput.toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            overwriteEditor.close();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            print(\"File write error\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void addTodo(String task) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        task \u003d task.trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        Todo td \u003d new Todo(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        this.todoList.add(td);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        StringBuilder outputMessage \u003d new StringBuilder(\"Task added:\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        outputMessage.append(\"    \" + td);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        outputMessage.append(\"\\n  There are \" + this.todoList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            editor.write(\"T | 0 | \" + task + \"\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            editor.flush();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"File write error\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        Duke.print(outputMessage.toString());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void addEvent(String task) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        int split \u003d task.indexOf(\" /at\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        if (split \u003d\u003d -1) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: event time not given. Specify event time using \\\"/at\\\"\"); //throw exception?"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                String description \u003d task.substring(0, split);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                String deadline \u003d task.substring(split + 5);  //exception may occur"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                description \u003d description.trim();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                deadline \u003d deadline.trim();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Event e \u003d new Event(description, deadline);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.todoList.add(e);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                StringBuilder outputMessage \u003d new StringBuilder(\"Task added:\\n\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                outputMessage.append(\"    \" + e);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                outputMessage.append(\"\\n  There are \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                editor.write(\"E | 0 | \" + description + \" | \" + deadline + \"\\n\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                editor.flush();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(outputMessage.toString());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } catch (IndexOutOfBoundsException e) { // happens when input is \"event xx /at\" with no time given"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(\"Error: no event time provided\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(\"File write error\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void addDeadline(String task) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        int split \u003d task.indexOf(\" /by\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        if (split \u003d\u003d -1) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(\"Error: deadline not given. Specify deadline using \\\"/by\\\"\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                String description \u003d task.substring(0, split);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                String deadline \u003d task.substring(split + 5);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                description \u003d description.trim();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                deadline \u003d deadline.trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Deadline d \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.todoList.add(d);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                StringBuilder outputMessage \u003d new StringBuilder(\"Task added:\\n\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                outputMessage.append(\"    \" + d);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                outputMessage.append(\"\\n  There are \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                editor.write(\"D | 0 | \" + description + \" | \" + deadline + \"\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                editor.flush();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(outputMessage.toString());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } catch (IndexOutOfBoundsException e) { //same as event time"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(\"Error: no deadline provided\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                Duke.print(\"File write error\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    private void raiseSingleWordInput(String badInput) throws DukeException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        if (badInput.equals(\"todo\") || badInput.equals(\"event\") || badInput.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            throw new DukeException(\"Error: no description for task.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } else if (badInput.equals(\"done\")) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            throw new DukeException(\"Error: done task index missing\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            throw new DukeException(\"Error: no such command\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public class Task {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public Task(String description) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public void setDone() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String message \u003d \"The following task has been marked as done:\\n    \" + this;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            Duke.print(message);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public void silentSetDone(){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[\" + \"\\u2713\" + \"]\" + this.description;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[\" + \"\\u2718\" + \"]\" + this.description;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public class Todo extends Task {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public Todo(String description) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            super(description);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[T]\" + \"[\" + \"\\u2713\" + \"]\" + this.description;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[T]\" + \"[\" + \"\\u2718\" + \"]\" + this.description;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public class Event extends Task {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        private LocalDateTime startDateTime;   // DD/MM/YYYY"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        private LocalDateTime endDateTime;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public Event(String description, String timePeriod) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            super(description);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.setDateTime(timePeriod);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        private void setDateTime(String timePeriod){"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String datetimeInput[] \u003d timePeriod.split(\" \");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String dateInput[] \u003d datetimeInput[0].split(\"/\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String timeInput[] \u003d datetimeInput[1].split(\"-\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            int year, month, day, startHour, startMinute, endHour, endMinute;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            year \u003d Integer.parseInt(dateInput[2]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            month \u003d Integer.parseInt(dateInput[1]);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            day \u003d Integer.parseInt(dateInput[0]);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            startHour \u003d Integer.parseInt(timeInput[0])/100;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            startMinute \u003d Integer.parseInt(timeInput[0])%100;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            endHour \u003d Integer.parseInt(timeInput[1])/100;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            endMinute \u003d Integer.parseInt(timeInput[1])%100;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.startDateTime \u003d LocalDateTime.of(year, month, day, startHour, startMinute);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.endDateTime \u003d LocalDateTime.of(year, month, day, endHour, endMinute);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[E]\" + \"[\" + \"\\u2713\" + \"]\" + this.description + \" (at: \" + this.startDateTime.toLocalDate()"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                        + \" \" + this.startDateTime.toLocalTime() + \"-\" + this.endDateTime.toLocalTime() + \")\";"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[E]\" + \"[\" + \"\\u2718\" + \"]\" + this.description + \" (at: \" + this.startDateTime.toLocalDate()"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                        + \" \" + this.startDateTime.toLocalTime() + \"-\" + this.endDateTime.toLocalTime() + \")\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    public class Deadline extends Task {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        private LocalDateTime deadline; //   DD/MM/YYYY"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        protected Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            super(description);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                this.setDateTime(deadline);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                print(\"Bad time input\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        private void setDateTime(String deadline){"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String datetimeInput[] \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String dateInput[] \u003d datetimeInput[0].split(\"/\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String timeInput \u003d datetimeInput[1];"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            int year, month, day, hour, minute;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            year \u003d Integer.parseInt(dateInput[2]);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            month \u003d Integer.parseInt(dateInput[1]);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            day \u003d Integer.parseInt(dateInput[0]);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            hour \u003d Integer.parseInt(timeInput)/100;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            minute \u003d Integer.parseInt(timeInput)%100;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            this.deadline \u003d LocalDateTime.of(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[D]\" + \"[\" + \"\\u2713\" + \"]\" + this.description + \" (by: \" + this.deadline.toLocalDate() + \" \""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                        + this.deadline.toLocalTime() + \")\";"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                return \"[D]\" + \"[\" + \"\\u2718\" + \"]\" + this.description + \" (by: \" + this.deadline.toLocalDate() + \" \""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                        + this.deadline.toLocalTime() + \")\";"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "alexwxh"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___| OwO\\n\";"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        Duke process \u003d new Duke();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        process.initialize();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                process.list();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "                process.run(input);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        String exitMessage \u003d \"Goodbye. Hope to see you again. UwU\";"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "alexwxh"
        },
        "content": "        print(exitMessage);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alexwxh": 378,
      "-": 9
    }
  }
]
