[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    version \u003d \"12.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 28,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Create todos, events and deadlines"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Use the text bar in Duke to run commands - for reference, see the in-app help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "list by typing \u0027help\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "### `todo/deadline/event` - Create a task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type \u0027todo \u003cname\u003e\u0027 to create a simple todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type \u0027deadline \u003ctask\u003e /by \u003cdd/mm/yyyy hhmm\u003e\u0027 to create a deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type \u0027event \u003ctask\u003e /at \u003cdd/mm/yyyy hhmm\u003e\u0027 to create an event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "`deadline essay for prof tan /by 31/03/2020 1700`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "`Got it. I\u0027ve created this task :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " [d][x] essay for prof tan (by 31/03/2020 1700)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Import tasks from an external file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type `import` or `overwrite` to add tasks from an external file to your current task list, or write over your current task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "### `import/overwrite` - Import tasks from an external file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type `import` to open a file chooser. The tasks from this external file will be added on to your existing tasks. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type `overwrite` to open a file chooser. The tasks from this file will overwrite your task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "`import`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "A file chooser will open up."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Flexible delete commands"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Type `rmdone` or `deleteAll` or `delete \u003crange\u003e` to remove all tasks marked as done, remove "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "all tasks, or delete a specific range of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "### `rmdone/deleteAll/delete \u003crange\u003e` - Import tasks from an external file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "`delete 1-4,6-9,12\"`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "`Got it. I\u0027ve deleted these tasks:`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Duke will delete items 1 through 4, 6 through 9, and 12, and display these tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 44,
      "-": 24
    }
  },
  {
    "path": "src/main/java/ColumnItem.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.ItemInfo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.TrackingService;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ColumnItem extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Label amnt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Button delete;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Button edit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private boolean isCredit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TrackingService service \u003d TrackingService.getTrackingService();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ColumnItem(String title, String amnt, boolean isCredit, int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/Item.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            this.isCredit \u003d isCredit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            this.index \u003d index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        name.setText(title);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.amnt.setText(amnt);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        delete.setOnAction(e -\u003e service.updateDeletionSubject(new ItemInfo(isCredit,index)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        edit.setOnAction(e -\u003e service.updateEditSubject(new ItemInfo(isCredit, index)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private HBox circleBox;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setFont(Font.font(\"Futura\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (img !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            circleBox.setSpacing(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            displayPicture.setRadius(10);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            circleBox.setPadding(new Insets(0,7,0,0));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            this.setPadding(new Insets(0,0,0,0));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            displayPicture.setFill(Paint.valueOf(\"#fbfbfb\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            dialog.setPadding(new Insets(0,0,5,50));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    static DialogBox getDukeDialogNoPic(String text) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return getDukeDialog(text, null);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 84
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String initializationErrorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Constructs a Duke instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param filepath refers to where items should be kept in memory."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Duke(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            initializationErrorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String[] deleteCompletedTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return taskList.removeCompletedTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String[] deleteAll() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return taskList.deleteAll();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String[] run(String fullCommand) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return c.execute(storage, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new String[]{e.getMessage()};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String[] getWelcomeMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (initializationErrorMessage \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new String[]{\"Hello! I\u0027m Duke. How can I help you?\"};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return new String[]{\"Hello! I\u0027m Duke. How can I help you?\", initializationErrorMessage};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void loadTasksWithNoOverwrite(String filepath) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage tempStorage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskList.getArr().addAll(tempStorage.load());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(this.taskList.getArr());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void loadTasksWithOverwrite(String filepath) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage tempStorage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskList \u003d new TaskList(tempStorage.load());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(this.taskList.getArr());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 65,
      "-": 3
    }
  },
  {
    "path": "src/main/java/ExpensesMain.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.Expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ExpensesMain extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Expenses expenses \u003d new Expenses();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Expenses.class.getResource(\"/view/Expenses.fxml\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            BorderPane bp \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Scene scene \u003d new Scene(bp);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.\u003cExpensesWindow\u003egetController().setExpensesObject(expenses);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.\u003cExpensesWindow\u003egetController().setError(expenses.initialisationErrorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.\u003cExpensesWindow\u003egetController().setListeners();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.\u003cExpensesWindow\u003egetController().render();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 29
    }
  },
  {
    "path": "src/main/java/ExpensesWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.Expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.Item;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.ItemInfo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import expenses.TrackingService;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import rxjava.Subscription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ExpensesWindow extends BorderPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Label error;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Label amount;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TextField title;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TextField amt;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Button credit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Button debit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private VBox creditColumn;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private VBox debitColumn;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private HBox fields;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Expenses expenses;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Button saveButton \u003d new Button();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TrackingService service \u003d TrackingService.getTrackingService();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Subscription\u003cItemInfo\u003e deletionSubscription \u003d TrackingService"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            .getDeleteItemSubject().subscribe(this::delete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Subscription\u003cItemInfo\u003e editSubscription \u003d TrackingService.getEditItemSubject().subscribe(this::edit);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void setError(String message) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        error.setText(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void delete(ItemInfo item) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (item.isCredit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                expenses.remove(item.index, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                expenses.remove(item.index, false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            save();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            render();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            setError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void edit(ItemInfo item) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cItem\u003e ledger \u003d item.isCredit ? expenses.credit : expenses.debit;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        title.setText(ledger.get(item.index).title);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        amt.setText(Double.toString(ledger.get(item.index).amount));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        saveButton.setText(\"Save\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        fields.getChildren().remove(saveButton);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        fields.getChildren().add(saveButton);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        saveButton.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //error handling"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String text \u003d title.getText();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            double amount;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (text.isBlank() || amt.getText().isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                setError(\"Both fields must be non-empty!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                amount \u003d Double.parseDouble(amt.getText());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (amount \u003c\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    setError(\"Amount should be positive.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                setError(\"Amount must be a real number!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (item.isCredit) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                assert expenses.credit.size() \u003e\u003d item.index;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                updateLedger(item, true, text, amount);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                assert expenses.debit.size() \u003e\u003d item.index;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                updateLedger(item, false, text, amount);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void updateLedger(ItemInfo item, boolean isCredit, String newTitle, double newAmount) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cItem\u003e arr \u003d isCredit ? expenses.credit : expenses.debit;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Item toChange \u003d arr.get(item.index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        double initial \u003d toChange.amount;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        toChange.title \u003d newTitle;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        toChange.amount \u003d newAmount;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        expenses.balance +\u003d isCredit ? newAmount - initial : initial - newAmount;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.set(item.index, toChange);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        render();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        fields.getChildren().remove(saveButton);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void setAmount() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        double amt \u003d expenses.balance;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        amount.setText(Double.toString(amt));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (amt \u003c 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            setError(\"Your balance is negative!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Clears the whole window and repopulates it with credit items, debit items and balance."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void render() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        creditColumn.getChildren().clear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        debitColumn.getChildren().clear();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        clearError();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        AtomicInteger index \u003d new AtomicInteger(0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        List\u003cColumnItem\u003e creditItems \u003d expenses.credit"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .map(i -\u003e new ColumnItem(i.title, Double.toString(i.amount), true, index.getAndIncrement()))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        index.set(0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        List\u003cColumnItem\u003e debitItems \u003d expenses.debit"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .map(i -\u003e new ColumnItem(i.title, Double.toString(i.amount), false, index.getAndIncrement()))"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        creditColumn.getChildren().addAll(creditItems);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        debitColumn.getChildren().addAll(debitItems);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        setAmount();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void clearError() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        error.setText(\"\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void setExpensesObject(Expenses e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        expenses \u003d e;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void setListeners() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        credit.setOnAction(e -\u003e handleInput(true));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        debit.setOnAction(e -\u003e handleInput(false));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void handleInput(boolean isCredit) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        clearError();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String desc \u003d title.getText();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String amount \u003d amt.getText();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        double a;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (desc.isBlank() || amount.isBlank()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            setError(\"Both fields must be non-empty!\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            a \u003d Double.parseDouble(amount);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (a \u003c\u003d 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                setError(\"Amount must be positive\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            setError(\"Your amount must be a real number!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (isCredit) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            expenses.add(desc, a, true);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            expenses.add(desc, a, false);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        setAmount();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        save();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        render();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void save() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            expenses.save();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            setError(\"I could not save your changes. Try again later!\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 197
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Duke duke \u003d new Duke(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWIndow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            BorderPane bp \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Scene scene \u003d new Scene(bp);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            stage.setTitle(\"Duke Bot\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.Hyperlink;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.scene.text.TextFlow;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.stage.FileChooser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.stage.Modality;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class MainWindow extends BorderPane {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/surprisedpikachu.jpg\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/my_tweet.png\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void setDuke(Duke d) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] openingMessages \u003d duke.getWelcomeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        DialogBox[] boxes \u003d new DialogBox[openingMessages.length];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (int i \u003d 0; i \u003c openingMessages.length; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            boxes[i] \u003d DialogBox.getDukeDialog(openingMessages[i], dukeImage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().addAll(boxes);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (input.equals(\"clear\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            clearConsole();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            showHelpModal();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (input.equals(\"import\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            importNoOverWrite();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (input.equals(\"overwrite\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            importWithOverwrite();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d duke.run(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        DialogBox[] a \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().addAll(a);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialogNoPic(makeLine()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String makeLine() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"_____________________________________\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private DialogBox[] produceDialogBoxes(String[] arr) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        DialogBox[] a \u003d new DialogBox[arr.length];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                a[i] \u003d DialogBox.getDukeDialog(arr[i], dukeImage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                a[i] \u003d DialogBox.getDukeDialogNoPic(arr[i]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return a;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void showModal(String title, Pos pos, Node... items) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final Stage dialog \u003d new Stage();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setTitle(title);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setMinWidth(300);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.initModality(Modality.APPLICATION_MODAL);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        VBox dialogVbox \u003d new VBox(15);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogVbox.setAlignment(pos);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogVbox.setPadding(new Insets(20, 20, 20, 20));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogVbox.getChildren().addAll(items);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Scene dialogScene \u003d new Scene(dialogVbox);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.setScene(dialogScene);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialog.show();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void showAboutModal() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text dukeName \u003d new Text(\"Duke v1.0\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dukeName.setLineSpacing(1.0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Hyperlink link \u003d new Hyperlink();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Font futura \u003d Font.font(\"Futura Hv BT\", 14);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        link.setText(\"View the repository\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        link.setFont(futura);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        link.setOnAction(e -\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                Desktop.getDesktop().browse(new URL(\"https://github.com/timothyleong97/duke\").toURI());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (IOException | URISyntaxException ex) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text authorName \u003d new Text(\"Timothy Leong, 2019\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dukeName.setFont(futura);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        authorName.setFont(futura);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        showModal(\"About Duke\", Pos.CENTER, dukeName, authorName, link);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void showHelpModal() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text header \u003d new Text();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        header.setUnderline(true);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        header.setText(\"Commands\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        header.setFont(Font.font(\"System\", 12));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow bye \u003d makeCommand(\"bye\", \"Exits the application.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow deadline \u003d makeCommand(\"deadline \u003ctask\u003e /by \u003cdd/mm/yyyy hhmm\u003e\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \"Creates a task with a deadline.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow done \u003d makeCommand(\"done \u003cindex number\u003e\", \"Marks a task as done.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow todo \u003d makeCommand(\"todo \u003ctask name\u003e\", \"Creates a to-do item.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow delete \u003d makeCommand(\"delete \u003crange\u003e\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \"e.g delete 1-4,6-9,12 will delete items 1 through 4, 6 through 9 and 12.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow list \u003d makeCommand(\"list\", \"Lists all items.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow rmdone \u003d makeCommand(\"rmdone\", \"Deletes all completed items.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow clear \u003d makeCommand(\"clear\", \"Clears the console.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow help \u003d makeCommand(\"help\", \"Shows this window.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow importNoOver \u003d makeCommand(\"import\", \"Opens file selector for importing w/o overwrite\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow importOver \u003d makeCommand(\"overwrite\", \"Opens file selector for importing with overwrite\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow find \u003d makeCommand(\"find \u003ckeyword\u003e\", \"Returns a list of tasks that contain the keyword\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow event \u003d makeCommand(\"event \u003cname\u003e /at \u003cdd/mm/yyyy hhmm\u003e\", \"Creates an event that starts at the given time.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final TextFlow deleteAll \u003d makeCommand(\"deleteAll\", \"Delete all tasks.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text glossary \u003d new Text();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        glossary.setUnderline(true);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        glossary.setText(\"Glossary\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        glossary.setFont(Font.font(\"System\", 12));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        TextFlow overwriteMeaning \u003d makeCommand(\"Importing with overwrite\","
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \"Replace current tasks in Duke with tasks from the imported file\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        TextFlow noverwriteMeaning \u003d makeCommand(\"Importing without overwrite\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \"Add tasks from file to currently existing tasks in Duke.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        showModal(\"Help\", Pos.TOP_LEFT, header, bye, clear, deadline, delete, deleteAll, done, event,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                find, help, importNoOver, list, importOver, rmdone, todo, glossary,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                overwriteMeaning, noverwriteMeaning);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TextFlow makeCommand(String command, String desc) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        TextFlow flow \u003d new TextFlow();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Font v \u003d Font.font(\"Verdana\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        flow.setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text c \u003d new Text();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        c.setFont(v);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        c.setText(command);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        c.setStyle(\"-fx-font-weight: bold\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Text d \u003d new Text();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        d.setFont(v);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        d.setText(\" - \" + desc);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        flow.getChildren().addAll(c, d);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return flow;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Goodbye!\", dukeImage));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        CompletableFuture.delayedExecutor(100, TimeUnit.MILLISECONDS).execute(() -\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void importNoOverWrite() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        importFile(false);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void importWithOverwrite() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        importFile(true);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void importFile(boolean overwrite) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        File selected \u003d getFile();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (selected !\u003d null) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (overwrite) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    duke.loadTasksWithOverwrite(selected.getCanonicalPath());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String[] response \u003d new String[]{\"Overwrite from \" + selected.getName() + \" was successful!\"};"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    DialogBox[] a \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    dialogContainer.getChildren().addAll(a);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    userInput.clear();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    duke.loadTasksWithNoOverwrite(selected.getCanonicalPath());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String[] response \u003d new String[]{\"Import from \" + selected.getName() + \" was successful!\"};"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    DialogBox[] a \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    dialogContainer.getChildren().addAll(a);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    userInput.clear();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                String[] response \u003d new String[]{\"I could not read from \" + selected.getName() + \". Sorry!\"};"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                DialogBox[] a \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                dialogContainer.getChildren().addAll(a);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                userInput.clear();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private File getFile() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final Stage dialog \u003d new Stage();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        FileChooser fileChooser \u003d new FileChooser();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        fileChooser.setInitialFileName(\"duke.txt\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        fileChooser.getExtensionFilters().addAll("
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                new FileChooser.ExtensionFilter(\"Text Files\", \"*.txt\")"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return fileChooser.showOpenDialog(dialog);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void deleteCompleted() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d duke.deleteCompletedTasks();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        DialogBox[] boxes \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().addAll(boxes);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void clearConsole() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().clear();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void startExpenses() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        final Stage stage \u003d new Stage();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        stage.setTitle(\"Expenses Tracker\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            (new ExpensesMain()).start(stage);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void deleteAll() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d duke.deleteAll();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        DialogBox[] boxes \u003d produceDialogBoxes(response);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        dialogContainer.getChildren().addAll(boxes);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 285
    }
  },
  {
    "path": "src/main/java/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddDeadlineCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddDeadlineCommand(String taskName, Date deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.DEADLINE).description(taskName).deadline(deadline).build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.addTask(temp);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 27
    }
  },
  {
    "path": "src/main/java/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddEventCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddEventCommand(String taskName, Date date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.EVENT).description(taskName).timeframe(date).build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.addTask(temp);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 27
    }
  },
  {
    "path": "src/main/java/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddTodoCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.TODO).description(description).build();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.addTask(temp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 23
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * An interface for creating commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param storage  refers to the Storage instance. This object allows any commands that edit the Tasklist to save"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *                 changes onto file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param taskList refers to the TaskList instance. This object allows the list of items to change."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String[] execute(Storage storage, TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * All commands will return false with the exception of EndSessionCommand. Used to determine if Ui should remain"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * active."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return whether Duke should continue staying active or terminate."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 26
    }
  },
  {
    "path": "src/main/java/commands/DeleteAllCompletedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DeleteAllCompletedCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.removeCompletedTasks();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 13
    }
  },
  {
    "path": "src/main/java/commands/DeleteAllTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DeleteAllTasksCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.deleteAll();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 13
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ArrayList\u003cInteger\u003e indices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * A command to delete dynamically"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param restOfLine"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public DeleteCommand(String restOfLine) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //should parse \"2-3,5-7,10,15\" as [1,2,4,5,6,9,14] -\u003e expand the hyphen and --1 from each"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Scanner sc \u003d new Scanner(restOfLine).useDelimiter(\",\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String next;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                next \u003d sc.next().trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (next.contains(\"-\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    //range"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    Scanner another \u003d new Scanner(next).useDelimiter(\"-\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int start \u003d another.nextInt() - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int end \u003d another.nextInt() - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (start \u003e end) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        throw new DukeException(\"You entered an invalid number range.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        indices.add(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int index \u003d Integer.parseInt(next) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    indices.add(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                indices.sort(Comparator.naturalOrder());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                throw new DukeException(\"Your numbering format seems incorrect :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        // String[] t \u003d new String[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        // IndexOutOfBoundsException is thrown from components.TaskList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //copy undeleted tasks into new list in tasklist. Return a list of all deleted tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cTask\u003e deleted \u003d taskList.batchDelete(this.indices);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp.add(\"Noted. I\u0027ve removed \" + (deleted.size() \u003d\u003d 1 ? \"this task:\" : \"these tasks:\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Task task : deleted) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            temp.add(task.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getArr();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp.add(\"Now you have \" + tasks.size()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return temp.toArray(new String[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 65
    }
  },
  {
    "path": "src/main/java/commands/DisplayTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DisplayTasksCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return taskList.displayList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 11
    }
  },
  {
    "path": "src/main/java/commands/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DoneTaskCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public DoneTaskCommand(int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //IndexOutOfBoundsException is thrown as a DukeException in the components.TaskList class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] response \u003d taskList.markAsDone(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 20
    }
  },
  {
    "path": "src/main/java/commands/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "src/main/java/commands/EndSessionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class EndSessionCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] t \u003d new String[]{\"Goodbye!\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        CompletableFuture.delayedExecutor(500, TimeUnit.MILLISECONDS).execute(() -\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 26
    }
  },
  {
    "path": "src/main/java/commands/FindTasksByKeywordCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class FindTasksByKeywordCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public FindTasksByKeywordCommand(String keyword) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return taskList.findTaskByKeywordAndPrintList(keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 18
    }
  },
  {
    "path": "src/main/java/commands/PrintUserInputErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class PrintUserInputErrorCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public PrintUserInputErrorCommand(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return new String[]{message};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/commands/UnrecognisedInputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class UnrecognisedInputCommand implements Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return new String[] {\"Oops! I\u0027m sorry, but I don\u0027t know what that means :-(\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 12
    }
  },
  {
    "path": "src/main/java/components/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns a date from a string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static Date parseAsDate(String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return dateFormatter.parse(str, new ParsePosition(0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param fullCommand the name of the string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a Command to execute"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String firstWord \u003d sc.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"deleteAll\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new DeleteAllTasksCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"rmdone\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new DeleteAllCompletedCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                String keyword \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new FindTasksByKeywordCommand(keyword);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"OOPS!!! You must give me a keyword to perform a search.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new AddTodoCommand(taskName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String deadline \u003d \"\", taskName \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String s \u003d sc.next();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (s.equals(\"/by\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        deadline \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (!deadline.isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    Date date \u003d parseAsDate(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new AddDeadlineCommand(taskName, date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            taskName \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String timeFrame \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String s \u003d sc.next();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (s.equals(\"/at\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        timeFrame \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (!timeFrame.isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    Date date \u003d parseAsDate(timeFrame);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new AddEventCommand(taskName, date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"Oops!!! The time frame of an event cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"Oops!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new DeleteCommand(sc.nextLine());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"You need to give me something to delete!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new EndSessionCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new DisplayTasksCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new DoneTaskCommand(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new PrintUserInputErrorCommand(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new UnrecognisedInputCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 118
    }
  },
  {
    "path": "src/main/java/components/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Overwrites entire file with current items."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e arr) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //First delete the old file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            file.delete();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //Write the objects to file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileOutputStream fout \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(fout)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //First piece of data is how many objects there are"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            oos.writeInt(arr.size());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //Subsequently, all the tasks are written in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (Task task : arr) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                oos.writeObject(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I could not save your updated list to my file :( Please try again.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns an arraylist of Tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return an empty ArrayList if file has not been created or is empty,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *  and the ArrayList of existing Tasks otherwise."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileInputStream fi \u003d new FileInputStream(new File(filepath));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectInputStream oi \u003d new ObjectInputStream(fi)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //numObjects refers to how many Tasks were stored in this file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            int numObjects \u003d oi.readInt();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (int i \u003d 0; i \u003c numObjects; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                Task t \u003d (Task) oi.readObject();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I didn\u0027t detect any file with tasks in it! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I had an issue reading your items from memory! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"Your data does not resemble any format I know. I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 68
    }
  },
  {
    "path": "src/main/java/components/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cTask\u003e getArr() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Initialises a Tasklist with files loaded from storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Adds a task to arraylist. Does not save changes to file. Use Storage to commit changes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param task refers to the task to add."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] temp \u003d new String[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp[0] \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp[1] \u003d task.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp[2] \u003d \"Now you have \" + arr.size() + (arr.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns the tasks.Task that was removed, or null in the case of an IndexOutOfBoundsException."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param index of the task to be removed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return the tasks.Task or null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return arr.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"Oops! You have entered a number out of range.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Delete a batch of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param indicesToDeleteAt containing all the indices of the tasks to delete."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return an arraylist of deleted tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cTask\u003e batchDelete(ArrayList\u003cInteger\u003e indicesToDeleteAt) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cTask\u003e deleted \u003d new ArrayList\u003c\u003e(indicesToDeleteAt"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    .map(i -\u003e arr.get(i)).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            arr.removeAll(deleted);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return deleted;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"Oops! You have entered a number out of range.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Delete all items currently in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a string array with a success message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] deleteAll() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return new String[]{\"All items have been deleted.\"};"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Switch a cross to a tick to mark a task as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param index of the task to be marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String[] temp \u003d new String[2];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            arr.get(index).markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            temp[0] \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            temp[1] \u003d arr.get(index).toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"Oops! You have entered a number out of range.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Display all tasks on the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] displayList() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cString\u003e t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (arr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            t.add(\"You currently have no tasks in your list!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return t.toArray(new String[0]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        t.add(\"Here are the current tasks in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        t.addAll(generateList());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return t.toArray(new String[0]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ArrayList\u003cString\u003e generateList() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Task t : arr) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            temp.add(++i + \". \" + t);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Scan through array and delete completed tasks."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a String array of all tasks that were deleted."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] removeCompletedTasks() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.removeIf(t -\u003e t.isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp.add(\"I\u0027ve removed all the tasks marked as done!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String[] list \u003d displayList();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        temp.addAll(Arrays.asList(list));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return temp.toArray(new String[0]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Finds all tasks that match a keyword"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a String array of these tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String[] findTaskByKeywordAndPrintList(String str) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        list.add(\"Placeholder for first line\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Task task : arr) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                list.add(task.toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (list.size() \u003d\u003d 1 \u0026\u0026 list.get(0).equals(\"Placeholder for first line\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            list.set(0, \"I could not find any matching tasks with this keyword: \" + str);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return list.toArray(new String[0]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        list.set(0, \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return list.toArray(new String[0]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 156
    }
  },
  {
    "path": "src/main/java/expenses/Expenses.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Expenses {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ExpensesStorage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cItem\u003e credit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cItem\u003e debit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public double balance \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String initialisationErrorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Create an expenses object that stores credit and debit items and can access storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Expenses() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage \u003d new ExpensesStorage(\"src/data/expenses.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cArrayList\u003cItem\u003e\u003e lists \u003d storage.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            credit \u003d lists.get(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            debit \u003d lists.get(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            initialisationErrorMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            credit \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            debit \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Item i:credit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            balance +\u003d i.amount;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Item i:debit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            balance -\u003d i.amount;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param title"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param amount"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param isCredit"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void add(String title, double amount, boolean isCredit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (isCredit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            balance +\u003d amount;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            credit.add(new Item(title, amount, true));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            balance -\u003d amount;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            debit.add(new Item(title, amount, false));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void remove(int index, boolean isCredit) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (isCredit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                balance -\u003d credit.get(index).amount;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                credit.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                balance +\u003d debit.get(index).amount;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                debit.remove(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"You entered an index out of range!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void save() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(credit,debit);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 71
    }
  },
  {
    "path": "src/main/java/expenses/ExpensesStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ExpensesStorage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ExpensesStorage(String filepath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Overwrites entire file with current items"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void save(ArrayList\u003cItem\u003e credit, ArrayList\u003cItem\u003e debit) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //First delete the old file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            file.delete();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileOutputStream fout \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(fout)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            oos.writeInt(credit.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (Item i : credit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                oos.writeObject(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            oos.writeInt(debit.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (Item i : debit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                oos.writeObject(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            System.out.println(Arrays.toString(e.getStackTrace()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I could not save your updated list to my file :( Please try again.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns an arraylist of arraylist of Items. The first list is the credit, the second is the debit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return an empty ArrayList if file has not been created or is empty,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *     and the ArrayList of existing Items otherwise."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ArrayList\u003cArrayList\u003cItem\u003e\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileInputStream fi \u003d new FileInputStream(new File(filepath));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectInputStream oi \u003d new ObjectInputStream(fi)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cArrayList\u003cItem\u003e\u003e lists \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cItem\u003e credits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            int creditItems \u003d oi.readInt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (int i \u003d 0; i \u003c creditItems; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                credits.add((Item) oi.readObject());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cItem\u003e debits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            int debitItems \u003d oi.readInt();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (int i \u003d 0; i \u003c debitItems; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                debits.add((Item) oi.readObject());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            lists.add(credits);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            lists.add(debits);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return lists;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I didn\u0027t detect any file with expenses in it! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"I had an issue reading your items from memory! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            throw new DukeException(\"Your data does not resemble any format I know. I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 76
    }
  },
  {
    "path": "src/main/java/expenses/Item.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Item implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private boolean isCredit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final long serialVersionUID \u003d 42L;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Constructs a credit or debit item."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param title of the item"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param amount credited or debited"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param isCredit whether this item is a credit or debit item"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Item(String title, double amount, boolean isCredit) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.isCredit \u003d isCredit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 22
    }
  },
  {
    "path": "src/main/java/expenses/ItemInfo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ItemInfo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public boolean isCredit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ItemInfo(boolean isCredit, int index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.isCredit \u003d isCredit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 11
    }
  },
  {
    "path": "src/main/java/expenses/TrackingService.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package expenses;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import rxjava.Subject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class TrackingService {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static TrackingService service;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static Subject\u003cItemInfo\u003e deleteItemSubject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static Subject\u003cItemInfo\u003e editItemSubject;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TrackingService() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        deleteItemSubject \u003d new Subject\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        editItemSubject \u003d new Subject\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns a single instance of the tracking service."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return the singleton"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static TrackingService getTrackingService() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (service \u003d\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            service \u003d new TrackingService();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return service;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void updateDeletionSubject(ItemInfo item) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        deleteItemSubject.next(item);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void updateEditSubject(ItemInfo item) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        editItemSubject.next(item);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static Subject\u003cItemInfo\u003e getDeleteItemSubject() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return deleteItemSubject;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static Subject\u003cItemInfo\u003e getEditItemSubject() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return editItemSubject;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 43
    }
  },
  {
    "path": "src/main/java/rxjava/BehaviourSubject.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package rxjava;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class BehaviourSubject\u003cT\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ArrayList\u003cSubscription\u003cT\u003e\u003e subs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private T current;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void next(T thing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        current \u003d thing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        subs.forEach(subscription -\u003e subscription.update(thing));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public BehaviourSubject(T current) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.current \u003d current;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003cR\u003e Subscription\u003cT\u003e subscribe(Consumer\u003cT\u003e callback) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Subscription\u003cT\u003e sub \u003d new Subscription\u003c\u003e(callback);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        sub.update(current);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        subs.add(sub);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return sub;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 25
    }
  },
  {
    "path": "src/main/java/rxjava/Subject.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package rxjava;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A class that pushes notifications."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * @param \u003cT\u003e the generic type of the data that this class should push to listening objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Subject\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ArrayList\u003cSubscription\u003cT\u003e\u003e subs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void next(T thing) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        subs.forEach(subscription -\u003e subscription.update(thing));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Creates a subscription that listens to the latest value pushed by Subject."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param callback called when new value is received by subject."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a subscription that can run a Consumer on receiving a new value."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Subscription\u003cT\u003e subscribe(Consumer\u003cT\u003e callback) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Subscription\u003cT\u003e sub \u003d new Subscription\u003c\u003e(callback);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        subs.add(sub);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return sub;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 27
    }
  },
  {
    "path": "src/main/java/rxjava/Subscription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package rxjava;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Subscription\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Consumer\u003cT\u003e callback;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void update(T thing) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        callback.accept(thing);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Subscription(Consumer\u003cT\u003e f) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.callback \u003d f;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 15
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Deadline(String description, Date deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date timeframe;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Event(String description, Date timeframe) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.timeframe \u003d timeframe;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + timeframe + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A tasks.Task class representing a task with a isDone component."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final long serialVersionUID \u003d 42L;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 40
    }
  },
  {
    "path": "src/main/java/tasks/TaskBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "// TODO: 29/8/2019 Validation of required fields before building "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date timeframe;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder type(TaskType t) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.type \u003d t;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder description(String d) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        description \u003d d;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder deadline(Date d) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        deadline \u003d d;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder timeframe(Date t) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        timeframe \u003d t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Builds the correct task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return a Task of the correct class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new ToDo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new Event(description, timeframe);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new Deadline(description, deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 49
    }
  },
  {
    "path": "src/main/java/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 5
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 13
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"3.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cHBox fx:id\u003d\"circleBox\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"-1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cInsets top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" radius\u003d\"30\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Circle\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 28
    }
  },
  {
    "path": "src/main/resources/view/Expenses.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003cBorderPane minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ExpensesWindow\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003ccenter\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003cSplitPane dividerPositions\u003d\"0.5\" prefHeight\u003d\"160.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003citems\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"122.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"397.0\" text\u003d\"Credit\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"198.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"-1.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" layoutY\u003d\"30.0\" pannable\u003d\"true\" prefHeight\u003d\"198.0\" prefWidth\u003d\"296.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"30.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cVBox fx:id\u003d\"creditColumn\" prefHeight\u003d\"142.0\" prefWidth\u003d\"212.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"32.0\" prefWidth\u003d\"396.0\" text\u003d\"Debit\" textAlignment\u003d\"CENTER\" AnchorPane.bottomAnchor\u003d\"196.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" layoutY\u003d\"30.0\" pannable\u003d\"true\" prefHeight\u003d\"198.0\" prefWidth\u003d\"340.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"30.0\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cVBox fx:id\u003d\"debitColumn\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/items\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003c/center\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003cbottom\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"70.0\" prefWidth\u003d\"600.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"53.0\" prefWidth\u003d\"282.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cLabel text\u003d\"Balance: \" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cLabel id\u003d\"amount\" fx:id\u003d\"amount\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cLabel fx:id\u003d\"error\" text\u003d\"\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003c/bottom\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003ctop\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003cHBox fx:id\u003d\"fields\" alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" spacing\u003d\"5.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cLabel text\u003d\"Title:\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cTextField fx:id\u003d\"title\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cLabel text\u003d\" Amount:\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cTextField fx:id\u003d\"amt\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cButton fx:id\u003d\"credit\" mnemonicParsing\u003d\"false\" text\u003d\"+\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cButton fx:id\u003d\"debit\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"26.0\" prefWidth\u003d\"27.0\" text\u003d\"-\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "   \u003c/top\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 73
    }
  },
  {
    "path": "src/main/resources/view/Item.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER\" maxHeight\u003d\"3.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"58.0\" prefWidth\u003d\"296.0\" spacing\u003d\"10.0\" HBox.hgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cLabel fx:id\u003d\"name\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"100.0\" text\u003d\"Label\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cLabel fx:id\u003d\"amnt\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"100.0\" text\u003d\"Label\" HBox.hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cButton fx:id\u003d\"edit\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"26.0\" prefWidth\u003d\"46.0\" text\u003d\"Edit\" HBox.hgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cButton fx:id\u003d\"delete\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"26.0\" prefWidth\u003d\"66.0\" text\u003d\"Delete\" HBox.hgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWIndow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003cBorderPane xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003ctop\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cMenuBar BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#importNoOverWrite\" text\u003d\"Import Tasks From File w/o Overwrite\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#importWithOverwrite\" text\u003d\"Import Tasks From File with Overwrite\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#exit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Actions\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#deleteCompleted\" text\u003d\"Delete all completed tasks\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#deleteAll\" text\u003d\"Delete all tasks\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#clearConsole\" text\u003d\"Clear console\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Other tools...\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#startExpenses\" text\u003d\"Expenses Tracker\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#showHelpModal\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cMenuItem fx:id\u003d\"aboutButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showAboutModal\" text\u003d\"About\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003c/top\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003cScrollPane fx:id\u003d\"scrollPane\" focusTraversable\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003ccontent\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #fbfbfb;\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    \u003c/content\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 58
    }
  },
  {
    "path": "src/test/java/EndSessionCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.EndSessionCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class EndSessionCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        EndSessionCommand c \u003d new EndSessionCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        assertTrue(c.isExit());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 12
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String testPath \u003d \"src/test/data/test.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void save() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage storage \u003d new Storage(testPath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //filepath is purposely wrong to test error handling."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage storage \u003d new Storage(testPath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        assertEquals(0, storage.load().size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 24
    }
  },
  {
    "path": "text-ui-test/actual.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "del ACTUAL.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 21
    }
  }
]
